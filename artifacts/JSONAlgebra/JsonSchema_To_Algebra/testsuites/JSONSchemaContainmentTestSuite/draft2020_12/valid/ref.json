[
    {
        "id": 1,
        "schema1": {
            "const": {
                "foo": false
            }
        },
        "schema2": {
            "properties": {
                "foo": {
                    "$ref": "#"
                }
            },
            "additionalProperties": false
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 2,
        "schema1": {
            "const": {
                "foo": {
                    "foo": false
                }
            }
        },
        "schema2": {
            "properties": {
                "foo": {
                    "$ref": "#"
                }
            },
            "additionalProperties": false
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 3,
        "schema1": {
            "const": {
                "bar": false
            }
        },
        "schema2": {
            "properties": {
                "foo": {
                    "$ref": "#"
                }
            },
            "additionalProperties": false
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 4,
        "schema1": {
            "const": {
                "foo": {
                    "bar": false
                }
            }
        },
        "schema2": {
            "properties": {
                "foo": {
                    "$ref": "#"
                }
            },
            "additionalProperties": false
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 5,
        "schema1": {
            "const": {
                "bar": 3
            }
        },
        "schema2": {
            "properties": {
                "foo": {
                    "type": "integer"
                },
                "bar": {
                    "$ref": "#/properties/foo"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 6,
        "schema1": {
            "const": {
                "bar": true
            }
        },
        "schema2": {
            "properties": {
                "foo": {
                    "type": "integer"
                },
                "bar": {
                    "$ref": "#/properties/foo"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 7,
        "schema1": {
            "const": [
                1,
                2
            ]
        },
        "schema2": {
            "prefixItems": [
                {
                    "type": "integer"
                },
                {
                    "$ref": "#/prefixItems/0"
                }
            ]
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 8,
        "schema1": {
            "const": [
                1,
                "foo"
            ]
        },
        "schema2": {
            "prefixItems": [
                {
                    "type": "integer"
                },
                {
                    "$ref": "#/prefixItems/0"
                }
            ]
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 9,
        "schema1": {
            "const": {
                "slash": "aoeu"
            }
        },
        "schema2": {
            "$defs": {
                "tilde~field": {
                    "type": "integer"
                },
                "slash/field": {
                    "type": "integer"
                },
                "percent%field": {
                    "type": "integer"
                }
            },
            "properties": {
                "tilde": {
                    "$ref": "#/$defs/tilde~0field"
                },
                "slash": {
                    "$ref": "#/$defs/slash~1field"
                },
                "percent": {
                    "$ref": "#/$defs/percent%25field"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 10,
        "schema1": {
            "const": {
                "tilde": "aoeu"
            }
        },
        "schema2": {
            "$defs": {
                "tilde~field": {
                    "type": "integer"
                },
                "slash/field": {
                    "type": "integer"
                },
                "percent%field": {
                    "type": "integer"
                }
            },
            "properties": {
                "tilde": {
                    "$ref": "#/$defs/tilde~0field"
                },
                "slash": {
                    "$ref": "#/$defs/slash~1field"
                },
                "percent": {
                    "$ref": "#/$defs/percent%25field"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 11,
        "schema1": {
            "const": {
                "percent": "aoeu"
            }
        },
        "schema2": {
            "$defs": {
                "tilde~field": {
                    "type": "integer"
                },
                "slash/field": {
                    "type": "integer"
                },
                "percent%field": {
                    "type": "integer"
                }
            },
            "properties": {
                "tilde": {
                    "$ref": "#/$defs/tilde~0field"
                },
                "slash": {
                    "$ref": "#/$defs/slash~1field"
                },
                "percent": {
                    "$ref": "#/$defs/percent%25field"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 12,
        "schema1": {
            "const": {
                "slash": 123
            }
        },
        "schema2": {
            "$defs": {
                "tilde~field": {
                    "type": "integer"
                },
                "slash/field": {
                    "type": "integer"
                },
                "percent%field": {
                    "type": "integer"
                }
            },
            "properties": {
                "tilde": {
                    "$ref": "#/$defs/tilde~0field"
                },
                "slash": {
                    "$ref": "#/$defs/slash~1field"
                },
                "percent": {
                    "$ref": "#/$defs/percent%25field"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 13,
        "schema1": {
            "const": {
                "tilde": 123
            }
        },
        "schema2": {
            "$defs": {
                "tilde~field": {
                    "type": "integer"
                },
                "slash/field": {
                    "type": "integer"
                },
                "percent%field": {
                    "type": "integer"
                }
            },
            "properties": {
                "tilde": {
                    "$ref": "#/$defs/tilde~0field"
                },
                "slash": {
                    "$ref": "#/$defs/slash~1field"
                },
                "percent": {
                    "$ref": "#/$defs/percent%25field"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 14,
        "schema1": {
            "const": {
                "percent": 123
            }
        },
        "schema2": {
            "$defs": {
                "tilde~field": {
                    "type": "integer"
                },
                "slash/field": {
                    "type": "integer"
                },
                "percent%field": {
                    "type": "integer"
                }
            },
            "properties": {
                "tilde": {
                    "$ref": "#/$defs/tilde~0field"
                },
                "slash": {
                    "$ref": "#/$defs/slash~1field"
                },
                "percent": {
                    "$ref": "#/$defs/percent%25field"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 15,
        "schema1": {
            "const": 5
        },
        "schema2": {
            "$defs": {
                "a": {
                    "type": "integer"
                },
                "b": {
                    "$ref": "#/$defs/a"
                },
                "c": {
                    "$ref": "#/$defs/b"
                }
            },
            "$ref": "#/$defs/c"
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 16,
        "schema1": {
            "const": "a"
        },
        "schema2": {
            "$defs": {
                "a": {
                    "type": "integer"
                },
                "b": {
                    "$ref": "#/$defs/a"
                },
                "c": {
                    "$ref": "#/$defs/b"
                }
            },
            "$ref": "#/$defs/c"
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 17,
        "schema1": {
            "const": {
                "foo": []
            }
        },
        "schema2": {
            "$defs": {
                "reffed": {
                    "type": "array"
                }
            },
            "properties": {
                "foo": {
                    "$ref": "#/$defs/reffed",
                    "maxItems": 2
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 18,
        "schema1": {
            "const": {
                "foo": [
                    1,
                    2,
                    3
                ]
            }
        },
        "schema2": {
            "$defs": {
                "reffed": {
                    "type": "array"
                }
            },
            "properties": {
                "foo": {
                    "$ref": "#/$defs/reffed",
                    "maxItems": 2
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 19,
        "schema1": {
            "const": {
                "foo": "string"
            }
        },
        "schema2": {
            "$defs": {
                "reffed": {
                    "type": "array"
                }
            },
            "properties": {
                "foo": {
                    "$ref": "#/$defs/reffed",
                    "maxItems": 2
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 20,
        "schema1": {
            "const": {
                "minLength": 1
            }
        },
        "schema2": {
            "$ref": "https://json-schema.org/draft/2020-12/schema"
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 21,
        "schema1": {
            "const": {
                "minLength": -1
            }
        },
        "schema2": {
            "$ref": "https://json-schema.org/draft/2020-12/schema"
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 22,
        "schema1": {
            "const": {
                "$ref": "a"
            }
        },
        "schema2": {
            "properties": {
                "$ref": {
                    "type": "string"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 23,
        "schema1": {
            "const": {
                "$ref": 2
            }
        },
        "schema2": {
            "properties": {
                "$ref": {
                    "type": "string"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 24,
        "schema1": {
            "const": {
                "$ref": "a"
            }
        },
        "schema2": {
            "properties": {
                "$ref": {
                    "$ref": "#/$defs/is-string"
                }
            },
            "$defs": {
                "is-string": {
                    "type": "string"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 25,
        "schema1": {
            "const": {
                "$ref": 2
            }
        },
        "schema2": {
            "properties": {
                "$ref": {
                    "$ref": "#/$defs/is-string"
                }
            },
            "$defs": {
                "is-string": {
                    "type": "string"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 26,
        "schema1": {
            "const": "foo"
        },
        "schema2": {
            "$ref": "#/$defs/bool",
            "$defs": {
                "bool": true
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 27,
        "schema1": {
            "const": "foo"
        },
        "schema2": {
            "$ref": "#/$defs/bool",
            "$defs": {
                "bool": false
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 28,
        "schema1": {
            "const": {
                "meta": "root",
                "nodes": [
                    {
                        "value": 1,
                        "subtree": {
                            "meta": "child",
                            "nodes": [
                                {
                                    "value": 1.1
                                },
                                {
                                    "value": 1.2
                                }
                            ]
                        }
                    },
                    {
                        "value": 2,
                        "subtree": {
                            "meta": "child",
                            "nodes": [
                                {
                                    "value": 2.1
                                },
                                {
                                    "value": 2.2
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "schema2": {
            "$id": "http://localhost:1234/tree",
            "description": "tree of nodes",
            "type": "object",
            "properties": {
                "meta": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "node"
                    }
                }
            },
            "required": [
                "meta",
                "nodes"
            ],
            "$defs": {
                "node": {
                    "$id": "http://localhost:1234/node",
                    "description": "node",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number"
                        },
                        "subtree": {
                            "$ref": "tree"
                        }
                    },
                    "required": [
                        "value"
                    ]
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 29,
        "schema1": {
            "const": {
                "meta": "root",
                "nodes": [
                    {
                        "value": 1,
                        "subtree": {
                            "meta": "child",
                            "nodes": [
                                {
                                    "value": "string is invalid"
                                },
                                {
                                    "value": 1.2
                                }
                            ]
                        }
                    },
                    {
                        "value": 2,
                        "subtree": {
                            "meta": "child",
                            "nodes": [
                                {
                                    "value": 2.1
                                },
                                {
                                    "value": 2.2
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "schema2": {
            "$id": "http://localhost:1234/tree",
            "description": "tree of nodes",
            "type": "object",
            "properties": {
                "meta": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "node"
                    }
                }
            },
            "required": [
                "meta",
                "nodes"
            ],
            "$defs": {
                "node": {
                    "$id": "http://localhost:1234/node",
                    "description": "node",
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "number"
                        },
                        "subtree": {
                            "$ref": "tree"
                        }
                    },
                    "required": [
                        "value"
                    ]
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 30,
        "schema1": {
            "const": {
                "foo\"bar": 1
            }
        },
        "schema2": {
            "properties": {
                "foo\"bar": {
                    "$ref": "#/$defs/foo%22bar"
                }
            },
            "$defs": {
                "foo\"bar": {
                    "type": "number"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 31,
        "schema1": {
            "const": {
                "foo\"bar": "1"
            }
        },
        "schema2": {
            "properties": {
                "foo\"bar": {
                    "$ref": "#/$defs/foo%22bar"
                }
            },
            "$defs": {
                "foo\"bar": {
                    "type": "number"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 32,
        "schema1": {
            "const": {
                "prop1": "match"
            }
        },
        "schema2": {
            "$defs": {
                "A": {
                    "unevaluatedProperties": false
                }
            },
            "properties": {
                "prop1": {
                    "type": "string"
                }
            },
            "$ref": "#/$defs/A"
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 33,
        "schema1": {
            "const": "this is a string"
        },
        "schema2": {
            "$defs": {
                "a_string": {
                    "type": "string"
                }
            },
            "enum": [
                {
                    "$ref": "#/$defs/a_string"
                }
            ]
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 34,
        "schema1": {
            "const": {
                "type": "string"
            }
        },
        "schema2": {
            "$defs": {
                "a_string": {
                    "type": "string"
                }
            },
            "enum": [
                {
                    "$ref": "#/$defs/a_string"
                }
            ]
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 35,
        "schema1": {
            "const": {
                "$ref": "#/$defs/a_string"
            }
        },
        "schema2": {
            "$defs": {
                "a_string": {
                    "type": "string"
                }
            },
            "enum": [
                {
                    "$ref": "#/$defs/a_string"
                }
            ]
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 36,
        "schema1": {
            "const": {
                "foo": {
                    "bar": 1
                },
                "bar": "a"
            }
        },
        "schema2": {
            "$id": "http://example.com/schema-relative-uri-defs1.json",
            "properties": {
                "foo": {
                    "$id": "schema-relative-uri-defs2.json",
                    "$defs": {
                        "inner": {
                            "properties": {
                                "bar": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "$ref": "#/$defs/inner"
                }
            },
            "$ref": "schema-relative-uri-defs2.json"
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 37,
        "schema1": {
            "const": {
                "foo": {
                    "bar": "a"
                },
                "bar": 1
            }
        },
        "schema2": {
            "$id": "http://example.com/schema-relative-uri-defs1.json",
            "properties": {
                "foo": {
                    "$id": "schema-relative-uri-defs2.json",
                    "$defs": {
                        "inner": {
                            "properties": {
                                "bar": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "$ref": "#/$defs/inner"
                }
            },
            "$ref": "schema-relative-uri-defs2.json"
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 38,
        "schema1": {
            "const": {
                "foo": {
                    "bar": "a"
                },
                "bar": "a"
            }
        },
        "schema2": {
            "$id": "http://example.com/schema-relative-uri-defs1.json",
            "properties": {
                "foo": {
                    "$id": "schema-relative-uri-defs2.json",
                    "$defs": {
                        "inner": {
                            "properties": {
                                "bar": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "$ref": "#/$defs/inner"
                }
            },
            "$ref": "schema-relative-uri-defs2.json"
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    },
    {
        "id": 39,
        "schema1": {
            "const": {
                "foo": {
                    "bar": 1
                },
                "bar": "a"
            }
        },
        "schema2": {
            "$id": "http://example.com/schema-refs-absolute-uris-defs1.json",
            "properties": {
                "foo": {
                    "$id": "http://example.com/schema-refs-absolute-uris-defs2.json",
                    "$defs": {
                        "inner": {
                            "properties": {
                                "bar": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "$ref": "#/$defs/inner"
                }
            },
            "$ref": "schema-refs-absolute-uris-defs2.json"
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 40,
        "schema1": {
            "const": {
                "foo": {
                    "bar": "a"
                },
                "bar": 1
            }
        },
        "schema2": {
            "$id": "http://example.com/schema-refs-absolute-uris-defs1.json",
            "properties": {
                "foo": {
                    "$id": "http://example.com/schema-refs-absolute-uris-defs2.json",
                    "$defs": {
                        "inner": {
                            "properties": {
                                "bar": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "$ref": "#/$defs/inner"
                }
            },
            "$ref": "schema-refs-absolute-uris-defs2.json"
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 41,
        "schema1": {
            "const": {
                "foo": {
                    "bar": "a"
                },
                "bar": "a"
            }
        },
        "schema2": {
            "$id": "http://example.com/schema-refs-absolute-uris-defs1.json",
            "properties": {
                "foo": {
                    "$id": "http://example.com/schema-refs-absolute-uris-defs2.json",
                    "$defs": {
                        "inner": {
                            "properties": {
                                "bar": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "$ref": "#/$defs/inner"
                }
            },
            "$ref": "schema-refs-absolute-uris-defs2.json"
        },
        "tests": {
            "s1SubsetEqOfs2": true
        }
    }
]