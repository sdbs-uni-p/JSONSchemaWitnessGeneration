{
    "definitions": {
        "datum": {
            "additionalItems": false,
            "description": "Represents a set of data used for machine learning in Jubatus.",
            "items": [
                {
                    "default": [],
                    "description": "Input data represented in string. It is represented as key-value pairs of data. Name of keys cannot contain \u201c$\u201d sign.",
                    "items": {
                        "additionalItems": false,
                        "items": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    "title": "string_values",
                    "type": "array"
                },
                {
                    "default": [],
                    "description": "Input data represented in numeric value. It is represented as key-value pairs of data.",
                    "items": {
                        "additionalItems": false,
                        "items": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ],
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    "title": "num_values",
                    "type": "array"
                },
                {
                    "default": [],
                    "description": "Input data represented in binary value. It is represented as key-value pairs of data.",
                    "items": {
                        "additionalItems": false,
                        "items": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object"
                            }
                        ],
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    "title": "binary_values",
                    "type": "array"
                }
            ],
            "maxItems": 3,
            "minItems": 1,
            "title": "datum",
            "type": "array"
        }
    },
    "properties": {
        "clear": {
            "description": "Completely clears the model at ALL servers.",
            "properties": {
                "arguments": {
                    "additionalItems": false,
                    "maxItems": 0,
                    "minItems": 0,
                    "type": "array"
                },
                "return": {
                    "description": "True when the model was cleared successfully",
                    "type": "boolean"
                }
            },
            "title": "clear"
        },
        "do_mix": {
            "description": "Force cluster to fire mix. Call this RPC to Jubatus server directly. When you call this to proxy, RPC error will be raised.",
            "properties": {
                "arguments": {
                    "additionalItems": false,
                    "maxItems": 0,
                    "minItems": 0,
                    "type": "array"
                },
                "return": {
                    "description": "True when model mixed successfully",
                    "type": "boolean"
                }
            },
            "title": "do_mix"
        },
        "get_config": {
            "description": "Returns server configuration from a server. For format of configuration, see API reference of each services.",
            "properties": {
                "arguments": {
                    "additionalItems": false,
                    "maxItems": 0,
                    "minItems": 0,
                    "type": "array"
                },
                "return": {
                    "description": "server configuration set on initialization",
                    "type": "string"
                }
            },
            "title": "get_config"
        },
        "get_proxy_status": {
            "description": "Returns proxy status. This is an RPC method for proxy. When you use this for server, RPC error will be raised.",
            "properties": {
                "arguments": {
                    "additionalItems": false,
                    "maxItems": 0,
                    "minItems": 0,
                    "type": "array"
                },
                "return": {
                    "description": "Internal state for proxy. The key of most outer map is in form of ipaddr_portnumber.",
                    "type": "object"
                }
            },
            "title": "get_proxy_status"
        },
        "get_status": {
            "description": "Returns server status from ALL servers. Each server is represented by a pair of IP address and port.",
            "properties": {
                "arguments": {
                    "additionalItems": false,
                    "maxItems": 0,
                    "minItems": 0,
                    "type": "array"
                },
                "return": {
                    "description": "Internal state for each servers. The key of most outer map is in form of ipaddr_portnumber.",
                    "type": "object"
                }
            },
            "title": "get_status"
        },
        "load": {
            "description": "Restore the saved model from local disk at ALL servers.",
            "properties": {
                "arguments": {
                    "additionalItems": false,
                    "items": [
                        {
                            "description": "file name to load",
                            "title": "id",
                            "type": "string"
                        }
                    ],
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "array"
                },
                "return": {
                    "description": "True if this function loads files successfully at all servers",
                    "type": "boolean"
                }
            },
            "title": "load"
        },
        "save": {
            "description": "Store the learing model to the local disk at ALL servers.",
            "properties": {
                "arguments": {
                    "additionalItems": false,
                    "items": [
                        {
                            "description": "file name to save",
                            "title": "id",
                            "type": "string"
                        }
                    ],
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "array"
                },
                "return": {
                    "description": "Path to the saved model for each server. The key of the map is in form of ipaddr_portnumber.",
                    "type": "object"
                }
            },
            "title": "save"
        }
    }
}