{
    "gear": {
        "name": "mriqc",
        "label": "MRIQC: No-reference image quality metrics for quality assessment of MRI ",
        "description": "MRIQC (v0.10.1) extracts no-reference IQMs (image quality metrics) from structural (T1w and T2w) and functional MRI (magnetic resonance imaging) data. Note, this gear only supports the generation of individual scan reports; group reports are not generated. Also note, for the auto-detection config option to work for this gear, the follow gears must be run beforehand: (1) dicom-mr-classifier then (2) dcm2niix (version 0.3.1 or higher).",
        "maintainer": "Flywheel <support@flywheel.io>",
        "source": "https://github.com/flywheel-apps/mriqc",
        "url": "https://github.com/poldracklab/mriqc",
        "author": "Oscar Esteban, Krzysztof F. Gorgolewski. Poldrack Lab, Psychology, CRN, Stanford University",
        "cite": "Esteban O, Birman D, Schaer M, Koyejo OO, Poldrack RA, Gorgolewski KJ; MRIQC: Advancing the Automatic Prediction of Image Quality in MRI from Unseen Sites; PLOS ONE 12(9):e0184661; doi:10.1371/journal.pone.0184661.",
        "license": "BSD-3-Clause",
        "version": "0.6.4_0.15.1",
        "custom": {
            "docker-image": "flywheel/mriqc:0.6.4_0.15.1",
            "gear-builder": {
                "category": "converter",
                "image": "flywheel/mriqc:0.6.4_0.15.1"
            }
        },
        "inputs": {
            "nifti": {
                "description": "MRI NIfTI file. Input can be a structural image (T1, T2) or a Functional NIfTI file.",
                "base": "file",
                "type": {
                    "enum": [
                        "nifti"
                    ]
                }
            }
        },
        "config": {
            "measurement": {
                "default": "auto-detect",
                "description": "Measurement/Intent of input image. Can be either 'T1', 'T2' or 'functional' (default='auto-detect' - gear will attempt to automatically detect the type of input image. If input does not have a classification value, making auto-detection impossible, the gear will exit with code=17).",
                "type": "string",
                "enum": [
                    "auto-detect",
                    "functional",
                    "T1",
                    "T2"
                ]
            },
            "save_derivatives": {
                "default": false,
                "description": "Save the derivative JSON file generated by MRIQC algorithm.",
                "type": "boolean"
            },
            "save_outputs": {
                "default": false,
                "description": "Save all outputs generated by MRIQC algorithm. These results will be saved in one single zip file.",
                "type": "boolean"
            },
            "verbose_reports": {
                "default": false,
                "description": "Produce verbose report outputs.",
                "type": "boolean"
            }
        }
    },
    "exchange": {
        "git-commit": "441e9f73a8792021ddba9367965019d4f1b02410",
        "rootfs-hash": "sha384:e096825629e582e734c64ba738329e908fa8434015e599c8cb115f3f99ad50e937f646b8269bc6a446df3fc40c082822",
        "rootfs-url": "https://storage.googleapis.com/flywheel-exchange/flywheel-mriqc-sha384-e096825629e582e734c64ba738329e908fa8434015e599c8cb115f3f99ad50e937f646b8269bc6a446df3fc40c082822.tgz"
    },
    "invocation-schema": {
        "title": "Invocation manifest for MRIQC: No-reference image quality metrics for quality assessment of MRI ",
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "properties": {
            "config": {
                "type": "object",
                "properties": {
                    "measurement": {
                        "default": "auto-detect",
                        "type": "string",
                        "enum": [
                            "auto-detect",
                            "functional",
                            "T1",
                            "T2"
                        ]
                    },
                    "save_derivatives": {
                        "default": false,
                        "type": "boolean"
                    },
                    "save_outputs": {
                        "default": false,
                        "type": "boolean"
                    },
                    "verbose_reports": {
                        "default": false,
                        "type": "boolean"
                    }
                },
                "required": [
                    "measurement",
                    "save_derivatives",
                    "save_outputs",
                    "verbose_reports"
                ]
            },
            "inputs": {
                "type": "object",
                "properties": {
                    "nifti": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "enum": [
                                    "nifti"
                                ]
                            }
                        }
                    }
                },
                "required": [
                    "nifti"
                ]
            }
        },
        "required": [
            "config",
            "inputs"
        ]
    }
}