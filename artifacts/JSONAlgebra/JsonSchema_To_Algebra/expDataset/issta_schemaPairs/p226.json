[
  {
    "id": 1,
    "schema1": {
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
      "required": [
        "weight",
        "preference"
      ],
      "properties": {
        "preference": {
          "description": "A null or empty node selector term matches no objects.",
          "required": [
            "matchExpressions"
          ],
          "properties": {
            "matchExpressions": {
              "description": "Required. A list of node selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "The label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                    "type": "string"
                  },
                  "values": {
                    "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "weight": {
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
          "type": "integer",
          "_format": "int32"
        }
      },
      "$schema": "http://json-schema.org/schema#",
      "type": "object"
    },
    "schema2": {
      "description": "CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition",
      "required": [
        "conditions",
        "acceptedNames"
      ],
      "properties": {
        "acceptedNames": {
          "description": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition",
          "required": [
            "plural",
            "kind"
          ],
          "properties": {
            "categories": {
              "description": "Categories is a list of grouped resources custom resources belong to (e.g. 'all')",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "kind": {
              "description": "Kind is the serialized kind of the resource.  It is normally CamelCase and singular.",
              "type": "string"
            },
            "listKind": {
              "description": "ListKind is the serialized kind of the list for this resource.  Defaults to <kind>List.",
              "type": [
                "string",
                "null"
              ]
            },
            "plural": {
              "description": "Plural is the plural name of the resource to serve.  It must match the name of the CustomResourceDefinition-registration too: plural.group and it must be all lowercase.",
              "type": "string"
            },
            "shortNames": {
              "description": "ShortNames are short names for the resource.  It must be all lowercase.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "singular": {
              "description": "Singular is the singular name of the resource.  It must be all lowercase  Defaults to lowercased <kind>",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "conditions": {
          "description": "Conditions indicate state for particular aspects of a CustomResourceDefinition",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "CustomResourceDefinitionCondition contains details for the current condition of this pod.",
            "required": [
              "type",
              "status"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": [
                  "string",
                  "null"
                ],
                "_format": "date-time"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            }
          }
        }
      },
      "$schema": "http://json-schema.org/schema#",
      "type": "object"
    },
    "tests": {
      "s1SubsetEqOfs2": false
    }
  }
]
