{
    "properties": {
        "i18nFormat": {
            "default": "xlf",
            "description": "The translation file format, 'xlf' for XLIFF 1.2, 'xlf2' for XLIFF 2 or 'xmb' for XMB/XTB.",
            "enum": [
                "xlf",
                "xlf2",
                "xmb"
            ],
            "type": "string",
            "x-prompt": "Which translation file format would you like to use?"
        },
        "i18nLocale": {
            "description": "The default language used in your ng template files (local name like 'en' or 'de'). If not given, first language in list of languages is assumed, if even that is not given, 'en' is assumed",
            "type": "string",
            "x-prompt": "Which default language do you use in your templates?"
        },
        "languages": {
            "description": "Target languages that you want to support (comma separated list like 'en,de,fr').",
            "type": "string",
            "x-prompt": "Which languages would you like to configure? (comma separated list like en,de,fr)"
        },
        "localePath": {
            "default": "i18n",
            "description": "The (optional) path where to create the translation files (relativ to src), default 'i18n'.",
            "format": "path",
            "type": "string"
        },
        "path": {
            "description": "The (optional) path to create the xliffmerge configuration.",
            "format": "path",
            "type": "string",
            "visible": false
        },
        "project": {
            "$default": {
                "$source": "projectName"
            },
            "description": "The name of the project.",
            "type": "string"
        },
        "skipInstall": {
            "default": false,
            "description": "When true, does not install dependency packages.",
            "type": "boolean"
        },
        "useComandlineForLanguages": {
            "default": false,
            "description": "If set, all languages are given as command line argument to xliffmerge, otherwise they are configured in 'xliffmerge.json'",
            "type": "boolean"
        },
        "useXliffmergeBuilder": {
            "default": true,
            "description": "When true, configure everything to use the architect builder for xliffmerge, otherwise the old style command line tool will be used.",
            "type": "boolean"
        }
    },
    "title": "NgAdd Schema",
    "type": "object"
}