[
  {
    "id": 1,
    "schema1": {
      "description": "DaemonSetCondition describes the state of a DaemonSet at a certain point.",
      "properties": {
        "lastTransitionTime": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "format": "date-time",
          "type": [
            "string",
            "null"
          ]
        },
        "message": {
          "description": "A human readable message indicating details about the transition.",
          "type": [
            "string",
            "null"
          ]
        },
        "reason": {
          "description": "The reason for the condition's last transition.",
          "type": [
            "string",
            "null"
          ]
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {
          "description": "Type of DaemonSet condition.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object",
      "$schema": "http://json-schema.org/schema#"
    },
    "schema2": {
      "description": "IDRange provides a min/max of an allowed range of IDs.",
      "properties": {
        "max": {
          "description": "max is the end of the range, inclusive.",
          "format": "int64",
          "type": [
            "integer",
            "null"
          ]
        },
        "min": {
          "description": "min is the start of the range, inclusive.",
          "format": "int64",
          "type": [
            "integer",
            "null"
          ]
        }
      },
      "required": [
        "min",
        "max"
      ],
      "type": "object",
      "$schema": "http://json-schema.org/schema#"
    },
    "tests": {
      "s1SubsetEqOfs2": false
    }
  }
]
