/*And{
[Items{items=[Var{T3}, Boolean{value=true}], additionalItems=null},
Items{items=[], additionalItems=Boolean{value=false}},
Items{items=[Var{T4}, Var{T4}], additionalItems=Boolean{value=true}},
Items{items=[Boolean{value=true}, Var{T1}], additionalItems=Boolean{value=true}},
WitnessContains{min=1.0, max=Infinity, position=0.0, contains=Boolean{value=true}, isAnArray=true},
WitnessContains{min=2.0, max=5.0, position=0.0, contains=Var{T2}, isAnArray=false},
WitnessContains{min=3.0, max=6.0, position=0.0, contains=Var{T3}, isAnArray=false}, WitnessContains{min=4.0, max=Infinity, position=0.0, contains=Var{T4}, isAnArray=false}, WitnessContains{min=2.0, max=4.0, position=0.0, contains=Var{T1}, isAnArray=false},
Type{type=[arr]}]
}*/

"main"
 defs
 [
   "main" : allOf
            [items[ref("T3"),true;true]
             ,items[;false]
             ,items[ref("T4"), ref("T4");true]
             ,items[true, ref("T1");true]
             ,contains(0,inf;true)
             ,contains(0,5;ref("T2"))
             ,contains(3,6;ref("T3"))
             ,contains(4,inf;ref("T4"))
             ,contains(2,4;ref("T1"))
             ,type[arr]
            ],
   //"S1" : { type[arr], items[;false], contains(2,4;ref("T1")) },
   //"S2" : { type[arr], items[true,ref("T1");true], contains(1,3;ref("T1")) },
   "T1" : { type[obj], props["b1": ref("T1");false], pro(1,5) },
   "T2" : { type[obj], props["b1": ref("T1");false], pro(2,5) },
   "T3" : { type[obj], props["b1": ref("T1");false], pro(3,5) },
   "T4" : { type[obj], props["b1": ref("T1");false], pro(4,5) }
]
