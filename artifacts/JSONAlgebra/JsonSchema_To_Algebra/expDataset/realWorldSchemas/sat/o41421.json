{
    "gear": {
        "name": "dcm2niix",
        "label": "DCM2NIIX: dcm2nii DICOM to NIfTI converter",
        "description": "Chris Rorden's dcm2niix (OpenJPEG build, 64-bit Linux). dcm2niix is a popular tool for converting images from the complicated formats used by scanner manufacturers (DICOM, PAR/REC) to the simple NIfTI format used by many scientific tools. dcm2niix works for all modalities (CT, MRI, PET, SPECT) and sequence types.",
        "maintainer": "Michael Perry <lmperry@stanford.edu>",
        "author": "Chris Rorden (@neurolabusc)",
        "url": "https://github.com/rordenlab/dcm2niix",
        "source": "https://github.com/scitran-apps/dcm2niix",
        "license": "BSD-2-Clause",
        "flywheel": "0",
        "version": "0.7.10_1.0.20190410",
        "custom": {
            "docker-image": "scitran/dcm2niix:0.7.10_1.0.20190410",
            "flywheel": {
                "uid": 1000,
                "gid": 1000,
                "suite": "SciTran"
            },
            "gear-builder": {
                "category": "converter",
                "image": "scitran/dcm2niix:0.7.10_1.0.20190410"
            }
        },
        "config": {
            "decompress_dicoms": {
                "default": false,
                "type": "boolean",
                "description": "Decompress DICOM files prior to conversion. This will perform decompression using gdcmconv and then perform conversion using dcm2niix. (true/false, default=false)"
            },
            "bids_sidecar": {
                "description": "Output BIDS sidecar in JSON format. Options are 'y'=yes, 'n'=no, and 'o'=only (whereby no NIfTI file will be generated). Default='n'.",
                "type": "string",
                "default": "n",
                "id": "-b"
            },
            "merge2d": {
                "description": "merge 2D slices from same series regardless of study time, echo, coil, orientation, etc. (y/n, default n)",
                "type": "string",
                "default": "n",
                "id": "-m"
            },
            "text_notes_private": {
                "description": "text notes includes private patient details (y/n, default n)",
                "type": "string",
                "default": "n",
                "id": "-t"
            },
            "crop": {
                "description": "Crop images (y/n, default n)",
                "type": "string",
                "default": "n",
                "id": "-x"
            },
            "compress_nifti": {
                "description": "Compress output NIfTI file (y/n/3, default y)  [y=pigz, n=no, 3=no,3D]. Note that if option '3' is chosen, the filename flag will be set to '-f %p_%s' to prevent overwriting files",
                "type": "string",
                "default": "y",
                "id": "-z"
            },
            "filename": {
                "description": "Determine how files are named: filename (%a=antenna (coil) number, %c=comments, %d=description, %e=echo number, %f=folder name, %i=ID of patient, %m=manufacturer, %n=name of patient, %p=protocol, %s=series number, %t=time, %u=acquisition number, %z=sequence name; [default='%f'])",
                "type": "string",
                "default": "%f",
                "id": "-f"
            },
            "anonymize_bids": {
                "description": "Anonymize BIDS (y/n, default n)",
                "type": "string",
                "default": "n",
                "id": "-ba"
            },
            "ignore_derived": {
                "description": "ignore derived, localizer and 2D images (y/n, default n)",
                "type": "string",
                "default": "n",
                "id": "-i"
            },
            "philips_scaling": {
                "description": "Philips precise float (not display) scaling (y/n, default y)",
                "type": "string",
                "default": "y",
                "id": "-p"
            },
            "single_file_mode": {
                "description": "single file mode, do not convert other images in folder (y/n, default n)",
                "type": "string",
                "default": "n",
                "id": "-s"
            },
            "vol3D": {
                "description": "Output 3D uncompressed volumes (true/false, default=false). Note that the filename flag will be set to '-f %p_%s' to prevent overwriting files",
                "type": "boolean",
                "default": false
            },
            "convert_only_series": {
                "description": "only convert this series number - can be used up to 16 times (default convert all). Provide series numbers in a space-separated list e.g., '12 13'",
                "type": "string",
                "default": "all",
                "id": "-n"
            },
            "lossless_scaling": {
                "description": "Losslessly scale 16-bit integers to use dynamic range (y/n, default n)",
                "type": "string",
                "default": "n",
                "id": "-l"
            },
            "ignore_errors": {
                "description": "Ignore dcm2niix errors and exit status (default=false). By default, when dcm2niix exits non-zero, outputs are not preserved. With this option=true, outputs are preserved regardless of dcm2niix exit status.",
                "type": "boolean",
                "default": false
            },
            "coil_combine": {
                "description": "For sequences with individual coil data, saved as individual volumes, this option will save a NIfTI file with ONLY the combined coil data (i.e., the last volume). Default=False. Warning: We make no effort to check for independent coil data, we simply trust that if you have selcted this option you know what you are asking for.",
                "type": "boolean",
                "default": false
            },
            "remove_incomplete_volumes": {
                "description": "Some 4D scans can be aborted mid-acquisition after any number of complete volume acquisitions.  The final volume may be incomplete, which causes problems during dcm2niix reconstruction.  Check this to scan the dicom archive before reconstruction and remove the files associated with the trailing incomplete volume.  All other volumes will be reconstructed as normal. ",
                "type": "boolean",
                "default": false
            }
        },
        "inputs": {
            "dcm2niix_input": {
                "description": "Input file for dcm2niix. This can be either a DICOM archive ('.dicom.zip'), an enhanced DICOM file (gzipped or not, e.g., 'IM0001.gz', 'IM0001'), or a PAR/REC archive ('.parrec.zip')",
                "base": "file",
                "type": {
                    "enum": [
                        "dicom",
                        "parrec"
                    ]
                }
            }
        }
    },
    "exchange": {
        "git-commit": "6462c8c9155923d0be1c721ad4b433aaa1a828e2",
        "rootfs-hash": "sha384:d338e37222880a95fe2ffade902b20ace5fa77efbcfc3599d168f35666c3fef2905fd14abf4b2c50321c103ade083018",
        "rootfs-url": "https://storage.googleapis.com/flywheel-exchange/scitran-dcm2niix-sha384-d338e37222880a95fe2ffade902b20ace5fa77efbcfc3599d168f35666c3fef2905fd14abf4b2c50321c103ade083018.tgz"
    },
    "invocation-schema": {
        "title": "Invocation manifest for DCM2NIIX: dcm2nii DICOM to NIfTI converter",
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "properties": {
            "config": {
                "type": "object",
                "properties": {
                    "decompress_dicoms": {
                        "default": false,
                        "type": "boolean"
                    },
                    "bids_sidecar": {
                        "type": "string",
                        "default": "n",
                        "id": "-b"
                    },
                    "merge2d": {
                        "type": "string",
                        "default": "n",
                        "id": "-m"
                    },
                    "text_notes_private": {
                        "type": "string",
                        "default": "n",
                        "id": "-t"
                    },
                    "crop": {
                        "type": "string",
                        "default": "n",
                        "id": "-x"
                    },
                    "compress_nifti": {
                        "type": "string",
                        "default": "y",
                        "id": "-z"
                    },
                    "filename": {
                        "type": "string",
                        "default": "%f",
                        "id": "-f"
                    },
                    "anonymize_bids": {
                        "type": "string",
                        "default": "n",
                        "id": "-ba"
                    },
                    "ignore_derived": {
                        "type": "string",
                        "default": "n",
                        "id": "-i"
                    },
                    "philips_scaling": {
                        "type": "string",
                        "default": "y",
                        "id": "-p"
                    },
                    "single_file_mode": {
                        "type": "string",
                        "default": "n",
                        "id": "-s"
                    },
                    "vol3D": {
                        "type": "boolean",
                        "default": false
                    },
                    "convert_only_series": {
                        "type": "string",
                        "default": "all",
                        "id": "-n"
                    },
                    "lossless_scaling": {
                        "type": "string",
                        "default": "n",
                        "id": "-l"
                    },
                    "ignore_errors": {
                        "type": "boolean",
                        "default": false
                    },
                    "coil_combine": {
                        "type": "boolean",
                        "default": false
                    },
                    "remove_incomplete_volumes": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "decompress_dicoms",
                    "bids_sidecar",
                    "merge2d",
                    "text_notes_private",
                    "crop",
                    "compress_nifti",
                    "filename",
                    "anonymize_bids",
                    "ignore_derived",
                    "philips_scaling",
                    "single_file_mode",
                    "vol3D",
                    "convert_only_series",
                    "lossless_scaling",
                    "ignore_errors",
                    "coil_combine",
                    "remove_incomplete_volumes"
                ]
            },
            "inputs": {
                "type": "object",
                "properties": {
                    "dcm2niix_input": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "enum": [
                                    "dicom",
                                    "parrec"
                                ]
                            }
                        }
                    }
                },
                "required": [
                    "dcm2niix_input"
                ]
            }
        },
        "required": [
            "config",
            "inputs"
        ]
    }
}