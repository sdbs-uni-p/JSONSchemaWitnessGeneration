{
  "$schema": "http://json-schema.org/schema",
  "title": "User",
  "description": "A user is a registrated person or client interacting with the VPDB API.",
  "type": "object",
  "properties": {
    "id": {
      "description": "Unique identifier for a user.",
      "type": "string",
      "pattern": "^[a-z0-9_-]{7,}$",
      "readOnly": true
    },
    "email": {
      "description": "The email address of the user",
      "type": "string",
      "unique": true,
      "_format": "email"
    },
    "email_status": {
      "title": "Email Status",
      "description": "Status of the email address (see below).",
      "type": "object",
      "readOnly": true,
      "properties": {
        "code": {
          "description": "Status code of the email. The following are valid values:\n * `confirmed` - Email address is confirmed.\n * `pending_registration` - Email address is to be confirmed after registration.\n * `pending_update` - Email address is to be confirmed after profile update.\n\n",
          "type": "string",
          "enum": [
            "confirmed",
            "pending_registration",
            "pending_update"
          ],
          "readOnly": true
        },
        "expires_at": {
          "description": "Timestamp when the token sent by email expires. Only set if code not equals `confirmed`.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "The new email address that is about to be confirmed. Only set if code not equals `confirmed`.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "username": {
      "description": "Username used when locally logging in.",
      "type": "string",
      "minLength": 3,
      "maxLength": 30,
      "unique": true
    },
    "name": {
      "description": "Display name, initially set to user name.",
      "type": "string",
      "minLength": 3,
      "maxLength": 30
    },
    "provider": {
      "description": "How the user is authenticated. For local accounts this is set to `local`, otherwise to the name of the OAuth2 provider.",
      "type": "string",
      "enum": [
        "local",
        "github"
      ],
      "readOnly": true
    },
    "roles": {
      "description": "List of roles the user belongs to.",
      "type": "array",
      "enum": [
        "root",
        "admin",
        "contributor",
        "member"
      ]
    },
    "is_active": {
      "description": "Whether the user is able to login. Set to `false` to ban a user.",
      "type": "boolean"
    },
    "_plan": {
      "description": "The user's current subscription plan.",
      "type": "string"
    },
    "created_at": {
      "description": "Timestamp when the user was created.",
      "type": "string",
      "readOnly": true
    },
    "gravatar_id": {
      "description": "Gravatar ID, see [documentation](https://en.gravatar.com/site/implement/).",
      "type": "string",
      "pattern": "^[a-f0-9]{32}$",
      "readOnly": true
    },
    "permissions": {
      "description": "Set of permissions for that user, see [permission](/api/permissions).",
      "type": "object",
      "onlyIn": [
        {
          "type": "response",
          "method": "GET",
          "path": "/user"
        }
      ],
      "readOnly": true
    },
    "preferences": {
      "title": "User preferences",
      "type": "object",
      "properties": {
        "tablefile_name": {
          "description": "A valid (Windows) file name for table names, without file extension. The following placeholders within curly brackets can be provided: `game_title`, `game_manufacturer`, `game_year`, `release_name`, `release_version`, `release_compatibility`, `release_flavor_orientation`, `release_flavor_lightning`, `original_filename`.",
          "type": "string"
        }
      }
    }
  },
  "required": [
    "email",
    "username",
    "name",
    "roles",
    "is_active"
  ]
}
