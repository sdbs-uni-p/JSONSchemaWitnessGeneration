[
    {
        "id": 1,
        "schema1": {
            "enum": [
                1
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "minimum": 2
                    }
                ]
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 2,
        "schema1": {
            "enum": [
                2.5
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "minimum": 2
                    }
                ]
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 3,
        "schema1": {
            "enum": [
                3
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    {
                        "type": "integer"
                    },
                    {
                        "minimum": 2
                    }
                ]
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 4,
        "schema1": {
            "enum": [
                "foobar"
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    {
                        "maxLength": 2
                    },
                    {
                        "minLength": 4
                    }
                ],
                "type": "string"
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 5,
        "schema1": {
            "enum": [
                "foo"
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    true,
                    true
                ]
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 6,
        "schema1": {
            "enum": [
                "foo"
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    true,
                    false
                ]
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 7,
        "schema1": {
            "enum": [
                {
                    "bar": 2
                }
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    {
                        "properties": {
                            "bar": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "bar"
                        ]
                    },
                    {
                        "properties": {
                            "foo": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "foo"
                        ]
                    }
                ]
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 8,
        "schema1": {
            "enum": [
                {
                    "foo": "baz"
                }
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    {
                        "properties": {
                            "bar": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "bar"
                        ]
                    },
                    {
                        "properties": {
                            "foo": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "foo"
                        ]
                    }
                ]
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 9,
        "schema1": {
            "enum": [
                {
                    "bar": 2,
                    "foo": "baz"
                }
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    {
                        "properties": {
                            "bar": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "bar"
                        ]
                    },
                    {
                        "properties": {
                            "foo": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "foo"
                        ]
                    }
                ]
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 10,
        "schema1": {
            "enum": [
                "foo"
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    {
                        "type": "number"
                    },
                    {}
                ]
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 11,
        "schema1": {
            "enum": [
                123
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    {
                        "type": "number"
                    },
                    {}
                ]
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    },
    {
        "id": 12,
        "schema1": {
            "enum": [
                null
            ]
        },
        "schema2": {
            "not": {
                "anyOf": [
                    {
                        "anyOf": [
                            {
                                "type": "null"
                            }
                        ]
                    }
                ]
            }
        },
        "tests": {
            "s1SubsetEqOfs2": false
        }
    }
]