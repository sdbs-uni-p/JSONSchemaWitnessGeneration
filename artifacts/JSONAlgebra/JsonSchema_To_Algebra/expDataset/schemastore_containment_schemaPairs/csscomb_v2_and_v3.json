[
  {
    "id": 1,
    "schema1": [
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "properties": {
          "exclude": {
            "description": "An array of files/globbing patterns to ignore",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "verbose": {
            "type": "boolean"
          },
          "always-semicolon": {
            "type": "boolean"
          },
          "block-indent": {
            "description": "Whether to add a semicolon after the last value/mixin.",
            "type": "string"
          },
          "color-case": {
            "description": "Unify case of hexadecimal colors.",
            "enum": [
              "lower",
              "upper"
            ]
          },
          "color-shorthand": {
            "description": "Whether to expand hexadecimal colors or use shorthands.",
            "type": "boolean"
          },
          "element-case": {
            "description": "Unify case of element selectors.",
            "enum": [
              "lower",
              "upper"
            ]
          },
          "eof-newline": {
            "description": "Add/remove line break at EOF.",
            "type": "boolean"
          },
          "leading-zero": {
            "description": "Add/remove leading zero in dimensions.",
            "type": "boolean"
          },
          "quotes": {
            "description": "Unify quotes style.",
            "enum": [
              "single",
              "double"
            ]
          },
          "remove-empty-rulesets": {
            "description": "Remove all rulesets that contain nothing but spaces.",
            "type": "boolean"
          },
          "space-after-colon": {
            "description": "Set space after `:` in declarations.",
            "type": "string"
          },
          "space-after-combinator": {
            "description": "Set space after combinator (for example, in selectors like `p > a`).",
            "type": "string"
          },
          "space-after-opening-brace": {
            "description": "Set space after `{`.",
            "type": "string"
          },
          "space-after-selector-delimiter": {
            "description": "Set space after selector delimiter.",
            "type": "string"
          },
          "space-after-closing-brace": {
            "description": "Set space before `}`.",
            "type": "string"
          },
          "space-before-colon": {
            "description": "Set space before `:` in declarations.",
            "type": "string"
          },
          "space-before-combinator": {
            "description": "Set space before combinator (for example, in selectors like `p > a`).",
            "type": "string"
          },
          "space-before-opening-brace": {
            "description": "Set space before `{`.",
            "type": "string"
          },
          "space-before-selector-delimiter": {
            "description": "Set space before selector delimiter.",
            "type": "string"
          },
          "space-between-declarations": {
            "description": "Set space between declarations (i.e. `color: tomato`).",
            "type": "string"
          },
          "strip-spaces": {
            "description": "Whether to trim trailing spaces.",
            "type": "boolean"
          },
          "unitless-zero": {
            "description": "Whether to remove units in zero-valued dimensions.",
            "type": "boolean"
          },
          "vendor-prefix-align": {
            "description": "Whether to align prefixes in properties and values.",
            "type": "boolean"
          },
          "sort-order": {
            "description": "Sort properties in particular order.",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "tab-size": {
            "type": "boolean"
          },
          "sort-order-fallback": {
            "description": "Sort unknown properties alphabetically",
            "enum": [
              "abc"
            ]
          }
        },
        "title": "JSON schema for CSS Comb configuration files",
        "type": "object"
      }
    ],
    "schema2": [
      {
        "$schema": "http://json-schema.org/draft-04/schema",
        "properties": {
          "exclude": {
            "description": "A list of files to ignore in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "array",
            "_uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "verbose": {
            "type": "boolean"
          },
          "always-semicolon": {
            "description": "Whether to add missing semicolon in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "boolean"
          },
          "block-indent": {
            "description": "A block indent style in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          },
          "color-case": {
            "description": "A hexadecimal color style in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string",
            "enum": [
              "lower",
              "upper"
            ]
          },
          "color-shorthand": {
            "description": "Whether to expand hexadecimal color or use shorthand in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "boolean"
          },
          "element-case": {
            "description": "Whether to unify case of element selector in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string",
            "enum": [
              "lower",
              "upper"
            ]
          },
          "eof-newline": {
            "description": "Whether to add a trailing line break in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "boolean"
          },
          "leading-zero": {
            "description": "Whether to add leading zero in a dimension in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "boolean"
          },
          "quotes": {
            "description": "A quote style in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string",
            "enum": [
              "single",
              "double"
            ]
          },
          "remove-empty-rulesets": {
            "description": "Whether to remove empty rulesets\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "boolean"
          },
          "space-after-colon": {
            "description": "A space style after a colon in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          },
          "space-after-combinator": {
            "description": "A space style after a combinator in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          },
          "space-after-opening-brace": {
            "description": "A space style after an opening brace in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          },
          "space-after-selector-delimiter": {
            "description": "A space style after a selector delimiter in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          },
          "space-after-closing-brace": {
            "description": "A space style after a closing brace in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          },
          "space-before-colon": {
            "description": "A space style before a colon in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          },
          "space-before-combinator": {
            "description": "A space style before a combinator in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          },
          "space-before-opening-brace": {
            "description": "A space style before an opening brace in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          },
          "space-before-selector-delimiter": {
            "description": "A space style before a selector delimiter in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          },
          "space-between-declarations": {
            "description": "A space style between declarations in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          },
          "strip-spaces": {
            "description": "Whether to trim trailing space in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "boolean"
          },
          "unitless-zero": {
            "description": "Whether to remove unit in zero-valued dimension in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "boolean"
          },
          "vendor-prefix-align": {
            "description": "Whether to align prefix in property and value in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "boolean"
          },
          "sort-order": {
            "description": "A sort order in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "tab-size": {
            "type": "boolean"
          },
          "sort-order-fallback": {
            "description": "A sort style of unknown properties in the current project\nhttps://github.com/csscomb/csscomb.js/blob/dev/doc/configuration.md#create-custom-config",
            "type": "string"
          }
        },
        "title": "A CSS Comb config schema",
        "type": "object"
      }
    ]
  }
]
