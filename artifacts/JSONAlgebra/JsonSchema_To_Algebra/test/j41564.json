{
    "id": 41564,
    "url": "http://github.com/flywheel-io/gears/blob/master/spec/manifest.schema.json?raw=true",
    "schema_file": {
        "title": "Flywheel Gear Manifest",
        "description": "The manifest expected to exist at /flywheel/v0/manifest.json in a gear image.",
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "definitions": {
            "directive": {
                "oneOf": [
                    {
                        "$ref": "http://json-schema.org/draft-04/schema"
                    }
                ],
                "description": "A schema directive."
            },
            "config-directive": {
                "allOf": [
                    {
                        "$ref": "http://json-schema.org/draft-04/schema"
                    },
                    {
                        "not": {
                            "required": [
                                "default",
                                "optional"
                            ]
                        }
                    }
                ],
                "description": "A config schema directive."
            },
            "uriOrEmpty": {
                "type": "string",
                "maxLength": 1000,
                "anyOf": [
                    {
                        "format": "uri"
                    },
                    {
                        "maxLength": 0
                    }
                ],
                "description": "A valid URI, or empty string."
            }
        },
        "properties": {
            "author": {
                "type": "string",
                "maxLength": 100,
                "description": "The author of this gear."
            },
            "maintainer": {
                "type": "string",
                "maxLength": 100,
                "description": "(optional) The maintainer of this gear. Can be used to distinguish the algorithm author from the gear maintainer."
            },
            "cite": {
                "type": "string",
                "maxLength": 5000,
                "description": "(optional) Any citations relevant to the algorithm(s) or work present in the gear."
            },
            "config": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/definitions/config-directive"
                },
                "description": "Schema snippets describing the options this gear consumes. Not currently processed."
            },
            "custom": {
                "type": "object",
                "description": "A place for gear authors to put arbitrary information."
            },
            "description": {
                "type": "string",
                "maxLength": 5000,
                "description": "A brief description of the gear's purpose. Ideally 1-4 sentences."
            },
            "environment": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Environment variables that should be set for the gear."
            },
            "command": {
                "type": "string",
                "description": "If provided, the starting command for the gear, rather than /flywheel/v0/run. Will be templated according to the spec."
            },
            "inputs": {
                "type": "object",
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "base": {
                                    "type": "string",
                                    "enum": [
                                        "file"
                                    ],
                                    "description": "The type of gear input."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Hackaround for description not technically being a schema directive"
                                },
                                "optional": {
                                    "type": "boolean",
                                    "description": "Allow the gear to mark an input file as optional."
                                }
                            },
                            "required": [
                                "base"
                            ],
                            "additionalProperties": {
                                "$ref": "#/definitions/directive"
                            },
                            "description": "A file input, optionally using schema snippets to further refine the type of file taken."
                        },
                        {
                            "type": "object",
                            "properties": {
                                "base": {
                                    "type": "string",
                                    "enum": [
                                        "context"
                                    ],
                                    "description": "The type of gear input."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Hackaround for description not technically being a schema directive"
                                }
                            },
                            "required": [
                                "base"
                            ],
                            "additionalProperties": false,
                            "description": "A contextual input, retrieved from the environment on launch."
                        },
                        {
                            "type": "object",
                            "properties": {
                                "base": {
                                    "type": "string",
                                    "enum": [
                                        "api-key"
                                    ],
                                    "description": "The type of gear input."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Hackaround for description not technically being a schema directive"
                                },
                                "read-only": {
                                    "type": "boolean",
                                    "description": "Requests that the provisioned API key be only allowed read access."
                                }
                            },
                            "required": [
                                "base"
                            ],
                            "additionalProperties": false,
                            "description": "An api-key input for accessing data with an SDK."
                        }
                    ]
                },
                "description": "Schema snippets describing the inputs this gear consumes."
            },
            "capabilities": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A set of features the gear requires to run (for example, networking)."
            },
            "label": {
                "type": "string",
                "maxLength": 100,
                "description": "The human-friendly name of this gear."
            },
            "license": {
                "type": "string",
                "enum": [
                    "AFL-1.1",
                    "AFL-1.2",
                    "AFL-2.0",
                    "AFL-2.1",
                    "AFL-3.0",
                    "APL-1.0",
                    "Apache-1.1",
                    "Apache-2.0",
                    "APSL-1.0",
                    "APSL-1.1",
                    "APSL-1.2",
                    "APSL-2.0",
                    "Artistic-1.0",
                    "Artistic-1.0-Perl",
                    "Artistic-1.0-cl8",
                    "Artistic-2.0",
                    "AAL",
                    "BSL-1.0",
                    "BSD-2-Clause",
                    "BSD-3-Clause",
                    "0BSD",
                    "CECILL-2.1",
                    "CNRI-Python",
                    "CDDL-1.0",
                    "CPAL-1.0",
                    "CPL-1.0",
                    "CATOSL-1.1",
                    "CUA-OPL-1.0",
                    "EPL-1.0",
                    "ECL-1.0",
                    "ECL-2.0",
                    "EFL-1.0",
                    "EFL-2.0",
                    "Entessa",
                    "EUDatagrid",
                    "EUPL-1.1",
                    "Fair",
                    "Flywheel MSA",
                    "Frameworx-1.0",
                    "AGPL-3.0",
                    "GPL-2.0",
                    "GPL-3.0",
                    "LGPL-2.1",
                    "LGPL-3.0",
                    "LGPL-2.0",
                    "HPND",
                    "IPL-1.0",
                    "Intel",
                    "IPA",
                    "ISC",
                    "LPPL-1.3c",
                    "LiLiQ-P-1.1",
                    "LiLiQ-Rplus-1.1",
                    "LiLiQ-R-1.1",
                    "LPL-1.02",
                    "LPL-1.0",
                    "MS-PL",
                    "MS-RL",
                    "MirOS",
                    "MIT",
                    "Motosoto",
                    "MPL-1.0",
                    "MPL-1.1",
                    "MPL-2.0",
                    "MPL-2.0-no-copyleft-exception",
                    "Multics",
                    "NASA-1.3",
                    "Naumen",
                    "NGPL",
                    "Nokia",
                    "NPOSL-3.0",
                    "NTP",
                    "OCLC-2.0",
                    "OGTSL",
                    "OSL-1.0",
                    "OSL-2.0",
                    "OSL-2.1",
                    "OSL-3.0",
                    "OSET-PL-2.1",
                    "PHP-3.0",
                    "PostgreSQL",
                    "Python-2.0",
                    "QPL-1.0",
                    "RPSL-1.0",
                    "RPL-1.1",
                    "RPL-1.5",
                    "RSCPL",
                    "OFL-1.1",
                    "SimPL-2.0",
                    "Sleepycat",
                    "SISSL",
                    "SPL-1.0",
                    "Watcom-1.0",
                    "UPL-1.0",
                    "NCSA",
                    "VSL-1.0",
                    "W3C",
                    "Xnet",
                    "Zlib",
                    "ZPL-2.0",
                    "Other"
                ],
                "description": "The name of the license that applies to this gear. Must be an OSI-approved SPDX license string or 'Other'. Ref: https://spdx.org/licenses Example: apache-2.0"
            },
            "name": {
                "type": "string",
                "maxLength": 100,
                "pattern": "^[a-z0-9\\-]+$",
                "description": "The identification of this gear."
            },
            "source": {
                "$ref": "#/definitions/uriOrEmpty",
                "description": "The URL where the source code of this gear can be found. Leave blank if none."
            },
            "url": {
                "$ref": "#/definitions/uriOrEmpty",
                "description": "The URL where more information about this gear can be found. Leave blank if none."
            },
            "version": {
                "type": "string",
                "maxLength": 100,
                "description": "A human-friendly string explaining the release version of this gear. Example: 3.2.1"
            },
            "flywheel": {
                "description": "A currently-unused key. Ignored if present."
            }
        },
        "required": [
            "author",
            "config",
            "description",
            "inputs",
            "label",
            "license",
            "name",
            "source",
            "url",
            "version"
        ],
        "additionalProperties": false
    }
}