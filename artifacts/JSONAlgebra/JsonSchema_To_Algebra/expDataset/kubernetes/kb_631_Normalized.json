{
    "definitions": {
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_AttachedVolume": {
            "description": "AttachedVolume describes a volume attached to a node",
            "properties": {
                "devicePath": {
                    "description": "DevicePath represents the device path where the volume should be available",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the attached volume",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "devicePath"
            ],
            "type": "object"
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ConfigMapNodeConfigSource": {
            "description": "ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node.",
            "properties": {
                "kubeletConfigKey": {
                    "description": "KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.",
                    "type": "string"
                },
                "resourceVersion": {
                    "description": "ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.",
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.",
                    "type": "string"
                }
            },
            "required": [
                "namespace",
                "name",
                "kubeletConfigKey"
            ],
            "type": "object"
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerImage": {
            "description": "Describe a container image",
            "properties": {
                "names": {
                    "description": "Names by which this image is known. e.g. [\"k8s.gcr.io/hyperkube:v1.0.7\", \"dockerhub.io/google_containers/hyperkube:v1.0.7\"]",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sizeBytes": {
                    "_format": "int64",
                    "description": "The size of the image in bytes.",
                    "type": "integer"
                }
            },
            "required": [
                "names"
            ],
            "type": "object"
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_DaemonEndpoint": {
            "description": "DaemonEndpoint contains information about a single Daemon endpoint.",
            "properties": {
                "Port": {
                    "_format": "int32",
                    "description": "Port number of the given endpoint.",
                    "type": "integer"
                }
            },
            "required": [
                "Port"
            ],
            "type": "object"
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeAddress": {
            "description": "NodeAddress contains information for the node's address.",
            "properties": {
                "address": {
                    "description": "The node address.",
                    "type": "string"
                },
                "type": {
                    "description": "Node address type, one of Hostname, ExternalIP or InternalIP.",
                    "type": "string"
                }
            },
            "required": [
                "type",
                "address"
            ],
            "type": "object"
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeCondition": {
            "description": "NodeCondition contains condition information for a node.",
            "properties": {
                "lastHeartbeatTime": {
                    "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
                    "description": "Last time we got an update on a given condition."
                },
                "lastTransitionTime": {
                    "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
                    "description": "Last time the condition transit from one status to another."
                },
                "message": {
                    "description": "Human readable message indicating details about last transition.",
                    "type": "string"
                },
                "reason": {
                    "description": "(brief) reason for the condition's last transition.",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the condition, one of True, False, Unknown.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of node condition.",
                    "type": "string"
                }
            },
            "required": [
                "type",
                "status"
            ],
            "type": "object"
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeConfigSource": {
            "description": "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.",
            "properties": {
                "configMap": {
                    "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ConfigMapNodeConfigSource",
                    "description": "ConfigMap is a reference to a Node's ConfigMap"
                }
            },
            "type": "object"
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeConfigStatus": {
            "description": "NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource.",
            "properties": {
                "active": {
                    "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeConfigSource",
                    "description": "Active reports the checkpointed config the node is actively using. Active will represent either the current version of the Assigned config, or the current LastKnownGood config, depending on whether attempting to use the Assigned config results in an error."
                },
                "assigned": {
                    "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeConfigSource",
                    "description": "Assigned reports the checkpointed config the node will try to use. When Node.Spec.ConfigSource is updated, the node checkpoints the associated config payload to local disk, along with a record indicating intended config. The node refers to this record to choose its config checkpoint, and reports this record in Assigned. Assigned only updates in the status after the record has been checkpointed to disk. When the Kubelet is restarted, it tries to make the Assigned config the Active config by loading and validating the checkpointed payload identified by Assigned."
                },
                "error": {
                    "description": "Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions.",
                    "type": "string"
                },
                "lastKnownGood": {
                    "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeConfigSource",
                    "description": "LastKnownGood reports the checkpointed config the node will fall back to when it encounters an error attempting to use the Assigned config. The Assigned config becomes the LastKnownGood config when the node determines that the Assigned config is stable and correct. This is currently implemented as a 10-minute soak period starting when the local record of Assigned config is updated. If the Assigned config is Active at the end of this period, it becomes the LastKnownGood. Note that if Spec.ConfigSource is reset to nil (use local defaults), the LastKnownGood is also immediately reset to nil, because the local default config is always assumed good. You should not make assumptions about the node's method of determining config stability and correctness, as this may change or become configurable in the future."
                }
            },
            "type": "object"
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeDaemonEndpoints": {
            "description": "NodeDaemonEndpoints lists ports opened by daemons running on the Node.",
            "properties": {
                "kubeletEndpoint": {
                    "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_DaemonEndpoint",
                    "description": "Endpoint on which Kubelet is listening."
                }
            },
            "type": "object"
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSystemInfo": {
            "description": "NodeSystemInfo is a set of ids/uuids to uniquely identify the node.",
            "properties": {
                "architecture": {
                    "description": "The Architecture reported by the node",
                    "type": "string"
                },
                "bootID": {
                    "description": "Boot ID reported by the node.",
                    "type": "string"
                },
                "containerRuntimeVersion": {
                    "description": "ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).",
                    "type": "string"
                },
                "kernelVersion": {
                    "description": "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).",
                    "type": "string"
                },
                "kubeProxyVersion": {
                    "description": "KubeProxy Version reported by the node.",
                    "type": "string"
                },
                "kubeletVersion": {
                    "description": "Kubelet Version reported by the node.",
                    "type": "string"
                },
                "machineID": {
                    "description": "MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html",
                    "type": "string"
                },
                "operatingSystem": {
                    "description": "The Operating System reported by the node",
                    "type": "string"
                },
                "osImage": {
                    "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).",
                    "type": "string"
                },
                "systemUUID": {
                    "description": "SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid",
                    "type": "string"
                }
            },
            "required": [
                "machineID",
                "systemUUID",
                "bootID",
                "kernelVersion",
                "osImage",
                "containerRuntimeVersion",
                "kubeletVersion",
                "kubeProxyVersion",
                "operatingSystem",
                "architecture"
            ],
            "type": "object"
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_api_resource_Quantity": {
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "number"
                }
            ]
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time": {
            "_format": "date-time",
            "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
            "type": "string"
        }
    },
    "description": "NodeStatus is information about the current status of a node.",
    "properties": {
        "addresses": {
            "description": "List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses Note: This field is declared as mergeable, but the merge key is not sufficiently unique, which can cause data corruption when it is merged. Callers should instead use a full-replacement patch. See http://pr.k8s.io/79391 for an example.",
            "items": {
                "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeAddress"
            },
            "type": [
                "array",
                "null"
            ],
            "x-kubernetes-patch-merge-key": "type",
            "x-kubernetes-patch-strategy": "merge"
        },
        "allocatable": {
            "additionalProperties": {
                "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_api_resource_Quantity"
            },
            "description": "Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity.",
            "type": [
                "object",
                "null"
            ]
        },
        "capacity": {
            "additionalProperties": {
                "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_api_resource_Quantity"
            },
            "description": "Capacity represents the total resources of a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity",
            "type": [
                "object",
                "null"
            ]
        },
        "conditions": {
            "description": "Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition",
            "items": {
                "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeCondition"
            },
            "type": [
                "array",
                "null"
            ],
            "x-kubernetes-patch-merge-key": "type",
            "x-kubernetes-patch-strategy": "merge"
        },
        "config": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeConfigStatus",
            "description": "Status of the config assigned to the node via the dynamic Kubelet config feature."
        },
        "daemonEndpoints": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeDaemonEndpoints",
            "description": "Endpoints of daemons running on the Node."
        },
        "images": {
            "description": "List of container images on this node",
            "items": {
                "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_ContainerImage"
            },
            "type": [
                "array",
                "null"
            ]
        },
        "nodeInfo": {
            "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_NodeSystemInfo",
            "description": "Set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info"
        },
        "phase": {
            "description": "NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated.",
            "type": [
                "string",
                "null"
            ]
        },
        "volumesAttached": {
            "description": "List of volumes that are attached to the node.",
            "items": {
                "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_core_v1_AttachedVolume"
            },
            "type": [
                "array",
                "null"
            ]
        },
        "volumesInUse": {
            "description": "List of attachable volumes in use (mounted) by the node.",
            "items": {
                "type": [
                    "string",
                    "null"
                ]
            },
            "type": [
                "array",
                "null"
            ]
        }
    },
    "type": "object"
}