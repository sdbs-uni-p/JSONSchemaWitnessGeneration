{
    "definitions": {
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_apps_v1_DaemonSetCondition": {
            "description": "DaemonSetCondition describes the state of a DaemonSet at a certain point.",
            "properties": {
                "lastTransitionTime": {
                    "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time",
                    "description": "Last time the condition transitioned from one status to another."
                },
                "message": {
                    "description": "A human readable message indicating details about the transition.",
                    "type": "string"
                },
                "reason": {
                    "description": "The reason for the condition's last transition.",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the condition, one of True, False, Unknown.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of DaemonSet condition.",
                    "type": "string"
                }
            },
            "required": [
                "type",
                "status"
            ],
            "type": "object"
        },
        "https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_apimachinery_pkg_apis_meta_v1_Time": {
            "_format": "date-time",
            "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
            "type": "string"
        }
    },
    "description": "DaemonSetStatus represents the current status of a daemon set.",
    "properties": {
        "collisionCount": {
            "description": "Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.",
            "format": "int32",
            "type": [
                "integer",
                "null"
            ]
        },
        "conditions": {
            "description": "Represents the latest available observations of a DaemonSet's current state.",
            "items": {
                "$ref": "#/definitions/https:__kubernetesjsonschema_dev_master__defs_json_defs_io_k8s_api_apps_v1_DaemonSetCondition"
            },
            "type": [
                "array",
                "null"
            ],
            "x-kubernetes-patch-merge-key": "type",
            "x-kubernetes-patch-strategy": "merge"
        },
        "currentNumberScheduled": {
            "description": "The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
            "format": "int32",
            "type": [
                "integer",
                "null"
            ]
        },
        "desiredNumberScheduled": {
            "description": "The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
            "format": "int32",
            "type": [
                "integer",
                "null"
            ]
        },
        "numberAvailable": {
            "description": "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)",
            "format": "int32",
            "type": [
                "integer",
                "null"
            ]
        },
        "numberMisscheduled": {
            "description": "The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
            "format": "int32",
            "type": [
                "integer",
                "null"
            ]
        },
        "numberReady": {
            "description": "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.",
            "format": "int32",
            "type": [
                "integer",
                "null"
            ]
        },
        "numberUnavailable": {
            "description": "The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)",
            "format": "int32",
            "type": [
                "integer",
                "null"
            ]
        },
        "observedGeneration": {
            "description": "The most recent generation observed by the daemon set controller.",
            "format": "int64",
            "type": [
                "integer",
                "null"
            ]
        },
        "updatedNumberScheduled": {
            "description": "The total number of nodes that are running updated daemon pod",
            "format": "int32",
            "type": [
                "integer",
                "null"
            ]
        }
    },
    "required": [
        "currentNumberScheduled",
        "numberMisscheduled",
        "desiredNumberScheduled",
        "numberReady"
    ],
    "type": "object"
}