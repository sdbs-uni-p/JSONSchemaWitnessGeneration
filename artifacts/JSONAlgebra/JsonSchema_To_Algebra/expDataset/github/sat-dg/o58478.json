{
    "properties": {
        "all": {
            "default": false,
            "description": "When true, update all packages in `package.json`.",
            "type": "boolean"
        },
        "force": {
            "default": false,
            "description": "When false (the default), reports an error if installed packages are incompatible with the update.",
            "type": "boolean"
        },
        "from": {
            "description": "When using `--migrateOnly` for a single package, the version of that package from which to migrate.",
            "type": "string"
        },
        "migrateExternal": {
            "default": false,
            "hidden": true,
            "type": "boolean"
        },
        "migrateOnly": {
            "default": false,
            "description": "Perform a migration, but do not update the installed version.",
            "type": "boolean"
        },
        "next": {
            "default": false,
            "description": "Update to the latest version, including beta and RCs.",
            "type": "boolean"
        },
        "packageManager": {
            "default": "npm",
            "description": "The preferred package manager configuration files to use for registry settings.",
            "enum": [
                "npm",
                "yarn",
                "cnpm",
                "pnpm"
            ],
            "type": "string"
        },
        "packages": {
            "$default": {
                "$source": "argv"
            },
            "description": "The package or packages to update.",
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "registry": {
            "description": "The npm registry to use.",
            "oneOf": [
                {
                    "format": "uri"
                },
                {
                    "format": "hostname"
                }
            ],
            "type": "string"
        },
        "to": {
            "description": "When using `--migrateOnly` for a single package, the version of that package to which to migrate.",
            "type": "string"
        },
        "verbose": {
            "description": "When true, display additional details during the update process.",
            "type": "boolean"
        }
    },
    "required": [],
    "title": "Schematic Options Schema",
    "type": "object"
}