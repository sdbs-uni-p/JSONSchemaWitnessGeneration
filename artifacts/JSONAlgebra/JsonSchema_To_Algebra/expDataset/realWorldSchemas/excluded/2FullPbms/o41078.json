{
    "$schema": "http://json-schema.org/draft-04/hyper-schema",
    "definitions": {
        "application": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Application",
            "description": "This is the root object in MidoNet REST API. From this object, clients can traverse the URIs to discover all the available services. Neutron was added in v5.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Application-v5+json"
            },
            "properties": {
                "tenants": {
                    "description": "A GET against this URI gets a list of tenants.",
                    "example": "http://example.org/midonet-api/tenants",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "version": {
                    "description": "The version of the API server.",
                    "example": "v1.5",
                    "type": [
                        "string"
                    ]
                },
                "bridges": {
                    "description": "A GET against this URI gets a list of bridges.",
                    "example": "http://example.org/midonet-api/bridges",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "chains": {
                    "description": "A GET against this URI gets a list of chains.",
                    "example": "http://example.org/midonet-api/chains",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "healthMonitors": {
                    "description": "A GET against this URI gets a list of health monitors.",
                    "example": "http://example.org/midonet-api/health_monitors",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "hosts": {
                    "description": "A GET against this URI gets a list of hosts.",
                    "example": "http://example.org/midonet-api/hosts",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "loadBalancers": {
                    "description": "A GET against this URI gets a list of load balancers.",
                    "example": "http://example.org/midonet-api/load_balancers",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "portGroups": {
                    "description": "A GET against this URI gets a list of port groups.",
                    "example": "http://example.org/midonet-api/port_groups",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "poolMembers": {
                    "description": "A GET against this URI gets a list of pool members.",
                    "example": "http://example.org/midonet-api/pool_members",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "pools": {
                    "description": "A GET against this URI gets a list of pools.",
                    "example": "http://example.org/midonet-api/pools",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "ports": {
                    "description": "A GET against this URI gets a list of ports.",
                    "example": "http://example.org/midonet-api/ports",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "ipAddrGroups": {
                    "description": "A GET against this URI gets a list of IP address groups.",
                    "example": "http://example.org/midonet-api/ip_addr_groups",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "routers": {
                    "description": "A GET against this URI gets a list of routers.",
                    "example": "http://example.org/midonet-api/routers",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "tunnelZone": {
                    "description": "A GET against this URI gets a list of tunnel zones.",
                    "example": "http://example.org/midonet-api/tunnel_zones",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "vips": {
                    "description": "A GET against this URI gets a list of vips.",
                    "example": "http://example.org/midonet-api/vips",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "neutron": {
                    "description": "A GET against this URI gets a available Neutron resources.",
                    "example": "http://example.org/midonet-api/neutron",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "adRouteTemplate": {
                    "description": "Template of the URI that represents the location of BGP with the provided ID.",
                    "example": "http://example.org/midonet-api/ad_routes/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "bgpTemplate": {
                    "description": "Template of the URI that represents the location of bridge with the provided ID.",
                    "example": "http://example.org/midonet-api/bgps/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "chainTemplate": {
                    "description": "Template of the URI that represents the location of chain with the provided ID.",
                    "example": "http://example.org/midonet-api/chains/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "healthMonitorTemplate": {
                    "description": "Template of the URI that represents the location of the health monitor with the provided ID.",
                    "example": "http://example.org/midonet-api/health_monitors/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "hostTemplate": {
                    "description": "Template of the URI that represents the location of host with the provided ID.",
                    "example": "http://example.org/midonet-api/hosts/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "loadBalancerTmplate": {
                    "description": "Template of the URI that represents the location of the health monitor with the provided ID.",
                    "example": "http://example.org/midonet-api/load_balancers/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "portTemplate": {
                    "description": "Template of the URI that represents the location of port with the provided ID.",
                    "example": "http://example.org/midonet-api/ports/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "portGroupTemplate": {
                    "description": "Template of the URI that represents the location of port group with the provided ID.",
                    "example": "http://example.org/midonet-api/port_groups/{id}",
                    "type": [
                        "string"
                    ]
                },
                "poolMemberTemplate": {
                    "description": "Template of the URI that represents the location of the pool member with the provided ID.",
                    "example": "http://example.org/midonet-api/pool_members/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "poolTemplate": {
                    "description": "Template of the URI that represents the location of the pool with the provided ID.",
                    "example": "http://example.org/midonet-api/pools/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "ipAddrGroupTemplate": {
                    "description": "Template of the URI that represents the location of port port group with the provided ID.",
                    "example": "http://example.org/midonet-api/ip_addr_groups/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "routeTemplate": {
                    "description": "Template of the URI that represents the location of route with the provided ID.",
                    "example": "http://example.org/midonet-api/routes/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "ruleTemplate": {
                    "description": "Template of the URI that represents the location of rule with the provided ID.",
                    "example": "http://example.org/midonet-api/rules/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "tenantTemplate": {
                    "description": "Template of the URI that represents the location of tenant with the provided ID.",
                    "example": "http://example.org/midonet-api/tenants/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "tunnelZoneTemplate": {
                    "description": "Template of the URI that represents the location of tunnel zone with the provided ID.",
                    "example": "http://example.org/midonet-api/tunnel_zones/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "vipTemplate": {
                    "description": "Template of the URI that represents the location of the vip with the provided ID.",
                    "example": "http://example.org/midonet-api/vips/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                }
            },
            "links": [
                {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "href": "/",
                    "rel": "self",
                    "title": "Info",
                    "method": "GET"
                }
            ]
        },
        "ad_route": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Route Advertisement",
            "description": "BGP is an entity that represents a single set of BGP configurations.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.AdRoute-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/ad_route/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/bgps/f5963cd4-6abb-4e52-94f6-2dd2a6615365/ad_routes/1af56dcd-46c3-49a1-9fd4-3b71691dd863",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "example": "1af56dcd-46c3-49a1-9fd4-3b71691dd863",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "bgpId": {
                    "description": "ID of the BGP configuration that this route advertisement is configured for.",
                    "example": "f5963cd4-6abb-4e52-94f6-2dd2a6615365",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "bgp": {
                    "description": "A GET agains this URI gets the BGP resource.",
                    "example": "http://example.org:8080/midonet-api/bgps/f5963cd4-6abb-4e52-94f6-2dd2a6615365",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "nwPrefix": {
                    "description": "The prefix address of the advertising route.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "prefixLength": {
                    "description": "The prefix length of the advertising route.",
                    "$ref": "#/definitions/commons/definitions/subnetLength"
                }
            },
            "required": [
                "nwPrefix",
                "prefixLength"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of route advertisement.",
                    "href": "/bgps/{bgpId}/ad_routes",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific route advertisement.",
                    "href": "/ad_routes/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new route advertisement.",
                    "href": "/bgps/{bgpId}/ad_routes",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific route advertisement.",
                    "href": "/ad_routes/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "bgp": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "BGP",
            "description": "BGP is an entity that represents a single set of BGP configurations.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.BGP-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/bgp/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/bgps/f5963cd4-6abb-4e52-94f6-2dd2a6615365",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "example": "f5963cd4-6abb-4e52-94f6-2dd2a6615365",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "portId": {
                    "description": "ID of the port to set the BGP confgurations on.",
                    "example": "afefefbc-66d1-46a0-8d49-a56c3554e9f8",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "port": {
                    "description": "A GET against this URI gets the port resource.",
                    "example": "http://example.org:8080/midonet-api/ports/afefefbc-66d1-46a0-8d49-a56c3554e9f8",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "localAS": {
                    "description": "Local AS number.",
                    "$ref": "#/definitions/commons/definitions/asNumber"
                },
                "peerAS": {
                    "description": "Peer BGP speaker's AS number.",
                    "$ref": "#/definitions/commons/definitions/asNumber"
                },
                "peerAddr": {
                    "description": "The address of the peer to connect to.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "adRoutes": {
                    "description": "A GET against this URi retrieves the advertised routes of this BGP speaker.",
                    "example": "http://example.org:8080/midonet-api/bgps/f5963cd4-6abb-4e52-94f6-2dd2a6615365/ad_routes",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "localAS",
                "peerAS",
                "peerAddr"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of BGPs.",
                    "href": "/ports/{portId}/bgps",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific BGP.",
                    "href": "/bgps/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new BGP.",
                    "href": "/ports/{portId}/bgps",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific BGP.",
                    "href": "/bgps/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "bridge": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Bridge",
            "description": "Bridge is an entity that represents a virtual bridge device in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Bridge-v2+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/bridge/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/bridges/9a59b96e-dcee-4695-b7f4-fb5e3d349f87",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the bridge. Must be unique within each tenant.",
                    "example": "bridge1",
                    "type": [
                        "string"
                    ]
                },
                "tenantId": {
                    "description": "ID of the tenant that owns the bridge.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "adminStateUp": {
                    "description": "The administrative state of the bridge. If false (down), the bridge stops forwarding packets. Default is true (up).",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/adminStateUp"
                },
                "ports": {
                    "descritpion": "A GET against this URI retrieves ports on this bridge.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "dhcpSubnets": {
                    "descritpion": "A GET against this URI retrieves dhcpSubnets on this bridge.",
                    "readOnly": true,
                    "example": "http://example.org:8080/midonet-api/bridges/9a59b96e-dcee-4695-b7f4-fb5e3d349f87/arp_table",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "router": {
                    "description": "A GET against this URI retrieves routers on this bridge.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "macTable": {
                    "description": "A GET against this URI retrieves the bridge's MAC table.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "peerPorts": {
                    "description": "A GET against this URI retrieves the interior ports attached to this bridge.",
                    "readOnly": true,
                    "example": "http://example.org:8080/midonet-api/bridges/9a59b96e-dcee-4695-b7f4-fb5e3d349f87/peers",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "inboundFilterId": {
                    "description": "ID of the filter chain to be applied for incoming packes.",
                    "readOnly": true,
                    "example": "cc15564b-2f0b-4579-8b4b-06c0687a7240",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "inboundFilter": {
                    "description": "A GET against this URI retrieves the inbound filter chain.",
                    "readOnly": true,
                    "example": "http://example.org:8080/midonet-api/bridges/9a59b96e-dcee-4695-b7f4-fb5e3d349f87/inboundFileter",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "outboundFilterId": {
                    "description": "ID of the filter chain to be applied for outgoing packets.",
                    "readOnly": true,
                    "example": "cc15564b-2f0b-4579-8b4b-06c0687a7240",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "outboundFilter": {
                    "description": "A GET against this URI retreives the outbound filter chain.",
                    "readOnly": true,
                    "example": "http://example.org:8080/midonet-api/bridges/9a59b96e-dcee-4695-b7f4-fb5e3d349f87/outboundFileter",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "vxlanPort": {
                    "description": "A GET against this URI retrieves the VXLAN port.",
                    "readOnly": true,
                    "example": "http://example.org:8080/midonet-api/bridges/9a59b96e-dcee-4695-b7f4-fb5e3d349f87/vxlanPort",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "name"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of bridges.",
                    "href": "/bridges",
                    "method": "GET",
                    "rel": "instances",
                    "properties": {
                        "tenant_id": {
                            "descritpion": "ID of the tenant to filter the search with."
                        }
                    }
                },
                {
                    "title": "Info",
                    "description": "Get the specific bridge.",
                    "href": "/bridges/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new bridge.",
                    "href": "/bridges",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific bridge.",
                    "href": "/bridges/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific bridge.",
                    "href": "/bridges/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "chain": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Chain",
            "description": "Chain is an entity that represents a rule chain on a virtual router in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Chain-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/chain/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/chains/cc15564b-2f0b-4579-8b4b-06c0687a7240",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "example": "cc15564b-2f0b-4579-8b4b-06c0687a7240",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "tenantId": {
                    "description": "ID of the tenant that this chain belongs to.",
                    "example": "7ae3e43d-1964-46ea-bf09-cd8fbdfb5cc9",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the chain. Unique per tenant.",
                    "example": "example_chain",
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "rules": {
                    "description": "A GET against this URI retrieves the representation of the rules set for this chain.",
                    "example": "http://example.org:8080/midonet-api/chains/cc15564b-2f0b-4579-8b4b-06c0687a7240/rules",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "name"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of chains.",
                    "href": "/chains",
                    "method": "GET",
                    "rel": "instances",
                    "properties": {
                        "tenant_id": {
                            "descritpion": "ID of the tenant to filter the search with."
                        }
                    }
                },
                {
                    "title": "Info",
                    "description": "Get the specific chain.",
                    "href": "/chains/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new router.",
                    "href": "/chains",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific chain.",
                    "href": "/chains/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "commons": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "MidoNet Common Data Schema Definitions",
            "description": "Common data schemas shared among other schemas.",
            "type": [
                "object"
            ],
            "definitions": {
                "adminStateUp": {
                    "description": "The administrative state of the resource.",
                    "readOnly": true,
                    "example": true,
                    "type": [
                        "boolean"
                    ]
                },
                "asNumber": {
                    "description": "An AS number.",
                    "example": 12345,
                    "minimum": 0,
                    "maximum": 65535,
                    "type": [
                        "integer"
                    ]
                },
                "cidr": {
                    "description": "A CIDR of the subnet.",
                    "example": "10.0.0.0/24",
                    "pattern": "^((25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9]).){3}(25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9])/(3[0-2]|((1|2)?[0-9]))$",
                    "type": [
                        "string"
                    ]
                },
                "ethertype": {
                    "description": "An Ethernet type.",
                    "example": 0,
                    "minimum": 0,
                    "maximum": 65535,
                    "type": [
                        "integer"
                    ]
                },
                "ethermask": {
                    "description": "A mask for MAC addresses.",
                    "example": "1234.5678.9abc",
                    "pattern": "^(?:(?:[a-f0-9]{4}.){2}[a-f0-9]|(?:[A-F0-9]{4}.){2}[A-F0-9])$",
                    "type": [
                        "string"
                    ]
                },
                "id": {
                    "description": "A UUID.",
                    "example": "1fcf4a17-dd31-4efc-b53b-217b086483fd",
                    "format": "uuid",
                    "type": [
                        "string"
                    ]
                },
                "identity": {
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "ipv4": {
                    "description": "An IPv4 address.",
                    "example": "1.2.3.4",
                    "format": "ipv4",
                    "type": [
                        "string"
                    ]
                },
                "ipv6": {
                    "description": "An IPv6 address.",
                    "example": "2001:0db8:0000:130F::087C:140B",
                    "type": [
                        "string"
                    ]
                },
                "subnetLength": {
                    "description": "A subnet length.",
                    "example": 24,
                    "minimum": 0,
                    "maximum": 32,
                    "type": [
                        "integer"
                    ]
                },
                "mac": {
                    "description": "A MAC address.",
                    "example": "aa:bb:cc:dd:ee:ff",
                    "pattern": "^((?:[0-9a-f]{2}:){5}[0-9a-f]{2}|(?:[0-9A-F]{2}:){5}[0-9A-F]{2})$",
                    "type": [
                        "string"
                    ]
                },
                "name": {
                    "description": "A name of the resource.",
                    "example": "example_resource",
                    "type": [
                        "string"
                    ]
                },
                "portNumber": {
                    "description": "A port number.",
                    "example": 80,
                    "minimum": 0,
                    "maximum": 65535,
                    "type": [
                        "integer"
                    ]
                },
                "seconds": {
                    "description": "Time in seconds",
                    "example": 10,
                    "minimum": 0,
                    "defualt": 0,
                    "type": [
                        "integer"
                    ]
                },
                "uri": {
                    "description": "A URI for the resource.",
                    "example": "http://example.org/",
                    "redOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "status": {
                    "description": "The status of the object. There are following states:  * UP * DOWN",
                    "readOnly": true,
                    "example": "UP",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "UP",
                        "DOWN"
                    ]
                },
                "range": {
                    "description": "A range which has the start value and the end value.",
                    "example": {
                        "start": 80,
                        "end": 400
                    },
                    "type": [
                        "object"
                    ]
                },
                "version": {
                    "description": "Version number.",
                    "example": "1.2",
                    "pattern": "^d+.d+$",
                    "type": [
                        "string"
                    ]
                },
                "vlanId": {
                    "description": "A VLAN ID.",
                    "example": 1234,
                    "minimum": 0,
                    "maximum": 4095,
                    "type": [
                        "integer"
                    ]
                },
                "weight": {
                    "description": "A weight.",
                    "example": 42,
                    "minimum": 1,
                    "default": 1,
                    "type": [
                        "integer"
                    ]
                }
            },
            "properties": {
                "adminStateUp": {
                    "$ref": "#/definitions/commons/definitions/adminStateUp"
                },
                "asNumber": {
                    "$ref": "#/definitions/commons/definitions/asNumber"
                },
                "cidr": {
                    "$ref": "#/definitions/commons/definitions/cidr"
                },
                "ethertype": {
                    "$ref": "#/definitions/commons/definitions/ethertype"
                },
                "ethermask": {
                    "$ref": "#/definitions/commons/definitions/ethermask"
                },
                "id": {
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "ipv4": {
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "ipv6": {
                    "$ref": "#/definitions/commons/definitions/ipv6"
                },
                "subnetLength": {
                    "$ref": "#/definitions/commons/definitions/subnetLength"
                },
                "mac": {
                    "$ref": "#/definitions/commons/definitions/mac"
                },
                "name": {
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "portNumber": {
                    "$ref": "#/definitions/commons/definitions/portNumber"
                },
                "seconds": {
                    "$ref": "#/definitions/commons/definitions/seconds"
                },
                "uri": {
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "status": {
                    "$ref": "#/definitions/commons/definitions/status"
                },
                "range": {
                    "$ref": "#/definitions/commons/definitions/range"
                },
                "weight": {
                    "$ref": "#/definitions/commons/definitions/weight"
                }
            },
            "links": []
        },
        "dhcp_host": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "DHCP Host",
            "description": "DHCP Subnet is an entity that represents an entry of the virtual DHCP table in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.IP4Mac-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/dhcp_host/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/bridges/9a59b96e-dcee-4695-b7f4-fb5e3d349f87/mac_table/95b74631-a87d-49c7-8cbc-e2f8ff7ddd9d",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "ipAddress": {
                    "description": "IPv4 address of the host in the form 1.2.3.4.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "macAddress": {
                    "description": "MAC Address of the host in the form AA.BB.CC.DD.EE.FF.",
                    "$ref": "#/definitions/commons/definitions/mac"
                }
            },
            "required": [
                "ipAddress",
                "macAddress"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of IP4MacPair.",
                    "href": "/bridges/{bridgeId}/arp_table",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific bridge.",
                    "href": "/bridges/{bridgeId}/arp_table/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new bridge.",
                    "href": "/bridges/{bridgeId}/arp_table",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific bridge.",
                    "href": "/bridges/{bridgeId}/arp_table/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific bridge.",
                    "href": "/bridges/{bridgeId}/arp_table/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "dhcp_subnet": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "DHCP Subnet",
            "description": "DHCP Subnet is an entity that represents an entry of the virtual DHCP table in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.IP4Mac-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/dhcp_subnet/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/bridges/9a59b96e-dcee-4695-b7f4-fb5e3d349f87/mac_table/95b74631-a87d-49c7-8cbc-e2f8ff7ddd9d",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "ip": {
                    "description": "IP version 4 address in the form 1.2.3.4.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "macPortPair": {
                    "description": "Consists of a MAC address in the form 12-34-56-78-9a-bc and the destination port's ID, separated by an underscore. For example: 12-34-56-78-9a-bc_01234567-89ab-cdef-0123-4567890abcdef.",
                    "exmple": "12-34-56-78-9a-bc_01234567-89ab-cdef-0123-4567890abcdef",
                    "type": [
                        "string"
                    ]
                }
            },
            "required": [
                "ip",
                "macPortPair"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of IP4MacPair.",
                    "href": "/bridges/{bridgeId}/arp_table",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific bridge.",
                    "href": "/bridges/{bridgeId}/arp_table/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new bridge.",
                    "href": "/bridges/{bridgeId}/arp_table",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific bridge.",
                    "href": "/bridges/{bridgeId}/arp_table/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific bridge.",
                    "href": "/bridges/{bridgeId}/arp_table/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "health_monitor": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "HealthMonitor",
            "description": "A HealthMonitor is an entity that represents a virtual health monitor device for use with load balancers in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.HealthMonitor-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/health_monitor/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/health_monitors/7a35950e-09cb-4ed1-ba20-cb6864e7e035",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "7a35950e-09cb-4ed1-ba20-cb6864e7e035",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "delay": {
                    "description": "Delay for the health check interval in seconds. Defaults to 0.",
                    "$ref": "#/definitions/commons/definitions/seconds"
                },
                "timeout": {
                    "description": "Timeout value for the health check in seconds. Defaults to 0.",
                    "$ref": "#/definitions/commons/definitions/seconds"
                },
                "maxRetries": {
                    "description": "Number of times to retry for health check. Defaults to 0.",
                    "$ref": "#/definitions/commons/definitions/seconds"
                },
                "type": {
                    "description": "A type of the health monitor checking protocol. Only \"TCP\" is supported in the current version. Read-only property.",
                    "readOnly": true,
                    "example": "TCP",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "TCP"
                    ]
                },
                "adminStateUp": {
                    "$ref": "#/definitions/commons/definitions/adminStateUp"
                },
                "status": {
                    "description": "The status of the object. There are following states:    * ACTIVE   * INACTIVE",
                    "example": "ACTIVE",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ]
                },
                "pools": {
                    "description": "A GET against this URI retrieves the pools.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/59e72865-57d2-4eda-99e7-98bcf878bc52/pools",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "type"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of health monitors",
                    "href": "/health_monitors",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific health monitor.",
                    "href": "/health_monitors/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new health monitor.",
                    "href": "/health_monitors",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific health monitor.",
                    "href": "/health_monitors/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific health monitor.",
                    "href": "/health_monitors/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "host": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Host",
            "description": "Host is an entity that provides some information about a cluster node.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Host-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/host/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/hosts/07743a54-fd7d-430e-b7b1-320843b005e3",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource. It is usually autogenerated by the daemon running on the host.",
                    "example": "07743a54-fd7d-430e-b7b1-320843b005e3",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "The last seen host name.",
                    "example": "example_host",
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "alive": {
                    "description": "Return true if the node-agent running on the host is connected to ZK.",
                    "example": true,
                    "type": [
                        "boolean"
                    ]
                },
                "addresses": {
                    "description": "The of last seen ip addresses visible on the host.",
                    "example": [
                        "10.0.0.1",
                        "10.0.0.2"
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "$ref": "#/definitions/commons/definitions/ipv4"
                    }
                },
                "interfaces": {
                    "description": "A GET against this URI gets the interface names on this host.",
                    "example": "http://example.org:8080/midonet-api/hosts/07743a54-fd7d-430e-b7b1-320843b005e3/interfaces",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "ports": {
                    "description": "A GET against this URI gets the virtual ports bound to the interfaces on this host.",
                    "example": "http://example.org:8080/midonet-api/hosts/07743a54-fd7d-430e-b7b1-320843b005e3/ports",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of hosts.",
                    "href": "/hosts",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific host.",
                    "href": "/hosts/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Update",
                    "description": "Update the specific host.",
                    "href": "/hosts/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific host.",
                    "href": "/hosts/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "host_command": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Host Command",
            "description": "This is the description of the command generated by an Interface PUT operation. For each host there is going to be a list of HostCommand objects intended to be executed sequentially to make sure that the local host configuration is kept up to date.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.HostCommand-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/host_command/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/hosts/07743a54-fd7d-430e-b7b1-320843b005e3/commands/16cf6e04-0d24-4abd-b81a-9e650e186834",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource. It is usually autogenerated by the daemon running on the host.",
                    "example": "16cf6e04-0d24-4abd-b81a-9e650e186834",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "hostId": {
                    "description": "The unique identifier of the host that is the target of this command.",
                    "example": "07743a54-fd7d-430e-b7b1-320843b005e3",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "interfaceName": {
                    "description": "The name of the interface targeted by this command.",
                    "example": "example_interface",
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "commands": {
                    "description": "Each Command has three properties: [operation, property, value]. The operation can be one of: SET, DELETE, CLEAR. The property can be one of: mtu, address, mac, interface, midonet_port_id. The value is the value of the operation as a string.",
                    "example": [
                        {
                            "operation": "SET",
                            "property": "mtu",
                            "value": "1500"
                        },
                        {
                            "operation": "DELETE",
                            "property": "mac",
                            "value": null
                        },
                        {
                            "operation": "CLEAR",
                            "property": "midonet_port_id",
                            "value": null
                        }
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "type": [
                            "object"
                        ]
                    }
                },
                "logEntries": {
                    "description": "A log entry contains a timestamp (which is a unix time long) and a string which is the error message that was generated at the moment.",
                    "example": [
                        {
                            "timestamp": null,
                            "error": ""
                        },
                        {
                            "timestamp": null,
                            "error": ""
                        }
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "type": [
                            "object"
                        ]
                    }
                }
            },
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of host commands.",
                    "href": "/hosts/{hostId}/commands",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific host command.",
                    "href": "/hosts/{hostId}/commands/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific host command.",
                    "href": "/hosts/{hostId}/commands/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "host_interface_port": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Host Interface Port",
            "description": "The HostInterfacePort binding allows mapping a virtual network port to an interface (virtual or physical) of a physical host where Midolman is running.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.HostInterfacePort-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/host_interface_port/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/hosts/07743a54-fd7d-430e-b7b1-320843b005e3/commands/16cf6e04-0d24-4abd-b81a-9e650e186834",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "hostIdd": {
                    "description": "A unique identifier of the host resource. It is usually autogenerated by the daemon running on the host.",
                    "example": "07743a54-fd7d-430e-b7b1-320843b005e3",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "interfaceName": {
                    "description": "The interface physical name.",
                    "example": "example_interface",
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "portId": {
                    "description": "A unique identifier of the port resource.",
                    "example": "afefefbc-66d1-46a0-8d49-a56c3554e9f8",
                    "$ref": "#/definitions/commons/definitions/id"
                }
            },
            "required": [
                "hostId",
                "interfaceName",
                "portId"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of host interface ports.",
                    "href": "/hosts/{hostId}/ports",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific host interface port.",
                    "href": "/hosts/{hostId}/ports/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new host interface port",
                    "href": "/hosts/{hostId}/ports",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific host interface port.",
                    "href": "/hosts/{hostId}/ports/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific host interface port.",
                    "href": "/hosts/{hostId}/ports/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "host_version": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Host Version",
            "description": "The Host Version specifies version information for each host running in the Midonet deployment.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.HostVersion-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/host_version/properties/version"
                }
            },
            "properties": {
                "version": {
                    "description": "The version of Midolman agent running on the host.",
                    "example": "1.6",
                    "$ref": "#/definitions/commons/definitions/version"
                },
                "hostId": {
                    "description": "The the UUID of the host that the Midolman agent is running on.",
                    "example": "07743a54-fd7d-430e-b7b1-320843b005e3",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "host": {
                    "description": "The URI of the host that the Midolman agent is running on.",
                    "example": "http://example.org:8080/midonet-api/hosts/07743a54-fd7d-430e-b7b1-320843b005e3",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "version",
                "hostId",
                "host"
            ],
            "links": [
                {
                    "title": "Info",
                    "description": "Get the specific VTEP.",
                    "href": "/versions",
                    "method": "GET",
                    "rel": "self"
                }
            ]
        },
        "interface": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Interface",
            "description": "The interface is an entity abstracting information about a physical interface associated with a host.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Interface-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/interface/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/hosts/07743a54-fd7d-430e-b7b1-320843b005e3/interfaces/af7c74ec-913c-4974-90b2-188e48ba3532",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "hostId": {
                    "description": "The unique identifier of the host that owns this interface.",
                    "example": "af7c74ec-913c-4974-90b2-188e48ba3532",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "The interface physical name.",
                    "example": "example_interface",
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "mac": {
                    "description": "The interface physical address (MAX).",
                    "$ref": "#/definitions/commons/definitions/mac"
                },
                "mtu": {
                    "description": "The interface MTU value.",
                    "minimum": 0,
                    "example": 1500,
                    "type": [
                        "integer"
                    ]
                },
                "status": {
                    "description": "Bitmask of status flags. Currently we provide information about UP status and Carrier status (0x01, 0x02 respectively)",
                    "example": 1,
                    "type": [
                        "integer"
                    ],
                    "enum": [
                        1,
                        2
                    ]
                },
                "type": {
                    "description": "Interface type (the best information that we have been able to infer). Can be: Unknown | Physical | Virtual | Tunnel",
                    "example": "Physical",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "Unknown",
                        "Physical",
                        "Virtual",
                        "Tunnel"
                    ]
                },
                "addresses": {
                    "description": "The list of inet addresses bound to this interface.",
                    "example": [
                        "10.0.0.1",
                        "10.0.0.2"
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "$ref": "#/definitions/commons/definitions/ipv4"
                    }
                }
            },
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of interfaces.",
                    "href": "/hosts/{hostId}/interfaces",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific interface.",
                    "href": "/hosts/{hostId}/interfaces/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new interface.",
                    "href": "/hosts/{hostId}/interfaces",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific interface.",
                    "href": "/hosts/{hostId}/interfaces/{id}",
                    "method": "PUT",
                    "rel": "update"
                }
            ]
        },
        "ip4_mac_pair": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "IP4MacPair",
            "description": "IP4MacPair is an entity that represents an entry of the virtual ARP table in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.IP4Mac-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/ip4_mac_pair/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/bridges/9a59b96e-dcee-4695-b7f4-fb5e3d349f87/mac_table/95b74631-a87d-49c7-8cbc-e2f8ff7ddd9d",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "ip": {
                    "description": "IP version 4 address in the form 1.2.3.4.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "mac": {
                    "description": "A MAC address in the form aa:bb:cc:dd:ee:ff. If ARP replies are enabled on the bridge, the ip will resolve to this MAC.",
                    "$ref": "#/definitions/commons/definitions/mac"
                }
            },
            "required": [
                "ip",
                "mac"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of IP4MacPair.",
                    "href": "/bridges/{bridgeId}/arp_table",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific bridge.",
                    "href": "/bridges/{bridgeId}/arp_table/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new bridge.",
                    "href": "/bridges/{bridgeId}/arp_table",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific bridge.",
                    "href": "/bridges/{bridgeId}/arp_table/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific bridge.",
                    "href": "/bridges/{bridgeId}/arp_table/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "ip_addr_group": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "IP Address Group",
            "description": "IP address group is a group of IP addresss. Currently only IPv4 is supported. An IP address group can be specified in the chain rule to filter the traffic coming from all the addresses belonging to that the specified group.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.IpAddrGroup-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/ip_addr_group/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/ip_addr_groups/a7d05156-5212-409c-9276-b0a1b4ac5eae",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "example": "a7d05156-5212-409c-9276-b0a1b4ac5eae",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the group.",
                    "example": "example_ip_address_group",
                    "type": [
                        "string"
                    ]
                },
                "addrs": {
                    "description": "URI for address membership operations.",
                    "exmple": "http://example.org:8080/midonet-api/ip_addr_groups/a7d05156-5212-409c-9276-b0a1b4ac5eae/versions/4/ip_addrs",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "name"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of IP address groups.",
                    "href": "/ip_addr_groups",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific IP address group.",
                    "href": "/ip_addr_groups/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new IP address group.",
                    "href": "/ip_addr_groups",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific IP address group.",
                    "href": "/ip_addr_groups/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific IP address group.",
                    "href": "/ip_addr_groups/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "ip_addr_group_addr": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "IP Address Group Address",
            "description": "IpAddrGroupAddr represents membership of IP address in IP address groups.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.IpAddrGroupAddr-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/ip_addr_group_addr/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/ip_addr_groups/a7d05156-5212-409c-9276-b0a1b4ac5eae/ip_addrs/229b39e5-ff1c-4f0f-9d91-9adf6122d423",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "exmple": "229b39e5-ff1c-4f0f-9d91-9adf6122d423",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "ipAddrGroupId": {
                    "description": "ID of the IP address group that this IP address is a member of.",
                    "example": "a7d05156-5212-409c-9276-b0a1b4ac5eae",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "ipAddrGroup": {
                    "description": "URI to fetch the IP address group.",
                    "example": "http://example.org:8080/midonet-api/ip_addr_groups/a7d05156-5212-409c-9276-b0a1b4ac5eae",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "addr": {
                    "description": "IP Address member in an IP address group.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                }
            },
            "required": [
                "addr"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of IP address group addresses.",
                    "href": "/ip_addr_groups/{ipAddrGroupId}/version/4/ip_addrs",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific IP address group address.",
                    "href": "/ip_addr_groups/{ipAddrGroupId}/ip_addrs/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new IP address group address.",
                    "href": "/ip_addr_groups/{ipAddrGroupId}/ip_addrs",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific IP address group.",
                    "href": "/ip_addr_groups/{ipAddrGroupId}/ip_addrs/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "load_balancer": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Load Balancer",
            "description": "LoadBalancer is an entity that represents a virtual load balancer device in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.LoadBalancer-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/load_balancer/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/b6fac5fc-2d3f-4a81-9eba-feab374cb310",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "b6fac5fc-2d3f-4a81-9eba-feab374cb310",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "routerId": {
                    "description": "A unique identifier of the associated router. This property is readonly and not allowed to be updated by users. Please assign load balancers to routers through routers.",
                    "example": "9a59b96e-dcee-4695-b7f4-fb5e3d349f87",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "router": {
                    "description": "A URI of the associated router.",
                    "example": "http://example.org:8080/midonet-api/routers/9a59b96e-dcee-4695-b7f4-fb5e3d349f87",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "adminStateUp": {
                    "$ref": "#/definitions/commons/definitions/adminStateUp"
                },
                "vips": {
                    "description": "A GET against this URI gets the list of VIPs associated with the load balancer.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/b6fac5fc-2d3f-4a81-9eba-feab374cb310/vips",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "pools": {
                    "description": "A GET against this URI gets the list pools associated with the load balancer.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/b6fac5fc-2d3f-4a81-9eba-feab374cb310/pools",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of load blancers.",
                    "href": "/load_balancers",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific load balancer.",
                    "href": "/load_balancers/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new load balancer.",
                    "href": "/load_balancers",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific load balancer.",
                    "href": "/load_balancers/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific load balancer.",
                    "href": "/load_balancers/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "mac_port": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "MacPort",
            "description": "MacPort is an entity that represents an entry of the MAC table in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.MacPort-v2+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/mac_port/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "/routers/e2f2d94b-a724-4d43-9a86-c67aa72bb010",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "vlanId": {
                    "description": "ID of the VLAN to which the port with ID portId belongs. This field is used only in responses to GET requests and will be ignored in POST requests.",
                    "example": "a983cf1a-59ee-45e8-9e3c-1fe30e02f194",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "macAddr": {
                    "description": "A MAC address in the form aa:bb:cc:dd:ee:ff.",
                    "example": "aa:bb:cc:dd:ee:ff",
                    "$ref": "#/definitions/commons/definitions/mac"
                },
                "portId": {
                    "description": "ID of the port to which the packets destined to the macAddr will be emitted.",
                    "example": "bf698e2e-dd2f-4a5f-a8e5-d10efcad8320",
                    "$ref": "#/definitions/commons/definitions/id"
                }
            },
            "required": [
                "macAddr",
                "portId"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of entries of the MAC table.",
                    "href": "/bridges/{bridgeId}/mac_table",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "List (VLAN)",
                    "description": "Get the list of entries of the MAC table associated with the specific VLAN.",
                    "href": "/bridges/{bridgeId}/mac_table",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific entry in the MAC table.",
                    "href": "/bridges/{bridgeId}/mac_table/{macPortPair}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Info (VLAN)",
                    "description": "Get the specific entry in the MAC table associated with the specific VLAN.",
                    "href": "/bridges/{bridgeId}/mac_table/{macPortPair}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new entry in the MAC table.",
                    "href": "/bridges/{bridgeId}/mac_table",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Create (VLAN)",
                    "description": "Create a new entry in the MAC table.",
                    "href": "/bridges/{bridgeId}/vlans/{vlanId}/mac_table",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific entry in the MAC table.",
                    "href": "/bridges/{bridgeId}/mac_table/{macPortPair}",
                    "method": "DELETE",
                    "rel": "delete"
                },
                {
                    "title": "Delete (VLAN)",
                    "description": "Delete the specific entry in the MAC table associated with the specific VLAN.",
                    "href": "/bridges/{bridgeId}/vlans/{vlanId}/mac_table/{macPortPair}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "neutron": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Neutron",
            "description": "This is the root object of the Neutron resource in MidoNet REST API. From this object, clients can discover the URIs for all the Neutron services provided by MidoNet REST API.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.neutron.Neutron-v1+json"
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/neutron",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "networks": {
                    "description": "A GET against this URI gets a list of Neutron networks. A POST against this URI creates a new Neutron network.",
                    "example": "http://example.org:8080/midonet-api/neutron/networks",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "subnets": {
                    "description": "A GET against this URI gets a list of Neutron subnets. A POST against this URI creates a new Neutron subnet.",
                    "example": "http://example.org:8080/midonet-api/neutron/subnets",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "ports": {
                    "description": "A GET against this URI gets a list of Neutron ports. A POST against this URI creates a new Neutron port.",
                    "example": "http://example.org:8080/midonet-api/neutron/ports",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "routers": {
                    "description": "A GET against this URI gets a list of Neutron routers. A POST against this URI creates a new Neutron router.",
                    "example": "http://example.org:8080/midonet-api/neutron/routers",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "floating_ips": {
                    "description": "A GET against this URI gets a list of Neutron floating IP addresses. A POST against this URI creates a new Neutron floating IP address.",
                    "example": "http://example.org:8080/midonet-api/neutron/floating_ips",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "security_groups": {
                    "description": "A GET against this URI gets a list of Neutron security groups. A POST against this URI creates a new Neutron security group.",
                    "example": "http://example.org:8080/midonet-api/neutron/security_groups",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "security_groups_rules": {
                    "description": "A GET against this URI gets a list of Neutron security group rules. A POST against this URI creates a new Neutron security group rule.",
                    "example": "http://example.org:8080/midonet-api/neutron/security_group_rules",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "network_template": {
                    "description": "URI Template that represents the location of a Neutron network.",
                    "readOnly": true,
                    "example": "http://example.org:8080/midonet-api/neutron/networks/{id}",
                    "type": [
                        "string"
                    ]
                },
                "subnet_template": {
                    "description": "URI Template that represents the location of a Neutron subnet.",
                    "readOnly": true,
                    "example": "http://example.org:8080/midonet-api/neutron/subnets/{id}",
                    "type": [
                        "string"
                    ]
                },
                "port_template": {
                    "description": "URI Template that represents the location of a Neutron port.",
                    "example": "http://example.org:8080/midonet-api/neutron/ports/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "router_template": {
                    "description": "URI Template that represents the location of a Neutron router.",
                    "example": "http://example.org:8080/midonet-api/neutron/routers/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "add_router_interface_template": {
                    "description": "A PUT against the URI constructed from this template adds a Neutron router interface.",
                    "example": "http://example.org:8080/midonet-api/neutron/router/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "remove_router_interface_template": {
                    "description": "A PUT against the URI constructed from this template removes a Neutron router interface.",
                    "example": "http://example.org:8080/midonet-api/neutron/router/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "floating_ip_template": {
                    "description": "URI Template that represents the location of a Neutron floating IP.",
                    "example": "http://example.org:8080/midonet-api/neutron/floating_ips/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "security_group_template": {
                    "description": "URI Template that represents the location of a Neutron security group.",
                    "example": "http://example.org:8080/midonet-api/neutron/security_groups/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "security_group_rule_template": {
                    "description": "URI Template that represents the location of a Neutron security group rule.",
                    "example": "http://example.org:8080/midonet-api/neutron/security_group_rules/{id}",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                }
            },
            "links": [
                {
                    "title": "Info",
                    "description": "Get the list of bridges.",
                    "href": "/neutron",
                    "method": "GET",
                    "rel": "instances",
                    "properties": {
                        "tenant_id": {
                            "descritpion": "ID of the tenant to filter the search with."
                        }
                    }
                }
            ]
        },
        "neutron_floating_ip": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Neutron Floating IP",
            "description": "",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.neutron.Port-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/neutron_floating_ip/properties/id"
                }
            },
            "properties": {
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "1405d6c6-a199-44d6-b9af-756dc6f5e3f7",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "tenant_id": {
                    "description": "efd28582-bb5d-487c-9286-9a19af4ab0a4",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "floating_network_id": {
                    "description": "ID of the externa network from which the floating IP address was allocated from.",
                    "example": "7c230d30-e6cb-45d0-80bb-cb494073af50",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "router_id": {
                    "description": "ID of the router where the floating IP is NATed.",
                    "example": "4d8c339e-5fd6-4073-8ede-3ff6034695d8",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "port_id": {
                    "description": "Private IP address that the floating IP is associated with in the format x.x.x.x/y, such as 10.0.0.3/24",
                    "example": "fe6dddfe-eb36-4dd1-8292-a53e08d04a6f",
                    "$ref": "#/definitions/commons/definitions/id"
                }
            },
            "require": [
                "tenant_id",
                "floating_ip_address",
                "floating_network_id",
                "router_id",
                "fixed_ip_address"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of the neutron floating IPs.",
                    "href": "/neutron/floating_ips",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific neutron floating IP.",
                    "href": "/neutron/floating_ips/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new neutron floating IP.",
                    "href": "/neutron/floating_ips/",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the sepcific neutron floating IP.",
                    "href": "/neutron/floating_ips/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific neutron floating IP.",
                    "href": "/neutron/floating_ips/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "neutron_network": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Neutron Network",
            "description": "If a network is created and marked as external, MidoNet API also creates an administratively owned router called Provider Router. Provider router is a MidoNet virtual router that serves as the gateway router for the OpenStack Neutron deployment. This router is responsible for forwarding traffic between the Internet and the OpenStack cloud. It is up to the network operator to configure this router. There can be at most one instance of provider router at any time. To locate this router, search for the router with the name 'MidoNet Provider Router'.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.neutron.Network-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/neutron_network/properties/id"
                }
            },
            "properties": {
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "9a59b96e-dcee-4695-b7f4-fb5e3d349f87",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the resource.",
                    "example": "neutron_network",
                    "type": [
                        "string"
                    ]
                },
                "tenant_id": {
                    "description": "ID of the tenant that owns the resource.",
                    "example": "efd28582-bb5d-487c-9286-9a19af4ab0a4",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "admin_state_up": {
                    "description": "The administrative state of the resource. Default is true (up).",
                    "example": true,
                    "type": [
                        "boolean"
                    ]
                },
                "external": {
                    "description": "Indicates whether this network is external - administraively owned. Default is false.",
                    "exmple": true,
                    "type": [
                        "boolean"
                    ]
                },
                "shared": {
                    "description": "Indicates whether this resource is shared among tenants.",
                    "exmple": true,
                    "type": [
                        "boolean"
                    ]
                },
                "status": {
                    "readOnly": true,
                    "example": "",
                    "type": [
                        "string"
                    ]
                }
            },
            "require": [
                "tenant_id"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of the neutron network.",
                    "href": "/neutron/networks",
                    "method": "GET",
                    "rel": "instances",
                    "mediaType": "application/vnd.org.midonet.neutron.Networks-v1+json"
                },
                {
                    "title": "Info",
                    "description": "Get the specific neutron network.",
                    "href": "/neutron/networks/{id}",
                    "method": "GET",
                    "rel": "self",
                    "mediaType": "application/vnd.org.midonet.neutron.Network-v1+json"
                },
                {
                    "title": "Create",
                    "description": "Create a new neutron network.",
                    "href": "/neutron/networks",
                    "method": "POST",
                    "rel": "create",
                    "mediaType": "application/vnd.org.midonet.neutron.Network-v1+json"
                },
                {
                    "title": "Update",
                    "description": "Update the sepcific neutron network.",
                    "href": "/neutron/networks/{id}",
                    "method": "PUT",
                    "rel": "update",
                    "mediaType": "application/vnd.org.midonet.neutron.Network-v1+json"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific neutron network.",
                    "href": "/neutron/networks/{id}",
                    "method": "DELETE",
                    "rel": "delete",
                    "mediaType": "application/vnd.org.midonet.neutron.Network-v1+json"
                }
            ]
        },
        "neutron_port": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Neutron Port",
            "description": "",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.neutron.Port-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/neutron_port/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "/routers/3db09bea-992d-476c-a06c-f086058da49b",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "1405d6c6-a199-44d6-b9af-756dc6f5e3f7",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the resource.",
                    "example": "neutron_port",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "tenant_id": {
                    "description": "efd28582-bb5d-487c-9286-9a19af4ab0a4",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "admin_state_up": {
                    "description": "The administrative state of the resource. Default is true (up).",
                    "example": true,
                    "type": [
                        "boolean"
                    ]
                },
                "network_id": {
                    "description": "ID of the network this port belongs to.",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "mac_address": {
                    "description": "MAC address of the instance attached to this port.",
                    "$ref": "#/definitions/commons/definitions/mac"
                },
                "fixed_ips": {
                    "description": "List of IP addresses assigned to this port and the subnet that the address was allocated from.",
                    "example": [
                        {
                            "ip_address": "10.0.0.2",
                            "subnet_id": "2b061d5e-4c0d-448c-be6c-4495d73ba5ad"
                        }
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "type": [
                            "object"
                        ]
                    }
                },
                "device_id": {
                    "description": "ID of the device that owns the port.",
                    "example": "77eb1bf3-e110-4f86-b0b6-bc5ff0fa5e84",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "device_owner": {
                    "description": "Owner of the device that owns the port. If none of the possible values is set, then the port is considered to be VIF port where a VM attaches to.",
                    "example": "network:dhcp",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "network:dhcp",
                        "network:floatingip",
                        "network:router_gateway",
                        "network:router_interface"
                    ]
                },
                "status": {
                    "description": "Status of this resource. This field is currently unused.",
                    "example": "",
                    "type": [
                        "string"
                    ]
                }
            },
            "require": [
                "tenant_id",
                "network_id"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of the neutron ports.",
                    "href": "/neutron/ports",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific neutron port.",
                    "href": "/neutron/ports/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new neutron port.",
                    "href": "/neutron/ports",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the sepcific neutron port.",
                    "href": "/neutron/ports/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific neutron port.",
                    "href": "/neutron/ports/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "neutron_router": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Neutron Router",
            "description": "",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.neutron.Router-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/neutron_router/properties/id"
                }
            },
            "properties": {
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "1405d6c6-a199-44d6-b9af-756dc6f5e3f7",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the resource.",
                    "example": "neutron_port",
                    "type": [
                        "string"
                    ]
                },
                "tenant_id": {
                    "description": "ID of the tenant that owns the resource.",
                    "example": "efd28582-bb5d-487c-9286-9a19af4ab0a4",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "admin_state_up": {
                    "description": "The administrative state of the resource. Default is true (up).",
                    "example": true,
                    "type": [
                        "boolean"
                    ]
                },
                "gw_port_id": {
                    "description": "ID of the gateway port on the external network.",
                    "example": "963e19da-3e66-4594-8576-dfcb3885b187",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "external_gateway": {
                    "description": "Information about the gateway, which consists of the following fields:   * network_id: ID of the external network. This field is required.   * enable_snat: Enabling SNAT allows VMs to reach the Internet. This                  field is optional and is defaulted to True.",
                    "exmple": {
                        "network_id": "12b31de0-875c-4e8d-ade0-9068f2dd16e6",
                        "enable_snat": true
                    },
                    "type": [
                        "object"
                    ]
                },
                "status": {
                    "description": "Status of this resource. This field is currently unused.",
                    "example": "",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                }
            },
            "require": [
                "tenant_id"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of the neutron router.",
                    "href": "/neutron/routers",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific neutron router.",
                    "href": "/neutron/routers/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new neutron router.",
                    "href": "/neutron/routers",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the sepcific neutron router.",
                    "href": "/neutron/routers/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific neutron router.",
                    "href": "/neutron/routers/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "neutron_router_interface": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Neutron Router Interface",
            "description": "",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.neutron.RouterInterface-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/neutron_router_interface/properties/id"
                }
            },
            "properties": {
                "id": {
                    "description": "ID of the router to which an interface is added to or removed from.",
                    "example": "1405d6c6-a199-44d6-b9af-756dc6f5e3f7",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "tenant_id": {
                    "description": "ID of the tenant that owns the resource.",
                    "example": "efd28582-bb5d-487c-9286-9a19af4ab0a4",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "port_id": {
                    "description": "ID of the interface port.",
                    "example": "5da4a6a4-6d5d-43e4-8f8c-d2a902284d84",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "subnet_id": {
                    "description": "ID of the subnet to which the interface port is allocated in.",
                    "example": "5da4a6a4-6d5d-43e4-8f8c-d2a902284d84",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                }
            },
            "require": [
                "tenant_id",
                "port_id",
                "subnet_id"
            ],
            "links": [
                {
                    "title": "Add router interface",
                    "description": "Update the sepcific neutron router.",
                    "href": "/neutron/routers/{id}/add_router_interface",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Remove router interface",
                    "description": "Update the sepcific neutron router.",
                    "href": "/neutron/routers/{id}/remove_router_interface",
                    "method": "PUT",
                    "rel": "update"
                }
            ]
        },
        "neutron_security_group": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Neutron Security Group",
            "description": "",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.neutron.SecurityGroup-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/neutron_security_group/properties/id"
                }
            },
            "properties": {
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "1405d6c6-a199-44d6-b9af-756dc6f5e3f7",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the resource.",
                    "example": "neutron_network",
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "tenant_id": {
                    "description": "ID of the tenant that owns the resource.",
                    "example": "efd28582-bb5d-487c-9286-9a19af4ab0a4",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "description": {
                    "description": "Description of the resource.",
                    "example": "neutron_network",
                    "type": [
                        "string"
                    ]
                },
                "security_group_rules": {
                    "description": "List of rules belonging to this security group.",
                    "example": [
                        {
                            "direction": "ingress",
                            "tenant_id": "foo",
                            "ethertype": "ipv4"
                        }
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "type": [
                            "object"
                        ]
                    }
                }
            },
            "require": [
                "tenant_id"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of the neutron security groups.",
                    "href": "/neutron/security_groups",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific neutron security groups.",
                    "href": "/neutron/security_groups/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new neutron security group.",
                    "href": "/neutron/security_groups/",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the sepcific neutron security group.",
                    "href": "/neutron/security_groups/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific neutron security group.",
                    "href": "/neutron/security_groups/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "neutron_security_group_rule": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Neutron Security Group Rule",
            "description": "",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.neutron.SecurityGroupRule-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/neutron_security_group_rule/properties/id"
                }
            },
            "properties": {
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.  If you want to match on a particular port number, specify that number for both port_range_min and port_range_max.",
                    "example": "1405d6c6-a199-44d6-b9af-756dc6f5e3f7",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the resource.",
                    "example": "neutron_subnet",
                    "type": [
                        "string"
                    ]
                },
                "tenant_id": {
                    "description": "efd28582-bb5d-487c-9286-9a19af4ab0a4",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "security_group_id": {
                    "description": "ID of the security group that the rule belongs to.",
                    "exmple": "508d3244-071c-441c-9b5d-3d8cd0c1a39b",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "remote_group_id": {
                    "description": "ID of the security group to match against.",
                    "exmple": "1d90e7ca-32af-4019-bd67-f8d0378248f7",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "direction": {
                    "description": "Direction of traffic to apply the rule. Egress is traffic leaving the VM. Ingress is traffic destined to the VM.",
                    "exmple": "eggress",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "eggress",
                        "ingress"
                    ]
                },
                "protocol": {
                    "description": "Protocol to match against.",
                    "example": "tcp",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "tcp",
                        "udp",
                        "icmp",
                        "icmpv6"
                    ]
                },
                "port_range_min": {
                    "description": "Start protocol port number to match on.",
                    "example": 80,
                    "type": [
                        "integer"
                    ]
                },
                "port_range_max": {
                    "description": "End protocol port number to match on.",
                    "example": 8080,
                    "type": [
                        "integer"
                    ]
                },
                "ethertype": {
                    "description": "  Ethertype to match on. Possible values are:      * arp     * ipv4     * ipv6 (not yet supported)",
                    "example": "arp",
                    "type": [
                        "string"
                    ]
                },
                "remote_ip_prefix": {
                    "description": "IP address in the CIDR format (x.x.x.x/y) to match on.",
                    "exmple": "10.0.10.0/24",
                    "type": [
                        "string"
                    ]
                }
            },
            "require": [
                "tenant_id",
                "security_group_id",
                "direction"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of the neutron security group rules.",
                    "href": "/neutron/security_group_rules",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific neutron security group rule.",
                    "href": "/neutron/security_group_rules/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new neutron security group rule.",
                    "href": "/neutron/security_group_rules/",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the sepcific neutron security group rule.",
                    "href": "/neutron/security_group_rules/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific neutron security group rule.",
                    "href": "/neutron/security_group_rules/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "neutron_subnet": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Neutron Subnet",
            "description": "",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.neutron.Subnet-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/neutron_subnet/properties/id"
                }
            },
            "properties": {
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "1405d6c6-a199-44d6-b9af-756dc6f5e3f7",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the resource.",
                    "example": "neutron_subnet",
                    "type": [
                        "string"
                    ]
                },
                "tenant_id": {
                    "description": "efd28582-bb5d-487c-9286-9a19af4ab0a4",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "admin_state_up": {
                    "description": "The administrative state of the resource. Default is true (up).",
                    "example": true,
                    "type": [
                        "boolean"
                    ]
                },
                "ip_version": {
                    "description": "Version of IP (4 or 6) Currently only 4 is supported.",
                    "example": 4,
                    "type": [
                        "integer"
                    ]
                },
                "share": {
                    "description": "Indicates whether this resource is shared among tenants.",
                    "example": true,
                    "type": [
                        "boolean"
                    ]
                },
                "cidr": {
                    "description": "CIDR of the subnet Format should be x.x.x.x/y, such as 10.0.0.0/24.",
                    "example": "10.0.0.0/24",
                    "$ref": "#/definitions/commons/definitions/cidr"
                },
                "gateway_ip": {
                    "description": "Gateway IP address of this subnet.",
                    "example": "10.0.0.1",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "enable_dhcp": {
                    "description": "Enable/disable DHCP on this subnet. Default is true (enabled).",
                    "example": true,
                    "type": [
                        "boolean"
                    ]
                },
                "allocation_pools": {
                    "description": "List of IP range pairs to specify the range of IPs used to allocate to ports.",
                    "example": [
                        {
                            "start": "192.168.100.2",
                            "end": "192.168.100.254"
                        }
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "type": [
                            "object"
                        ]
                    }
                },
                "host_routes": {
                    "description": "List of routes to specify option 121 routes to include in DHCP.",
                    "example": [
                        {
                            "destination": "10.0.0.2/24",
                            "nexthop": "10.0.1.1"
                        }
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "type": [
                            "object"
                        ]
                    }
                },
                "dns_nameserver": {
                    "destination": "List of String indicating the DNS nameservers to include in DHCP.",
                    "example": [
                        "8.8.8.8",
                        "8.8.4.4"
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "$ref": "#/definitions/commons/definitions/ipv4"
                    }
                }
            },
            "require": [
                "tenant_id"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of the neutron subnets.",
                    "href": "/neutron/subnets",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific neutron subnet.",
                    "href": "/neutron/subnets/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new neutron subnet.",
                    "href": "/neutron/subnets",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the sepcific neutron subnet.",
                    "href": "/neutron/subnets/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific neutron subnet.",
                    "href": "/neutron/subnets/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "pool": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Pool",
            "description": "A Pool is an entity that represents a group of backend load balancer addresses in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Pool-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/pool/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/59e72865-57d2-4eda-99e7-98bcf878bc52/pools/31ebc9bc-83a3-4a3c-b2a8-94a3cd9059a6",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "31ebc9bc-83a3-4a3c-b2a8-94a3cd9059a6",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "loadBalancerId": {
                    "description": "Load balancer object to which it is associated with.",
                    "example": "59e72865-57d2-4eda-99e7-98bcf878bc52",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "loadBalancer": {
                    "description": "A GET against this URI gets the load balancer object.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/59e72865-57d2-4eda-99e7-98bcf878bc52",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "protocol": {
                    "description": "The read-only value represents the protocol used in the load balancing. Only \"TCP\" is supported.",
                    "example": "TCP",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "TCP"
                    ]
                },
                "lbMethod": {
                    "description": "Load balancing algorithm. Only \"ROUND_ROBIN\" is supported.",
                    "example": "ROUND_ROBIN",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "ROUND_ROBIN"
                    ]
                },
                "healthMonitorId": {
                    "description": "ID of the health monitor object to assign to the pool.",
                    "example": "068a9c0f-5eda-467f-a00e-49177c186bbd",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "healthMonitor": {
                    "description": "A GET against this URI gets the health monitor object.",
                    "example": "http://example.org:8080/midonet-api/health_monitors/e1244270-928d-4cf2-b23b-40fd5fc25755",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "poolMember": {
                    "description": "A GET against this URI gets the list of URLs for the member objects.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/59e72865-57d2-4eda-99e7-98bcf878bc52/pools/31ebc9bc-83a3-4a3c-b2a8-94a3cd9059a6/pool_members",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "adminStateUp": {
                    "$ref": "#/definitions/commons/definitions/adminStateUp"
                },
                "vips": {
                    "description": "A GET against this URI gets the list of VIPs associated with the pool.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/59e72865-57d2-4eda-99e7-98bcf878bc52/pools/31ebc9bc-83a3-4a3c-b2a8-94a3cd9059a6/vips",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "loadBalancerId",
                "lbMethod"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of pools on a load balancer.",
                    "href": "/load_balancers/{loadBalancerId}/pools",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific pool on a load blancer.",
                    "href": "/load_balancers/{loadBalancerId}/pools/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new pool on a load balancer.",
                    "href": "/load_balancers/{loadBalancerId}/pools",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific pool on a load balancer.",
                    "href": "/load_balancers/{loadBalancerId}/pools/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific pool on a load balancer.",
                    "href": "/load_balancers/{loadBalancerId}/pools/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "pool_member": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "PoolMembe",
            "description": "A PoolMember is an entity that represents a backend load balancer address in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.PoolMember-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/pool_member/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/59e72865-57d2-4eda-99e7-98bcf878bc52/pools/31ebc9bc-83a3-4a3c-b2a8-94a3cd9059a6/pool_members/109bc661-48c1-4a07-b634-888a7c0594c3",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "109bc661-48c1-4a07-b634-888a7c0594c3",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "poolId": {
                    "description": "ID of the pool.",
                    "example": "31ebc9bc-83a3-4a3c-b2a8-94a3cd9059a6",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "pool": {
                    "description": "A GET against this URI retrieves the Pool.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/59e72865-57d2-4eda-99e7-98bcf878bc52/pools/31ebc9bc-83a3-4a3c-b2a8-94a3cd9059a6",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "address": {
                    "description": "IP address of the member.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "protocolPort": {
                    "description": "Protocol port of the member.",
                    "$ref": "#/definitions/commons/definitions/portNumber"
                },
                "weight": {
                    "description": "Weight used for random algorithm. Defaults to 1.",
                    "$ref": "#/definitions/commons/definitions/weight"
                },
                "adminStateUp": {
                    "description": "Administrative state of the object.",
                    "$ref": "#/definitions/commons/definitions/adminStateUp"
                },
                "status": {
                    "description": "The status of the object. Values are:   * UP   * DOWN",
                    "$ref": "#/definitions/commons/definitions/status"
                }
            },
            "required": [
                "poolId",
                "address",
                "protocolPort"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of pool members on a pool.",
                    "href": "/load_balancers/{loadBalancerId}/pools/{poolId}/pool_members",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific pool on a load blancer.",
                    "href": "/load_balancers/{loadBalancerId}/pools/{poolId}/pool_members/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new pool on a load balancer.",
                    "href": "/load_balancers/{loadBalancerId}/pools/{poolId}/pool_members",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific pool on a load balancer.",
                    "href": "/load_balancers/{loadBalancerId}/pools/{poolId}/pool_members/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific pool on a load balancer.",
                    "href": "/load_balancers/{loadBalancerId}/pools/{poolId}/pool_members/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "port": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Port",
            "description": "Port is an entity that represents a port on a virtual device (bridge or router) in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Port-v2+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/port/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/ports/afefefbc-66d1-46a0-8d49-a56c3554e9f8",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "example": "afefefbc-66d1-46a0-8d49-a56c3554e9f8",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "adminStateUp": {
                    "description": "The administrative state of the port. If false (down), the port stops forwarding packets. If it is a router port, it adittionally replies with a  'Communication administratively prohibited' ICMP Default is true (up).",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/adminStateUp"
                },
                "deviceId": {
                    "description": "ID of the device (bridge or router) that this port belongs to.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "type": {
                    "description": "Type of device port. It must be one of:    * Router   * Bridge  A new router or bridge port is unplugged. Depending on what it is later attached to, it is referred to as an exterior or interior port.  An exterior router port is a virtual port that plugs into the VIF of an entity, such as a VM. It can also be a virtual port connected to a host physical port, directly or after implementing tunnel encapsulation. Access to exterior ports is managed by OpenVSwitch (OpenFlow switch). Exterior bridge port is the same as exterior router port but it is a port on a virtual bridge. Upon being bound to an interface, the port becomes exterior and will have the hostId, host, and interfaceName fields be non-null. The peer and peerId fields will be null.  An interior router port is a virtual port that only exists in the MidoNet virtual router network abstraction. It refers to a logical connection to another virtual networking device such as another router. An interior bridge port is the equivalent on a virtual bridge. Upon being linked to a peer, a port will become interior and will have the peer and peerId fields be non-null. The hostId, host, and interfaceName fields will be null.  There is a third type of port, Vxlan, which is created automatically when binding a VTEP to a Neutron network. The only operations supported on a port of this type are GET and DELETE. Deleting a VXLAN port will delete all associated VTEP bindings.",
                    "example": "Router",
                    "type": [
                        "object"
                    ]
                },
                "peerId": {
                    "description": "ID of the peer port that this port is linked to. This will be set when linking a port to another peer (becoming an interior port).",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "peer": {
                    "description": "A GET against this URI retrieves the peer port resource. Requires a port to be linked to another port.",
                    "example": "/routers/1ae9694d-f5a7-4b5d-832d-d642fb386460",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "networkAddress": {
                    "description": "IP address of the network attached to this port. For example, 192.168.10.32.",
                    "example": "192.168.10.0",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "networkLength": {
                    "description": "Prefix length of the network attached to this port (number of fixed network bits).",
                    "$ref": "#/definitions/commons/definitions/subnetLength"
                },
                "portAddress": {
                    "description": "IP address assigned to the port.",
                    "example": "192.168.10.32",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "portMac": {
                    "description": "Port MAC address.",
                    "$ref": "#/definitions/commons/definitions/mac"
                },
                "vifId": {
                    "description": "ID of the VIF plugged into the port.",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "hostId": {
                    "description": "ID of the port's host. This will be set when binding a port to a host (becoming an exterior port).",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "host": {
                    "description": "The port host's URI. Requires a port to be bound to a host",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "interfaceName": {
                    "description": "Interface name of a bound port. This will be set when binding a port to a host (becoming an exterior port).",
                    "example": "mido0",
                    "type": [
                        "string"
                    ]
                },
                "bgps": {
                    "description": "A GET against this URI retrieves BGP configurations for this port.",
                    "example": "http://example.org:8080/midonet-api/bgps/9bec857a-561f-43bb-bee4-a084c9cc0f50",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "link": {
                    "description": "Location of the port link resource. A POST against this URI links two interior ports. In the body of the request, 'peerId' must be specified to indicate the peer interior port ID. A DELETE against this URI removes the link.",
                    "example": "http://example.org:8080/midonet-api/routers/9a59b96e-dcee-4695-b7f4-fb5e3d349f87/port/afefefbc-66d1-46a0-8d49-a56c3554e9f8/link",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "inboundFilterId": {
                    "description": "ID of the filter chain to be applied for incoming packets.",
                    "example": "f56060f7-a2b9-4da5-ae91-a07a6311d660",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "inboundFilter": {
                    "description": "A GET against this URI retrieves the inbound filter chain.",
                    "example": "http://example.org:8080/midonet-api/chains/f56060f7-a2b9-4da5-ae91-a07a6311d660",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "outboundFilterId": {
                    "description": "ID of the filter chain to be applied for outgoing packets.",
                    "example": "54033d05-13e5-47a4-9da8-69c49138dd4b",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "outboundFilter": {
                    "description": "A GET against this URI retrieves the outbound filter chain.",
                    "example": "http://example.org:8080/midonet-api/chains/54033d05-13e5-47a4-9da8-69c49138dd4b",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "portGroups": {
                    "description": "A GET against this URI retrieves the port groups that this port is a member of.",
                    "example": "http://example.org:8080/midonet-api/port_groups/fcd6fee4-a31d-4432-bf7e-0acd6ff021c9",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "hostInterfacePort": {
                    "description": "A GET against this URI retrieves the interface-binding information of this port.",
                    "example": "http://example.org:8080/midonet-api/routers/9a59b96e-dcee-4695-b7f4-fb5e3d349f87/port/afefefbc-66d1-46a0-8d49-a56c3554e9f8/hostInterfacePort",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "vlanId": {
                    "description": "The VLAN ID assigned to this port. On a given bridge, each VLAN ID can be present at most in one interior port.",
                    "example": 1234,
                    "type": [
                        "integer"
                    ]
                }
            },
            "required": [
                "type",
                "netWorkAddress",
                "networkLength",
                "portAddress"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of ports.",
                    "href": "/ports",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific port.",
                    "href": "/ports/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "List (Router)",
                    "description": "Get the list of ports on a router.",
                    "href": "/routers/{routerId}/ports",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "List Peers (Router)",
                    "description": "Get the list of peer ports on a router.",
                    "href": "/routers/{routerId}/peer_ports",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "List (Bridge)",
                    "description": "Get the list of ports on a bridge.",
                    "href": "/bridges/{bridgeId}/ports",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "List Peers (Bridge)",
                    "description": "Get the list of peer ports on a bridge.",
                    "href": "/bridges/{bridgeId}/peer_ports",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Create (Router)",
                    "description": "Create a new port on a router.",
                    "href": "/routers/{routerId}/ports",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Create (Bridge)",
                    "description": "Create a new port on a bridge.",
                    "href": "/bridges/{bridgeId}/ports",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific port.",
                    "href": "/ports/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific port.",
                    "href": "/ports/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "port_group": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Port Group",
            "description": "Port group is a group of ports. Port groups are owned by tenants. A port could belong to multiple port groups as long as they belong to the same tenant. A port group can be specified in the chain rule to filter the traffic coming from all the ports belonging to that the specified group.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.PoolGroup-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/port_group/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/port_groups/ddd90694-4cfd-44d3-9397-fe19fd4e5ce8",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "example": "ddd90694-4cfd-44d3-9397-fe19fd4e5ce8",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "tenantId": {
                    "description": "ID of the tenant that this chain belongs to.",
                    "example": "7ae3e43d-1964-46ea-bf09-cd8fbdfb5cc9",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the port group. Unique per tenant.",
                    "example": "example_port_group",
                    "type": [
                        "string"
                    ]
                },
                "ports": {
                    "description": "URI for port membership operations.",
                    "example": "http://example.org:8080/midonet-api/ports/afefefbc-66d1-46a0-8d49-a56c3554e9f8",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "name"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of port groups.",
                    "href": "/port_groups",
                    "method": "GET",
                    "rel": "instances",
                    "properties": {
                        "tenant_id": {
                            "descritpion": "ID of the tenant to filter the search with."
                        }
                    }
                },
                {
                    "title": "List (Port)",
                    "description": "Get the list of port groups on a port",
                    "href": "/ports/{portId}/port_groups",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific port group.",
                    "href": "/port_groups/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new port group.",
                    "href": "/port_groups",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific port group.",
                    "href": "/port_groups/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific port group.",
                    "href": "/port_groups/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "port_group_port": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Port Group Port",
            "description": "PortGroupPort represents membership of ports in port groups.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.PortGroupPort-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/port_group_port/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/port_groups/ddd90694-4cfd-44d3-9397-fe19fd4e5ce8",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "portGroupId": {
                    "description": "ID of the port group that a port is a member of.",
                    "example": "ddd90694-4cfd-44d3-9397-fe19fd4e5ce8",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "portId": {
                    "description": "ID of the port in a port group membership.",
                    "example": "afefefbc-66d1-46a0-8d49-a56c3554e9f8",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "port": {
                    "description": "URI to fetch the port.",
                    "example": "http://example.org:8080/midonet-api/ports/afefefbc-66d1-46a0-8d49-a56c3554e9f8",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "portId"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of port group ports.",
                    "href": "/port_groups/{portGroupId}/ports",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific port group port.",
                    "href": "/port_groups/{portGroupId}/ports/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new port group port.",
                    "href": "/port_groups/{portGroupId}/ports",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific port group port.",
                    "href": "/port_groups/{portGroupId}/ports/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific port group port.",
                    "href": "/port_groups/{portGroupId}/ports/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "port_link": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Port Link",
            "description": "Port Link is an entity that represents an entry of the virtual link between virtual network devices in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.PortLink-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/port_link/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/ports/afefefbc-66d1-46a0-8d49-a56c3554e9f8/link",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "portId": {
                    "description": "A unique identifier of the port.",
                    "example": "afefefbc-66d1-46a0-8d49-a56c3554e9f8",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "port": {
                    "description": "A GET against this URI retrieves the port.",
                    "example": "http://example.org:8080/midonet-api/ports/afefefbc-66d1-46a0-8d49-a56c3554e9f8",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "peerId": {
                    "description": "A unique identifier of the peer port.",
                    "example": "0f5a458d-0ce3-45c5-b01f-884ff110bddd",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "peer": {
                    "description": "A GET against this URI retrieves the peer port.",
                    "example": "http://example.org:8080/midonet-api/ports/0f5a458d-0ce3-45c5-b01f-884ff110bddd",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "peerId"
            ],
            "links": [
                {
                    "title": "Create",
                    "description": "Create a new port link.",
                    "href": "/ports/{id}/link",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific port link.",
                    "href": "/ports/{id}/link",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "route": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Route",
            "description": "Route is an entity that represents a route on a virtual router in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Route-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/route/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/routers/9a59b96e-dcee-4695-b7f4-fb5e3d349f87/routes/0124f60a-ca6c-45ba-9290-982d5550bd76",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "example": "0124f60a-ca6c-45ba-9290-982d5550bd76",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "routerId": {
                    "description": "ID of the router that this route belongs to.",
                    "example": "9a59b96e-dcee-4695-b7f4-fb5e3d349f87",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "router": {
                    "description": "A GET against this URI gets the router resource.",
                    "example": "http://example.org:8080/midonet-api/routers/9a59b96e-dcee-4695-b7f4-fb5e3d349f87",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "type": {
                    "description": "Type of route:      * Normal: Regular traffic forwarding route     * Reject: Drop packets and send ICMP packets back     * BlackHole: Drop packets and do not send ICMP packets back",
                    "example": "Normal",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "Normal",
                        "Reject",
                        "BlackHole"
                    ]
                },
                "srcNetworkAddr": {
                    "description": "Source IP address.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "srcNetworkLength": {
                    "description": "Source network IP address length.",
                    "$ref": "#/definitions/commons/definitions/subnetLength"
                },
                "dstNetowrkAddr": {
                    "description": "Destination IP address.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "dstNetworkLength": {
                    "description": "Destination network IP address length.",
                    "$ref": "#/definitions/commons/definitions/subnetLength"
                },
                "weight": {
                    "description": "The priority weight of the route. Lower weights take precedence over higher weights.",
                    "type": [
                        "integer"
                    ]
                },
                "nextHopPort": {
                    "description": "The ID of the next hop port.",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "nextHopGateeway": {
                    "description": "IP address of the gateway router to forward the traffic to.",
                    "type": [
                        "string"
                    ]
                }
            },
            "required": [
                "type",
                "srcNetworkAddr",
                "srcNetworkLength",
                "dstNetworkAddr",
                "dstNetworkLength",
                "weight",
                "nextHopPort",
                "nextHopGateway"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of routes on a router.",
                    "href": "/routers/{routerId}/routes",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific route.",
                    "href": "/route/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new route on a router.",
                    "href": "/routers/{routerId}/routes",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific route.",
                    "href": "/routers/{routerId}/routes/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific route.",
                    "href": "/routers/{routerId}/routes/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "router": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Router",
            "description": "Router is an entity that represents a virtual router device in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Router-v2+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/router/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/routers/9a59b96e-dcee-4695-b7f4-fb5e3d349f87",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "9a59b96e-dcee-4695-b7f4-fb5e3d349f87",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the router. Must be unique within each tenant.",
                    "type": [
                        "string"
                    ]
                },
                "tenantId": {
                    "description": "ID of the tenant that owns the router.",
                    "readOnly": true,
                    "example": "7ae3e43d-1964-46ea-bf09-cd8fbdfb5cc9",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "adminStateUp": {
                    "$ref": "#/definitions/commons/definitions/adminStateUp"
                },
                "loadBalancerId": {
                    "description": "Load balancer object to which it is associated with.",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "loadBalancer": {
                    "description": "A GET against this URI gets the load balancer object.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "ports": {
                    "descritpion": "A GET against this URI retrieves ports on this router.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "dhcpSubnets": {
                    "descritpion": "A GET against this URI retrieves dhcpSubnets on this router.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "router": {
                    "description": "A GET against this URI retrieves routers on this router.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "macTable": {
                    "description": "A GET against this URI retrieves the router's MAC table.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "peerPorts": {
                    "description": "A GET against this URI retrieves the interior ports attached to this router.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "inboundFilterId": {
                    "description": "ID of the filter chain to be applied for incoming packes.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "inboundFilter": {
                    "description": "A GET against this URI retrieves the inbound filter chain.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "outboundFilterId": {
                    "description": "ID of the filter chain to be applied for outgoing packets.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "outboundFilter": {
                    "description": "A GET against this URI retreives the outbound filter chain.",
                    "readOnly": true,
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "name"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of routers.",
                    "href": "/routers",
                    "method": "GET",
                    "rel": "instances",
                    "properties": {
                        "tenant_id": {
                            "descritpion": "ID of the tenant to filter the search with."
                        }
                    }
                },
                {
                    "title": "Info",
                    "description": "Get the specific router.",
                    "href": "/routers/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new router.",
                    "href": "/routers",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific router.",
                    "href": "/routers/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific router.",
                    "href": "/routers/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "rule": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Rule",
            "description": "Rule is an entity that represents a rule on a virtual router chain in MidoNet.  ### How L2 Address masking works  dlDstMask and dlSrcMask help reduce the number of L2 address match rules.  For example, if you specify dlDstMask to be 'ffff.0000.0000', and if dlDst is 'abcd.0000.0000', all traffic with the destination MAC address that starts with 'abcd' will be matched.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Rule-v2+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/rule/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/chains/rules/7688dba0-4a55-4c8e-a005-4f84fe9eaabe",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "example": "7688dba0-4a55-4c8e-a005-4f84fe9eaabe",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "chainId": {
                    "description": "ID of the chain that this chain belongs to.",
                    "example": "cc15564b-2f0b-4579-8b4b-06c0687a7240",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "condInvert": {
                    "description": "Invert the conjunction of all the other predicates.",
                    "example": false,
                    "type": [
                        "boolean"
                    ]
                },
                "dlDst": {
                    "description": "The data link layer destination that this rule matches on. A MAC address in the form aa:bb:cc:dd:ee:ff.",
                    "$ref": "#/definitions/commons/definitions/mac"
                },
                "dlSrc": {
                    "description": "The data link layer source that this rule matches on. A MAC address in the form aa:bb:cc:dd:ee:ff.",
                    "$ref": "#/definitions/commons/definitions/mac"
                },
                "dlType": {
                    "description": "Set the data link layer type (ethertype) of packets matched by this rule. The type provided is not check for validity.",
                    "$ref": "#/definitions/commons/definitions/ethertype"
                },
                "dlSrcMask": {
                    "description": "Source MAC address mask in the format xxxx.xxxx.xxxx where each x is a hexadecimal digit.",
                    "$ref": "#/definitions/commons/definitions/ethermask"
                },
                "flowAction": {
                    "description": "Action to take on each flow. If the type is snat, dnat, rev_snat and rev_dnat then this field is required. Must be one of accept, continue, return.",
                    "example": "accept",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "accept",
                        "continue",
                        "return"
                    ]
                },
                "inPorts": {
                    "description": "The list of (interior or exterior) ingress port UUIDs to match.",
                    "example": [
                        "b3a79f36-6907-40cb-bf10-226dc1f78ba6",
                        "a01610eb-8d35-4f4b-9667-32a37b3d57b7"
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "$ref": "#/definitions/commons/definitions/id"
                    }
                },
                "invDlDst": {
                    "description": "Set whether the match on the data link layer destination should be inverted (match packets whose data link layer destination is NOT equal to dlDst). Will be stored, but ignored until dlDst is set.",
                    "example": false,
                    "type": [
                        "boolean"
                    ]
                },
                "invDlSrc": {
                    "description": "Set whether the match on the data link layer source should be inverted (match packets whose data layer link source is NOT equal to dlSrc). Will be stored, but ignored until dlSrc is set.",
                    "example": false,
                    "type": [
                        "boolean"
                    ]
                },
                "invDlType": {
                    "description": "Set whether the match on the data link layer type should be inverted (match packets whose data link layer type is NOT equal to the Ethertype set by dlType. Will be stored, but ignored until dlType is set.",
                    "example": false,
                    "type": [
                        "boolean"
                    ]
                },
                "invInPorts": {
                    "description": "Inverts the in_ports predicate. Match if the packet's ingress is NOT in in_ports.",
                    "example": false,
                    "type": [
                        "boolean"
                    ]
                },
                "invNwDst": {
                    "description": "Invert the IP dest prefix predicate. Match packets whose destination is NOT in the prefix.",
                    "example": false,
                    "type": [
                        "boolean"
                    ]
                },
                "invNwProto": {
                    "description": "Invert the nwProto predicate. Match if the packet's protocol number is not nwProto.",
                    "example": false,
                    "type": [
                        "boolean"
                    ]
                },
                "invNwSrc": {
                    "description": "Invert the IP source prefix predicate. Match packets whose source is NOT in the prefix.",
                    "example": false,
                    "type": [
                        "boolean"
                    ]
                },
                "invOutPorts": {
                    "description": "Inverts the out_ports predicate. Match if the packet's egress is NOT in out_ports.",
                    "example": false,
                    "type": [
                        "boolean"
                    ]
                },
                "invTpDst": {
                    "description": "Invert the destination TCP/UDP port range predicate. Match packets whose dest port is NOT in the range.",
                    "example": false,
                    "type": [
                        "boolean"
                    ]
                },
                "invTpSrc": {
                    "description": "Invert the source TCP/UDP port range predicate. Match packets whose source port is NOT in the range.",
                    "exmple": false,
                    "type": [
                        "boolean"
                    ]
                },
                "jumpChainId": {
                    "description": "ID of the jump chain. If the type == jump then this field is required.",
                    "example": "cc15564b-2f0b-4579-8b4b-06c0687a7240",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "jumpChainName": {
                    "description": "Name of the jump chain.",
                    "example": "example_jump_chain",
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "natTargets": {
                    "description": "The list of nat targets. Each nat target should be an JSON object that contains the following fields:    * addressFrom: The first IP address in the range of IP addresses used as                  NAT targets   * addressTo: The last IP address in the range of IP addresses used as                NAT targets   * portFrom: The first port number in the range of port numbers used as               NAT targets   * portTo: The last port number in the range of port numbers used as NAT             targets  For an example: {\"addressFrom\": \"1.2.3.4\", \"addressTo\": \"5.6.7.8\", \"portFrom\": \"22\", \"portTo\": \"80\"}. This field is required if the type is dnat or snat.",
                    "example": [
                        {
                            "addressFrom": "10.0.0.1",
                            "addressTo": "10.0.0.1",
                            "portFrom": 80,
                            "portTo": 80
                        },
                        {
                            "addressFrom": "10.0.1.1",
                            "addressTo": "10.0.1.4",
                            "portFrom": 80,
                            "portTo": 80
                        },
                        {
                            "addressFrom": "10.0.3.1",
                            "addressTo": "10.0.3.4",
                            "portFrom": 80,
                            "portTo": 8080
                        }
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "type": [
                            "object"
                        ]
                    }
                },
                "nwDstAddress": {
                    "description": "The address part of the IP destination prefix to match.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "nwDstLength": {
                    "description": "The length of the IP destination prefix to match.",
                    "$ref": "#/definitions/commons/definitions/subnetLength"
                },
                "nwProto": {
                    "description": "The value of the IP packet TOS field to match (0-255).",
                    "minimum": 0,
                    "maximum": 255,
                    "example": 0,
                    "type": [
                        "integer"
                    ]
                },
                "nwSrcAddress": {
                    "description": "The length of the source IP prefix to match (number of fixed network bits).",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "nwSrcLength": {
                    "description": "The length of the source IP prefix to match (number of fixed network bits).",
                    "$ref": "#/definitions/commons/definitions/subnetLength"
                },
                "nwTos": {
                    "description": "The value of the IP packet TOS field to match (0-255).",
                    "minimum": 0,
                    "maximum": 255,
                    "example": 0,
                    "type": [
                        "integer"
                    ]
                },
                "outPorts": {
                    "description": "The list of (interior or exterior) egress port UUIDs to match.",
                    "example": [
                        "a597b35c-1c5b-4d7a-b183-9874b60a4856",
                        "57b79c9c-559f-4f76-b210-6559d6effa19"
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "$ref": "#/definitions/commons/definitions/id"
                    }
                },
                "portGroup": {
                    "description": "ID of the port group that you want to filter traffic from. If matched, the filter action is applied to any packet coming from ports belonging to the specified port group.",
                    "example": "ddd90694-4cfd-44d3-9397-fe19fd4e5ce8",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "position": {
                    "description": "The position at which this rule should be inserted >= 1 and <= the greatest position in the chain + 1. If not specified, it is assumed to be 1.",
                    "minimum": 1,
                    "example": 1,
                    "type": [
                        "integer"
                    ]
                },
                "tpSrc": {
                    "description": "A JSON representation of the Range object representing the tcp/udp source port range to match, like {\"start\":80,\"end\":400}. When creating an ICMP rule, this field should be set to the ICMP type value. The absence of a Range will be interpreted as \"any\".",
                    "$ref": "#/definitions/commons/definitions/range"
                },
                "tpDst": {
                    "description": "A JSON representation of the Range object representing the tcp/udp destination port range to match, like {\"start\":80,\"end\":400}. When creating an ICMP rule, this field should be set to the ICMP code value. A null value in this field will be interpreted as \"any\".",
                    "$ref": "#/definitions/commons/definitions/range"
                },
                "fragmentPolicy": {
                    "description": "The policy for fragmented packet handling. The accepted values are:    * \"any\": matches on all packets, including fragments.   * \"header\": matches on header fragment packet   * \"nonheader\": matches on fragmented non-header packets   * \"unfragmented\": matches only on unfragmented packets  If L4 fields are specified (tpSrc or tpDst) then only \"header\" and \"unfragmented\" are allowed, and \"header\" is the default. If L4 fields are not specified, \"any\" is the default.",
                    "example": "any",
                    "default": "any",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "any",
                        "header",
                        "nonheader",
                        "unfragmented"
                    ]
                },
                "type": {
                    "description": "Must be one of these strings: \"accept\", \"dnat\", \"drop\", \"jump\", \"rev_dnat\", \"rev_snat\", \"reject\", \"return\", \"snat\".",
                    "example": "accept",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "accept",
                        "dnat",
                        "drop",
                        "jump",
                        "rev_dnat",
                        "rev_snat",
                        "reject",
                        "return",
                        "snat"
                    ]
                }
            },
            "required": [
                "type"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of rules.",
                    "href": "/chains/{chainId}/rules",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific rule.",
                    "href": "/chains/{chainId}/rules/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new rule.",
                    "href": "/chains/{chainId}/rules/{id}",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific rule.",
                    "href": "/chains/{chainId}/rules/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "system_state": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "System State",
            "description": "System State specifies parameters for the various states the deployment might be in. You may modify the system state to make limited changes to the behavior of midonet. For example, changing the \"state\" field to \"UPGRADE\" will cause the spawning of new midolman agents to abort.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.SystemState-v1+json"
            },
            "properties": {
                "state": {
                    "description": "Setting the state field to \"UPGRADE\" will put the midolman into \"upgrade mode\", which will cause all new midolman agents starting up in the deployment to abort the start up process. This is used during deployment wide upgrades to prevent unexpected startups of any midolman agent that might have the wrong version. This state can be reversed by setting the upgrade field to \"ACTIVE\". The deployment is not in upgrade state by default.",
                    "example": "ACTIVE",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "ACTIVE",
                        "UPGRADE"
                    ]
                },
                "availability": {
                    "description": "Setting the availability to \"READONLY\" will cause most API requests to be rejected. The exceptions are only administrative APIs that don't affect the topology: system_state and write_version. This is meant to let the operator stop REST API requests while performing maintenance or upgrades. Setting the availability to \"READWRITE\" (the default value) allows both GETs and PUT/POST API requests.",
                    "example": "READONLY",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "READONLY",
                        "READWRITE"
                    ]
                }
            },
            "required": [
                "state",
                "availability"
            ],
            "links": [
                {
                    "title": "Info",
                    "description": "Get the system state.",
                    "href": "/system_state",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Update",
                    "description": "Update the system state.",
                    "href": "/system_state",
                    "method": "PUT",
                    "rel": "update"
                }
            ]
        },
        "tenant": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Tenant",
            "description": "Represents a tenant, or a group of users, in the identity services.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Tenant-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/tenant/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/tenants/7ae3e43d-1964-46ea-bf09-cd8fbdfb5cc9",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "example": "7ae3e43d-1964-46ea-bf09-cd8fbdfb5cc9",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "Name of the tenant in the identity system.",
                    "example": "exmple_tenant",
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "bridges": {
                    "description": "A GET against this URI retrieves tenant's bridges.",
                    "example": "http://example.org:8080/midonet-api/bridges?tenant_id=7ae3e43d-1964-46ea-bf09-cd8fbdfb5cc9",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "chains": {
                    "description": "A GET against this URI retrieves tenant's chains.",
                    "example": "http://example.org:8080/midonet-api/chains?tenant_id=7ae3e43d-1964-46ea-bf09-cd8fbdfb5cc9",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "port_groups": {
                    "description": "A GET against this URI retrieves tenant's port groups",
                    "example": "http://example.org:8080/midonet-api/port_groups?tenant_id=7ae3e43d-1964-46ea-bf09-cd8fbdfb5cc9",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "reouters": {
                    "description": "A GET against this URI retrieves tenant's routers.",
                    "example": "http://example.org:8080/midonet-api/routers?tenant_id=7ae3e43d-1964-46ea-bf09-cd8fbdfb5cc9",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of tenants.",
                    "href": "/tenants",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific tenant.",
                    "href": "/tenants/{id}",
                    "method": "GET",
                    "rel": "self"
                }
            ]
        },
        "token": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Token",
            "description": "A token represents the info required for the 'token authentication' method. It can NOT be retrieved through a GET request, but instead must be retrieved in the body or the header of a login request.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.Token-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/token/properties/key"
                }
            },
            "properties": {
                "key": {
                    "description": "The authentication token.",
                    "example": "baz",
                    "readOnly": true,
                    "type": [
                        "string"
                    ]
                },
                "expires": {
                    "description": "The expiration date for the authentication token.",
                    "example": "Fri, 02 July 2014 1:00:00 GMT",
                    "type": [
                        "string"
                    ],
                    "format": "date-time"
                }
            },
            "links": [
                {
                    "title": "Login",
                    "description": "Post a login information.",
                    "href": "/login",
                    "method": "POST",
                    "rel": "create"
                }
            ]
        },
        "tunnel_zone": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Tunnel Zone",
            "description": "Tunnel zone represents a group in which hosts can be included to form an isolated zone for tunneling. They must have unique, case insensitive names per type.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.TunnelZone-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/tunnel_zone/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/tunnel_zones/fe715922-4f87-437d-8638-d45910d2b1ac",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "example": "fe715922-4f87-437d-8638-d45910d2b1ac",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "name": {
                    "description": "The name of the resource.",
                    "example": "example_tunnel_zone",
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "type": {
                    "description": "Tunnel type. Currently this value can only be \"GRE\".",
                    "example": "GRE",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "GRE"
                    ]
                }
            },
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of tunnel zones.",
                    "href": "/tunnel_zones",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific tunnel zone.",
                    "href": "/tunnel_zones/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new tunnel zone.",
                    "href": "/tunnel_zones",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific tunnel zone.",
                    "href": "/tunnel_zones/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific tunnel zone.",
                    "href": "/tunnel_zones/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "tunnel_zone_host": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Tunnel Zone Host",
            "description": "Hosts in the same tunnel zone share the same tunnel configurations, and they are allowed to create tunnels among themselves.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.TunnelZoneHost-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/tunnel_zone_host/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/tunnel_zones/fe715922-4f87-437d-8638-d45910d2b1ac/hosts/07743a54-fd7d-430e-b7b1-320843b005e3",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource.",
                    "example": "07743a54-fd7d-430e-b7b1-320843b005e3",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "tunnelZoneId": {
                    "description": "ID of the tunnel zone that the host is a member of.",
                    "example": "fe715922-4f87-437d-8638-d45910d2b1ac",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "tunnelZone": {
                    "description": "A GET against this URI retrieves the tunnel zone",
                    "example": "http://example.org:8080/midonet-api/tunnel_zones/fe715922-4f87-437d-8638-d45910d2b1ac",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "hostId": {
                    "description": "ID of the host that you want to add to a tunnel zone.",
                    "example": "07743a54-fd7d-430e-b7b1-320843b005e3",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "host": {
                    "description": "A GET against this URI retrieves the host.",
                    "example": "http://example.org:8080/midonet-api/hosts/07743a54-fd7d-430e-b7b1-320843b005e3",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "ipAddress": {
                    "description": "IP address to use for the GRE tunnels from this host.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                }
            },
            "links": [
                {
                    "title": "List CapwapTunnelZoneHost",
                    "description": "Get the list of tunnel zones hosts.",
                    "href": "/tunnel_zones/{tunnelZoneId}/hosts",
                    "method": "GET",
                    "rel": "instances",
                    "mediaType": "application/vnd.org.midonet.collection.CapwapTunnelZoneHost-v1+json"
                },
                {
                    "title": "List GreTunnelZoneHost",
                    "description": "Get the list of tunnel zones hosts.",
                    "href": "/tunnel_zones/{tunnelZoneId}/hosts",
                    "method": "GET",
                    "rel": "altenate",
                    "mediaType": "application/vnd.org.midonet.collection.GreTunnelZoneHost-v1+json"
                },
                {
                    "title": "List IpsecTunnelZoneHost",
                    "description": "Get the list of tunnel zones hosts.",
                    "href": "/tunnel_zones/{tunnelZoneId}/hosts",
                    "method": "GET",
                    "rel": "altenate",
                    "mediaType": "application/vnd.org.midonet.collection.IpsecTunnelZoneHost-v1+json"
                },
                {
                    "title": "Info CapwapTunnelZoneHost",
                    "description": "Get the specific tunnel zone host.",
                    "href": "/tunnel_zones/{tunnelZondId}/hosts/{id}",
                    "method": "GET",
                    "rel": "self",
                    "mediaType": "application/vnd.org.midonet.CapwapTunnelZoneHost-v1+json"
                },
                {
                    "title": "Info GreTunnelZoneHost",
                    "description": "Get the specific tunnel zone host.",
                    "href": "/tunnel_zones/{tunnelZondId}/hosts/{id}",
                    "method": "GET",
                    "rel": "alternate",
                    "mediaType": "application/vnd.org.midonet.GreTunnelZoneHost-v1+json"
                },
                {
                    "title": "Info IpsecTunnelZoneHost",
                    "description": "Get the specific tunnel zone host.",
                    "href": "/tunnel_zones/{tunnelZondId}/hosts/{id}",
                    "method": "GET",
                    "rel": "alternate",
                    "mediaType": "application/vnd.org.midonet.IpsecTunnelZoneHost-v1+json"
                },
                {
                    "title": "Create",
                    "description": "Create a new tunnel zone host.",
                    "href": "/tunnel_zones/{tunnelZondId}/hosts",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific tunnel zone host.",
                    "href": "/tunnel_zones/{tunnelZoneId}/hosts/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific tunnel zone.",
                    "href": "/tunnel_zones/{tunnelZoneId}/hosts/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "vip": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "VIP",
            "description": "A VIP is an entity that represents a virtual IP address device for use with load balancers in MidoNet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.VIP-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/vip/properties/id"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/b6fac5fc-2d3f-4a81-9eba-feab374cb310/vips/eece7d61-ab29-4ed0-88db-d7b852a798c9",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "id": {
                    "description": "A unique identifier of the resource. If this field is omitted in the POST request, a random UUID is generated.",
                    "example": "eece7d61-ab29-4ed0-88db-d7b852a798c9",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "loadBalancerId": {
                    "description": "Load balancer object to which it is associated with. This is deduced from the pool that it is associated with.",
                    "example": "b6fac5fc-2d3f-4a81-9eba-feab374cb310",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "loadBalancer": {
                    "description": "A GET against this URI gets the load balancer object.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/b6fac5fc-2d3f-4a81-9eba-feab374cb310",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "poolId": {
                    "description": "ID of the pool.",
                    "example": "31ebc9bc-83a3-4a3c-b2a8-94a3cd9059a6",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "pool": {
                    "description": "A GET against this URI gets the pool object.",
                    "example": "http://example.org:8080/midonet-api/load_balancers/59e72865-57d2-4eda-99e7-98bcf878bc52/pools/31ebc9bc-83a3-4a3c-b2a8-94a3cd9059a6",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "address": {
                    "description": "IP address of the VIP.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "protocolPort": {
                    "description": "Port of the VIP.",
                    "$ref": "#/definitions/commons/definitions/portNumber"
                },
                "sessionPersistence": {
                    "description": "Session persistence of the VIP (Only \u201cSOURCE_IP\u201d allowed). This property can be null.",
                    "example": "SOURCE_IP",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "SOURCE_IP",
                        "NONE"
                    ]
                },
                "adminSteteUp": {
                    "$ref": "#/definitions/commons/definitions/adminStateUp"
                }
            },
            "required": [
                "poolId",
                "address",
                "protocolPort"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of VIPs on a load balancer.",
                    "href": "/load_balancers/{loadBalancerId}/vips",
                    "method": "GET",
                    "rel": "instances",
                    "properties": {
                        "marker": {
                            "descritpion": "ID of the last tenant in the previous search. If this is specified, the GET returns a list of Tenants starting the next item after this ID.",
                            "example": "7ae3e43d-1964-46ea-bf09-cd8fbdfb5cc9",
                            "$ref": "#/definitions/commons/definitions/id"
                        },
                        "limit": {
                            "descritpion": "Number of items to fetch.",
                            "example": 10,
                            "type": [
                                "integer"
                            ]
                        }
                    }
                },
                {
                    "title": "Info",
                    "description": "Get the specific VIP on a load blancer.",
                    "href": "/load_balancers/{loadBalancerId}/vips/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new VIP on a load balancer.",
                    "href": "/load_balancers/{loadBalancerId}/vips",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Update",
                    "description": "Update the specific VIP on a load balancer.",
                    "href": "/load_balancers/{loadBalancerId}/vips/{id}",
                    "method": "PUT",
                    "rel": "update"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific VIP on a load balancer.",
                    "href": "/load_balancers/{loadBalancerId}/vips/{id}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "vtep": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "VTEP",
            "description": "Midonet representation of a VXLAN Tunnel EndPoint, or VTEP, which allows you to merge a Midonet L2 network with physical L2 network over an IP tunnel. Once you create the Midonet VTEP representation of your external VTEP, you can bind Neutron networks to the VTEP's ports.  All properties other than those required in POST are obtained from the external VTEP configuration and not controlled by Midonet.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.VTEP-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/router/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/vteps/10.0.1.1",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "managementIp": {
                    "description": "The VTEP's IP address.",
                    "$ref": "#/definitions/commons/definitions/ipv4"
                },
                "managementPort": {
                    "description": "The TCP port used for management connections to the VTEP.",
                    "$ref": "#/definitions/commons/definitions/portNumber"
                },
                "tunnelZoneId": {
                    "description": "ID of the tunnel zone used by Midonet to send and receive tunneled traffic to and from the VTEP.",
                    "example": "fe715922-4f87-437d-8638-d45910d2b1ac",
                    "$ref": "#/definitions/commons/definitions/id"
                },
                "connectionState": {
                    "description": "Indicates whether Midonet could successfully connect to the VTEP. Possible values are CONNECTED and ERROR.",
                    "example": "CONNECTED",
                    "type": [
                        "string"
                    ],
                    "enum": [
                        "CONNECTED",
                        "ERROR"
                    ]
                },
                "name": {
                    "description": "VTEP's name.",
                    "example": "example_vtep",
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "description": {
                    "description": "VTEP's description.",
                    "example": "An example description for the VTEP.",
                    "type": [
                        "string"
                    ]
                },
                "tunnelIpAddrs": {
                    "description": "List of IP addresses available to Midonet to tunnel to the VTEP.",
                    "example": [
                        "10.0.1.1",
                        "10.0.2.1"
                    ],
                    "type": [
                        "array"
                    ],
                    "items": {
                        "$ref": "#/definitions/commons/definitions/ipv4"
                    }
                },
                "binding": {
                    "description": "A GET on this URI retrieves a list of the VTEP's bindings to Neutron networks.",
                    "example": "http://example.org:8080/midonet-api/vteps/10.0.1.1/bindings",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "bindingTemplate": {
                    "description": "Template for the URI to the VTEP's individual bindings.",
                    "readOnly": true,
                    "example": "http://example.org:8080/midonet-api/vteps/10.0.1.1/bindings/{id}",
                    "type": [
                        "string"
                    ]
                },
                "ports": {
                    "description": "A GET on this URI retrieves a list of the VTEP's ports.",
                    "readOnly": true,
                    "example": "http://example.org:8080/midonet-api/vteps/10.0.1.1/ports",
                    "$ref": "#/definitions/commons/definitions/uri"
                }
            },
            "required": [
                "managementIp",
                "managementPort",
                "tunnelzoneId"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of VTEPs.",
                    "href": "/vteps",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific VTEP.",
                    "href": "/vteps/{id}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new VTEP.",
                    "href": "/vteps",
                    "method": "POST",
                    "rel": "create"
                }
            ]
        },
        "vtep_binding": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "VTEP Binding",
            "description": "Bindings between a VTEP port/vlanId and a Neutron network. Creating a binding creates an IP tunnel through which L2 traffic can pass between the VTEP and Neutron network.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.VTEPBinding-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/router/properties/uri"
                }
            },
            "properties": {
                "uri": {
                    "description": "A GET against this URI refreshes the representation of this resource.",
                    "example": "http://example.org:8080/midonet-api/vteps/10.0.1.1/bindings/example_port/1234",
                    "$ref": "#/definitions/commons/definitions/uri"
                },
                "portName": {
                    "description": "The name of the VTEP port to be bound to the Neutron network.",
                    "example": "example_port",
                    "$ref": "#/definitions/commons/definitions/name"
                },
                "vlanId": {
                    "description": "The VLAN ID with which traffic from the VTEP to Midonet will be tagged. Must be between 0 and 4095 inclusive. If 0, then traffic will not be tagged with a VLAN ID.",
                    "$ref": "#/definitions/commons/definitions/vlanId"
                },
                "networkId": {
                    "description": "The ID of the Neutron network to which the VLAN's port is to be bound. A VXLAN port will be created on the bridge if it does not already have one, and the binding will be added to the bridge's VXLAN port.  It is an error to attempt bind a Neutron network to more than one VTEP, but a network may have multiple bindings to a single VTEP, and a VTEP may  have bindings to multiple networks.",
                    "example": "9a59b96e-dcee-4695-b7f4-fb5e3d349f87",
                    "$ref": "#/definitions/commons/definitions/id"
                }
            },
            "required": [
                "portName",
                "vlanId",
                "networkId"
            ],
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of VTEP bindings on a VTEP.",
                    "href": "/vteps/{managementIp}/bindings",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific VTEP binding on a VTEP.",
                    "href": "/vteps/{managementIp}/bindings/{portName}/{vlanId}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "List",
                    "description": "Get the list of VTEP bindings on a VXLAN port.",
                    "href": "/ports/{vxLanPortId}/bindings",
                    "method": "GET",
                    "rel": "instances"
                },
                {
                    "title": "Info",
                    "description": "Get the specific VTEP binding on a VTEP.",
                    "href": "/ports/{vxLanPortId}/bindings/{portName}/{vlanId}",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Create",
                    "description": "Create a new VTEP binding on a VTEP.",
                    "href": "/vteps/{managementIp}/bindings",
                    "method": "POST",
                    "rel": "create"
                },
                {
                    "title": "Delete",
                    "description": "Delete the specific VTEP binding on a VTEP.",
                    "href": "/vteps/{managementIp}/bindings/{portNam}/{vlanId}",
                    "method": "DELETE",
                    "rel": "delete"
                }
            ]
        },
        "vtep_port": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "VTEP Port",
            "description": "Gets the name and description of all ports on the specified VTEP.a",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.VTEPPort-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/router/properties/uri"
                }
            },
            "properties": {
                "name": {
                    "description": "The port's name.",
                    "example": "example_port",
                    "$ref": "#/definitions/commons/definitions/name"
                }
            },
            "links": [
                {
                    "title": "List",
                    "description": "Get the list of VTEP ports.",
                    "href": "/vteps/10.0.1.1/ports",
                    "method": "GET",
                    "rel": "instances"
                }
            ]
        },
        "write_version": {
            "$schema": "http://json-schema.org/draft-04/hyper-schema",
            "title": "Write Version",
            "description": "Write Version specifies the version information that is relevant to the midonet deployment as a whole. For example, the \"version\" field specifies the version of the topology information that all midolman agents must write to, regardless of that midolman agent's version.",
            "type": [
                "object"
            ],
            "media": {
                "mediaType": "application/vnd.org.midonet.WriteVersion-v1+json"
            },
            "definitions": {
                "identity": {
                    "$ref": "#/definitions/write_version/properties/version"
                }
            },
            "properties": {
                "version": {
                    "description": "The version field determines the version of the topology data that the midolman agents will be writing. This matters during upgrade operations where we will change the write version only after all midolman agents are upgraded. The format of the version field is '[major].[minor]', where 'major' is the Major version, and 'minor' is the minor version. For example '1.2'.",
                    "example": "1.2",
                    "$ref": "#/definitions/commons/definitions/version"
                }
            },
            "required": [
                "version"
            ],
            "links": [
                {
                    "title": "Info",
                    "description": "Get the write version.",
                    "href": "/write_version",
                    "method": "GET",
                    "rel": "self"
                },
                {
                    "title": "Update",
                    "description": "Update the write version.",
                    "href": "/write_version",
                    "method": "PUT",
                    "rel": "update"
                }
            ]
        }
    },
    "properties": {
        "application": {
            "$ref": "#/definitions/application"
        },
        "ad_route": {
            "$ref": "#/definitions/ad_route"
        },
        "bgp": {
            "$ref": "#/definitions/bgp"
        },
        "bridge": {
            "$ref": "#/definitions/bridge"
        },
        "chain": {
            "$ref": "#/definitions/chain"
        },
        "commons": {
            "$ref": "#/definitions/commons"
        },
        "dhcp_host": {
            "$ref": "#/definitions/dhcp_host"
        },
        "dhcp_subnet": {
            "$ref": "#/definitions/dhcp_subnet"
        },
        "health_monitor": {
            "$ref": "#/definitions/health_monitor"
        },
        "host": {
            "$ref": "#/definitions/host"
        },
        "host_command": {
            "$ref": "#/definitions/host_command"
        },
        "host_interface_port": {
            "$ref": "#/definitions/host_interface_port"
        },
        "host_version": {
            "$ref": "#/definitions/host_version"
        },
        "interface": {
            "$ref": "#/definitions/interface"
        },
        "ip4_mac_pair": {
            "$ref": "#/definitions/ip4_mac_pair"
        },
        "ip_addr_group": {
            "$ref": "#/definitions/ip_addr_group"
        },
        "ip_addr_group_addr": {
            "$ref": "#/definitions/ip_addr_group_addr"
        },
        "load_balancer": {
            "$ref": "#/definitions/load_balancer"
        },
        "mac_port": {
            "$ref": "#/definitions/mac_port"
        },
        "neutron": {
            "$ref": "#/definitions/neutron"
        },
        "neutron_floating_ip": {
            "$ref": "#/definitions/neutron_floating_ip"
        },
        "neutron_network": {
            "$ref": "#/definitions/neutron_network"
        },
        "neutron_port": {
            "$ref": "#/definitions/neutron_port"
        },
        "neutron_router": {
            "$ref": "#/definitions/neutron_router"
        },
        "neutron_router_interface": {
            "$ref": "#/definitions/neutron_router_interface"
        },
        "neutron_security_group": {
            "$ref": "#/definitions/neutron_security_group"
        },
        "neutron_security_group_rule": {
            "$ref": "#/definitions/neutron_security_group_rule"
        },
        "neutron_subnet": {
            "$ref": "#/definitions/neutron_subnet"
        },
        "pool": {
            "$ref": "#/definitions/pool"
        },
        "pool_member": {
            "$ref": "#/definitions/pool_member"
        },
        "port": {
            "$ref": "#/definitions/port"
        },
        "port_group": {
            "$ref": "#/definitions/port_group"
        },
        "port_group_port": {
            "$ref": "#/definitions/port_group_port"
        },
        "port_link": {
            "$ref": "#/definitions/port_link"
        },
        "route": {
            "$ref": "#/definitions/route"
        },
        "router": {
            "$ref": "#/definitions/router"
        },
        "rule": {
            "$ref": "#/definitions/rule"
        },
        "system_state": {
            "$ref": "#/definitions/system_state"
        },
        "tenant": {
            "$ref": "#/definitions/tenant"
        },
        "token": {
            "$ref": "#/definitions/token"
        },
        "tunnel_zone": {
            "$ref": "#/definitions/tunnel_zone"
        },
        "tunnel_zone_host": {
            "$ref": "#/definitions/tunnel_zone_host"
        },
        "vip": {
            "$ref": "#/definitions/vip"
        },
        "vtep": {
            "$ref": "#/definitions/vtep"
        },
        "vtep_binding": {
            "$ref": "#/definitions/vtep_binding"
        },
        "vtep_port": {
            "$ref": "#/definitions/vtep_port"
        },
        "write_version": {
            "$ref": "#/definitions/write_version"
        }
    },
    "type": [
        "object"
    ],
    "description": "MidoNet API JSON Schema Data",
    "id": "midonet",
    "links": [
        {
            "href": "https://example.org/midonet-api",
            "rel": "self"
        }
    ],
    "title": "MidoNet API"
}