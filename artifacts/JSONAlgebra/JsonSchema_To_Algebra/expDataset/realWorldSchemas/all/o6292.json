{
    "additionalProperties": true,
    "properties": {
        "accessTokenLifetime": {
            "_id": "accessTokenLifetime",
            "description": "The lifetime of the short lived Access Token.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "allowAuthorizationByAccessToken": {
            "_id": "allowAuthorizationByAccessToken",
            "description": "DEPRECATED. Boolean value to specify whether to allow authorization by `access_token` at Authorization Endpoint. It will be removed in CE 4.0",
            "type": "boolean"
        },
        "allowPostLogoutRedirectWithoutValidation": {
            "_id": "allowPostLogoutRedirectWithoutValidation",
            "description": "Allows post logout redirect without validation for End Session Endpoint.",
            "type": "boolean"
        },
        "authenticationFilters": {
            "_id": "authenticationFilters",
            "additionalItems": true,
            "description": "User authentication filters.",
            "items": {
                "additionalProperties": true,
                "properties": {
                    "baseDn": {
                        "_id": "baseDn",
                        "minLength": 1,
                        "type": "string"
                    },
                    "bind": {
                        "_id": "bind",
                        "type": "boolean"
                    },
                    "bindPasswordAttribute": {
                        "_id": "bindPasswordAttribute",
                        "minLength": 1,
                        "type": "string"
                    },
                    "filter": {
                        "_id": "filter",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": false
        },
        "authenticationFiltersEnabled": {
            "_id": "authenticationFiltersEnabled",
            "description": "Boolean value specifying whether to enable user authentication filters.",
            "type": "boolean"
        },
        "authenticationProtectionConfiguration": {
            "_id": "authenticationProtectionConfiguration",
            "description": "Authentication Brute Force Protection Configuration.",
            "properties": {
                "attemptExpiration": {
                    "_id": "attemptExpiration",
                    "exclusiveMaximum": false,
                    "exclusiveMinimum": false,
                    "maximum": 2147483647,
                    "minimum": 1,
                    "multipleOf": 1,
                    "type": "integer"
                },
                "bruteForceProtectionEnabled": {
                    "_id": "bruteForceProtectionEnabled",
                    "type": "boolean"
                },
                "delayTime": {
                    "_id": "delayTime",
                    "exclusiveMaximum": false,
                    "exclusiveMinimum": false,
                    "maximum": 2147483647,
                    "minimum": 1,
                    "multipleOf": 1,
                    "type": "integer"
                },
                "maximumAllowedAttemptsWithoutDelay": {
                    "_id": "maximumAllowedAttemptsWithoutDelay",
                    "exclusiveMaximum": false,
                    "exclusiveMinimum": false,
                    "maximum": 2147483647,
                    "minimum": 1,
                    "multipleOf": 1,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "authorizationCodeLifetime": {
            "_id": "authorizationCodeLifetime",
            "description": "The lifetime of the Authorization Code.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "authorizationEndpoint": {
            "_format": "url",
            "_id": "authorizationEndpoint",
            "description": "The URL of the Authorization Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "authorizationRequestCustomAllowedParameters": {
            "_id": "authorizationRequestCustomAllowedParameters",
            "additionalItems": true,
            "description": "Authorization Request Custom Allowed Parameters.",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "_uniqueItems": true
        },
        "backchannelAuthenticationEndpoint": {
            "_id": "backchannelAuthenticationEndpoint",
            "description": "Backchannel Authentication Endpoint",
            "minLength": 0,
            "type": "string"
        },
        "backchannelAuthenticationRequestSigningAlgValuesSupported": {
            "_id": "backchannelAuthenticationRequestSigningAlgValuesSupported",
            "description": "Backchannel Authentication Request Signing Alg Values Supported.",
            "format": "select",
            "items": {
                "enum": [
                    "RS512",
                    "ES256",
                    "ES384",
                    "ES512",
                    "PS256",
                    "PS384",
                    "PS512"
                ],
                "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "_uniqueItems": true
        },
        "backchannelAuthenticationResponseExpiresIn": {
            "_id": "backchannelAuthenticationResponseExpiresIn",
            "description": "Backchannel Authentication Response Expires In",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "backchannelAuthenticationResponseInterval": {
            "_id": "backchannelAuthenticationResponseInterval",
            "description": "Backchannel Authentication Response Interval",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "backchannelBindingMessagePattern": {
            "_id": "backchannelBindingMessagePattern",
            "description": "Backchannel Binding Message Pattern",
            "minLength": 0,
            "type": "string"
        },
        "backchannelClientId": {
            "_id": "backchannelClientId",
            "description": "Backchannel Client Id",
            "minLength": 0,
            "type": "string"
        },
        "backchannelDeviceRegistrationEndpoint": {
            "_id": "backchannelDeviceRegistrationEndpoint",
            "description": "Backchannel Device Registration Endpoint",
            "minLength": 0,
            "type": "string"
        },
        "backchannelLoginHintClaims": {
            "_id": "backchannelLoginHintClaims",
            "additionalItems": true,
            "description": "Backchannel Login Hint Claims",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "_uniqueItems": true
        },
        "backchannelRedirectUri": {
            "_id": "backchannelRedirectUri",
            "description": "Backchannel Redirect Uri",
            "minLength": 0,
            "type": "string"
        },
        "backchannelTokenDeliveryModesSupported": {
            "_id": "backchannelTokenDeliveryModesSupported",
            "description": "Backchannel Token Delivery Modes Supported.",
            "format": "select",
            "items": {
                "enum": [
                    "poll",
                    "ping",
                    "push"
                ],
                "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "_uniqueItems": true
        },
        "backchannelUserCodeParameterSupported": {
            "_id": "backchannelUserCodeParameterSupported",
            "description": "Backchannel User Code Parameter Supported",
            "type": "boolean"
        },
        "baseEndpoint": {
            "_format": "url",
            "_id": "baseEndpoint",
            "description": "Base URL of the Endpoints.",
            "minLength": 1,
            "type": "string"
        },
        "changeSessionIdOnAuthentication": {
            "_id": "changeSessionIdOnAuthentication",
            "description": "Boolean value specifying whether change session_id on authentication. Default value is true.",
            "type": "boolean"
        },
        "checkSessionIFrame": {
            "_format": "url",
            "_id": "checkSessionIFrame",
            "description": "URL of an OP iframe that supports cross-origin communications for session state information with the RP Client, using the HTML5 postMessage API.",
            "minLength": 1,
            "type": "string"
        },
        "cibaEndUserNotificationConfig": {
            "_id": "cibaEndUserNotificationConfig",
            "description": "CIBA End User Notification Config",
            "properties": {
                "apiKey": {
                    "_id": "apiKey",
                    "description": "API Key",
                    "minLength": 1,
                    "type": "string"
                },
                "appId": {
                    "_id": "appId",
                    "description": "App ID",
                    "minLength": 1,
                    "type": "string"
                },
                "authDomain": {
                    "_id": "authDomain",
                    "description": "Auth Domain",
                    "minLength": 1,
                    "type": "string"
                },
                "databaseURL": {
                    "_id": "databaseURL",
                    "description": "Database URL",
                    "minLength": 1,
                    "type": "string"
                },
                "messagingSenderId": {
                    "_id": "messagingSenderId",
                    "description": "Messaging Sender ID",
                    "minLength": 1,
                    "type": "string"
                },
                "notificationKey": {
                    "_id": "notificationKey",
                    "description": "Notification Key",
                    "minLength": 1,
                    "type": "string"
                },
                "notificationUrl": {
                    "_id": "notificationUrl",
                    "description": "Notification URL",
                    "minLength": 1,
                    "type": "string"
                },
                "projectId": {
                    "_id": "projectId",
                    "description": "Project ID",
                    "minLength": 1,
                    "type": "string"
                },
                "publicVapidKey": {
                    "_id": "publicVapidKey",
                    "description": "Public Vapid Key",
                    "minLength": 1,
                    "type": "string"
                },
                "storageBucket": {
                    "_id": "storageBucket",
                    "description": "Storage Bucket",
                    "minLength": 1,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "claimTypesSupported": {
            "_id": "claimTypesSupported",
            "description": "A list of the Claim Types that the OpenID Provider supports.",
            "format": "select",
            "items": {
                "enum": [
                    "normal"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "claimsLocalesSupported": {
            "_id": "claimsLocalesSupported",
            "additionalItems": true,
            "description": "Languages and scripts supported for values in Claims being returned.",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "claimsParameterSupported": {
            "_id": "claimsParameterSupported",
            "description": "Specifies whether the OP supports use of the claims parameter.",
            "type": "boolean"
        },
        "cleanServiceBaseDns": {
            "_id": "cleanServiceBaseDns",
            "additionalItems": true,
            "description": "List of additional base dns under which AS will look up for expired entities ",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "_uniqueItems": true
        },
        "cleanServiceBatchChunkSize": {
            "_id": "cleanServiceBatchChunkSize",
            "description": "Each clean up iteration fetches chunk of expired data per base dn and removes it from storage.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "cleanServiceInterval": {
            "_id": "cleanServiceInterval",
            "description": "Time interval for the Clean Service in seconds.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "clientAuthenticationFilters": {
            "_id": "clientAuthenticationFilters",
            "additionalItems": true,
            "description": "Client authentication filters.",
            "items": {
                "additionalProperties": true,
                "properties": {
                    "baseDn": {
                        "_id": "baseDn",
                        "minLength": 1,
                        "type": "string"
                    },
                    "bind": {
                        "_id": "bind",
                        "minLength": 1,
                        "type": "string"
                    },
                    "bindPasswordAttribute": {
                        "_id": "bindPasswordAttribute",
                        "minLength": 1,
                        "type": "string"
                    },
                    "filter": {
                        "_id": "filter",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": false
        },
        "clientAuthenticationFiltersEnabled": {
            "_id": "clientAuthenticationFiltersEnabled",
            "description": "Boolean value specifying whether to enable client authentication filters.",
            "type": "boolean"
        },
        "clientBlackList": {
            "_id": "clientBlackList",
            "additionalItems": true,
            "description": "Black List for Client Redirection URIs.",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "_uniqueItems": true
        },
        "clientInfoEndpoint": {
            "_format": "url",
            "_id": "clientInfoEndpoint",
            "description": "The URL of the Client Info Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "clientRegDefaultToCodeFlowWithRefresh": {
            "_id": "clientRegDefaultToCodeFlowWithRefresh",
            "description": "Boolean value specifying whether to add Authorization Code Flow with Refresh grant during client registration.",
            "type": "boolean"
        },
        "clientWhiteList": {
            "_id": "clientWhiteList",
            "additionalItems": true,
            "description": "White List for Client Redirection URIs.",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "_uniqueItems": true
        },
        "configurationUpdateInterval": {
            "_id": "configurationUpdateInterval",
            "description": "The interval for configuration update in seconds.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "consentGatheringScriptBackwardCompatibility": {
            "_id": "consentGatheringScriptBackwardCompatibility",
            "description": "Boolean value specifying whether turn on Consent Gathering Script backward compatibility mode. If true AS will pick up script with higher level globally. If false (default) AS will pick up script based on client configuration.",
            "type": "boolean"
        },
        "corsConfigurationFilters": {
            "_id": "corsConfigurationFilters",
            "additionalItems": true,
            "description": "CORS Configuration filters.",
            "items": {
                "additionalProperties": true,
                "properties": {
                    "corsAllowedHeaders": {
                        "_id": "corsAllowedHeaders",
                        "description": "",
                        "minLength": 1,
                        "type": "string"
                    },
                    "corsAllowedMethods": {
                        "_id": "corsAllowedMethods",
                        "description": "",
                        "minLength": 1,
                        "type": "string"
                    },
                    "corsAllowedOrigins": {
                        "_id": "corsAllowedOrigins",
                        "description": "",
                        "minLength": 1,
                        "type": "string"
                    },
                    "corsEnabled": {
                        "_id": "corsEnabled",
                        "description": "",
                        "type": "boolean"
                    },
                    "corsExposedHeaders": {
                        "_id": "corsExposedHeaders",
                        "description": "",
                        "minLength": 1,
                        "type": "string"
                    },
                    "corsLoggingEnabled": {
                        "_id": "corsLoggingEnabled",
                        "description": "",
                        "type": "boolean"
                    },
                    "corsPreflightMaxAge": {
                        "_id": "corsPreflightMaxAge",
                        "description": "",
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false,
                        "maximum": 2147483647,
                        "minimum": 1,
                        "multipleOf": 1,
                        "type": "integer"
                    },
                    "corsRequestDecorate": {
                        "_id": "corsRequestDecorate",
                        "description": "",
                        "type": "boolean"
                    },
                    "corsSupportCredentials": {
                        "_id": "corsSupportCredentials",
                        "description": "",
                        "type": "boolean"
                    },
                    "filterName": {
                        "_id": "filterName",
                        "description": "",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": false
        },
        "cssLocation": {
            "_id": "cssLocation",
            "description": "The location for CSS files.",
            "minLength": 1,
            "type": "string"
        },
        "customHeadersWithAuthorizationResponse": {
            "_id": "customHeadersWithAuthorizationResponse",
            "description": "Boolean value specifying whether to enable Custom Response Header parameter to return custom headers with the Authorization Response.",
            "type": "boolean"
        },
        "defaultSignatureAlgorithm": {
            "_id": "defaultSignatureAlgorithm",
            "description": "The default signature algorithm to sign ID Tokens.",
            "enum": [
                "HS256",
                "HS384",
                "HS512",
                "RS256",
                "RS384",
                "RS512",
                "ES256",
                "ES384",
                "ES512"
            ],
            "type": "string"
        },
        "defaultSubjectType": {
            "_id": "defaultSubjectType",
            "description": "Default Subject Type used for Dynamic Client Registration.",
            "enum": [
                "public",
                "pairwise"
            ],
            "type": "string"
        },
        "disableJdkLogger": {
            "_id": "disableJdkLogger",
            "description": "Boolean value specifying whether to enable JDK Loggers.",
            "type": "boolean"
        },
        "disableU2fEndpoint": {
            "_id": "disableU2fEndpoint",
            "description": "Enable/Disable U2F endpoints.",
            "type": "boolean"
        },
        "displayValuesSupported": {
            "_id": "displayValuesSupported",
            "description": "A list of the display parameter values that the OpenID Provider supports.",
            "format": "select",
            "items": {
                "enum": [
                    "page",
                    "popup"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "dnName": {
            "_id": "dnName",
            "description": "DN of certificate issuer.",
            "minLength": 1,
            "type": "string"
        },
        "dynamicGrantTypeDefault": {
            "_id": "dynamicGrantTypeDefault",
            "description": "A list of the OAuth 2.0 Grant Type values that it's possible to set via client registration API.",
            "format": "select",
            "items": {
                "enum": [
                    "authorization_code",
                    "implicit",
                    "password",
                    "client_credentials",
                    "refresh_token",
                    "urn:ietf:params:oauth:grant-type:uma-ticket",
                    "urn:openid:params:grant-type:ciba"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "dynamicRegistrationCustomAttributes": {
            "_id": "dynamicRegistrationCustomAttributes",
            "additionalItems": true,
            "description": "Custom attributes for the Dynamic registration.",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "dynamicRegistrationCustomObjectClass": {
            "_id": "dynamicRegistrationCustomObjectClass",
            "description": "LDAP custom object class for dynamic registration.",
            "minLength": 1,
            "type": "string"
        },
        "dynamicRegistrationEnabled": {
            "_id": "dynamicRegistrationEnabled",
            "description": "Boolean value specifying whether to enable Dynamic Registration.",
            "type": "boolean"
        },
        "dynamicRegistrationExpirationTime": {
            "_id": "dynamicRegistrationExpirationTime",
            "description": "Expiration time in seconds for clients created with dynamic registration, -1 means never expire.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 0,
            "multipleOf": 1,
            "type": "integer"
        },
        "dynamicRegistrationPasswordGrantTypeEnabled": {
            "_id": "dynamicRegistrationPasswordGrantTypeEnabled",
            "description": "Boolean value specifying whether to enable Password Grant Type during Dynamic Registration.",
            "type": "boolean"
        },
        "dynamicRegistrationPersistClientAuthorizations": {
            "_id": "dynamicRegistrationPersistClientAuthorizations",
            "description": "Boolean value specifying whether to persist client authorizations.",
            "type": "boolean"
        },
        "dynamicRegistrationScopesParamEnabled": {
            "_id": "dynamicRegistrationScopesParamEnabled",
            "description": "Boolean value specifying whether to enable scopes parameter in dynamic registration.",
            "type": "boolean"
        },
        "enableClientGrantTypeUpdate": {
            "_id": "enableClientGrantTypeUpdate",
            "description": "Boolean value to specify if client can update Grant Type values.",
            "type": "boolean"
        },
        "enabledOAuthAuditLogging": {
            "_id": "enabledOAuthAuditLogging",
            "description": "enabled OAuth Audit Logging.",
            "type": "boolean"
        },
        "endSessionEndpoint": {
            "_format": "url",
            "_id": "endSessionEndpoint",
            "description": "URL at the OP to which an RP can perform a redirect to request that the End-User be logged out at the OP.",
            "minLength": 1,
            "type": "string"
        },
        "endSessionWithAccessToken": {
            "_id": "endSessionWithAccessToken",
            "description": "Accept access token to call end_session endpoint.",
            "type": "boolean"
        },
        "errorHandlingMethod": {
            "_id": "errorHandlingMethod",
            "description": "A list of possible error handling methods.",
            "enum": [
                "internal",
                "remote"
            ],
            "type": "string"
        },
        "errorReasonEnabled": {
            "_id": "errorReasonEnabled",
            "description": "Boolean value specifying whether to return detailed reason of the error from AS. Default value is false.",
            "type": "boolean"
        },
        "expirationNotificatorEnabled": {
            "_id": "expirationNotificatorEnabled",
            "description": "Boolean value specifying whether expiration notificator is enabled (used to identify expiration for persistence that support TTL, like Couchbase). Default value is true",
            "type": "boolean"
        },
        "externalLoggerConfiguration": {
            "_id": "externalLoggerConfiguration",
            "description": "Path to external log4j2 logging configuration.",
            "minLength": 1,
            "type": "string"
        },
        "fapiCompatibility": {
            "_id": "fapiCompatibility",
            "description": "Boolean value specifying whether turn on FAPI compatibility mode. If true AS behaves in more strict mode.",
            "type": "boolean"
        },
        "forceIdTokenHintPrecense": {
            "_id": "forceIdTokenHintPrecense",
            "description": "Boolean value specifying whether force id_token_hint parameter precense (false by default)",
            "type": "boolean"
        },
        "forceOfflineAccessScopeToEnableRefreshToken": {
            "_id": "forceOfflineAccessScopeToEnableRefreshToken",
            "description": "Boolean value specifying whether force offline_access scope to enable refresh_token grant type. Default value is true.",
            "type": "boolean"
        },
        "frontChannelLogoutSessionSupported": {
            "_id": "frontChannelLogoutSessionSupported",
            "description": "Boolean value to specify support for front channel logout session.",
            "type": "boolean"
        },
        "grantTypesSupported": {
            "_id": "grantTypesSupported",
            "description": "A list of the OAuth 2.0 Grant Type values that this OP supports.",
            "format": "select",
            "items": {
                "enum": [
                    "authorization_code",
                    "implicit",
                    "password",
                    "client_credentials",
                    "refresh_token",
                    "urn:ietf:params:oauth:grant-type:uma-ticket",
                    "urn:openid:params:grant-type:ciba"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "httpLoggingEnabled": {
            "_id": "httpLoggingEnabled",
            "description": "Enable/Disable request/response logging filter",
            "type": "boolean"
        },
        "httpLoggingExludePaths": {
            "_id": "httpLoggingExludePaths",
            "additionalItems": true,
            "description": "List of base URI for which request/response logging filter should not record activity.",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "_uniqueItems": true
        },
        "idGenerationEndpoint": {
            "_format": "url",
            "_id": "idGenerationEndpoint",
            "description": "URL for the ID Generation Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "idTokenEncryptionAlgValuesSupported": {
            "_id": "idTokenEncryptionAlgValuesSupported",
            "description": "A list of the JWE encryption algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.",
            "format": "select",
            "items": {
                "enum": [
                    "RSA1_5",
                    "RSA-OAEP",
                    "A128KW",
                    "A256KW"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "idTokenEncryptionEncValuesSupported": {
            "_id": "idTokenEncryptionEncValuesSupported",
            "description": "A list of the JWE encryption algorithms (enc values) supported by the OP for the ID Token to encode the Claims in a JWT.",
            "format": "select",
            "items": {
                "enum": [
                    "A128CBC+HS256",
                    "A256CBC+HS512",
                    "A128GCM",
                    "A256GCM"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "idTokenLifetime": {
            "_id": "idTokenLifetime",
            "description": "The lifetime of the ID Token.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "idTokenSigningAlgValuesSupported": {
            "_id": "idTokenSigningAlgValuesSupported",
            "description": "A list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.",
            "format": "select",
            "items": {
                "enum": [
                    "none",
                    "HS256",
                    "HS384",
                    "HS512",
                    "RS256",
                    "RS384",
                    "RS512",
                    "ES256",
                    "ES384",
                    "ES512",
                    "PS256",
                    "PS384",
                    "PS512"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "idTokenTokenBindingCnfValuesSupported": {
            "_id": "idTokenTokenBindingCnfValuesSupported",
            "additionalItems": true,
            "description": "Array containing a list of the JWT Confirmation Method member names supported by the OP for Token Binding of ID Tokens. The presence of this parameter indicates that the OpenID Provider supports Token Binding of ID Tokens. If omitted, the default is that the OpenID Provider does not support Token Binding of ID Tokens.",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "imgLocation": {
            "_id": "imgLocation",
            "description": "The location for image files.",
            "minLength": 1,
            "type": "string"
        },
        "introspectionAccessTokenMustHaveUmaProtectionScope": {
            "_id": "introspectionAccessTokenMustHaveUmaProtectionScope",
            "description": "Reject introspection requests if access_token in Authorization header does not have uma_protection scope.",
            "type": "boolean"
        },
        "introspectionEndpoint": {
            "_format": "url",
            "_id": "introspectionEndpoint",
            "description": "URL for the Introspection Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "introspectionScriptBackwardCompatibility": {
            "_id": "introspectionScriptBackwardCompatibility",
            "description": "Boolean value specifying whether switch off client's introspection scripts (true value) and run all scripts that exists on server. Default value is false.",
            "type": "boolean"
        },
        "invalidateSessionCookiesAfterAuthorizationFlow": {
            "_id": "invalidateSessionCookiesAfterAuthorizationFlow",
            "description": "Boolean value to specify whether to invalidate `session_id` and `consent_session_id` cookies right after successful or unsuccessful authorization",
            "type": "boolean"
        },
        "issuer": {
            "_format": "url",
            "_id": "issuer",
            "description": "URL using the https scheme with no query or fragment component that the OP asserts as its Issuer Identifier.",
            "minLength": 1,
            "title": "Issuer",
            "type": "string"
        },
        "jmsBrokerURISet": {
            "_id": "jmsBrokerURISet",
            "description": "JMS Broker URI Set.",
            "format": "select",
            "type": "array"
        },
        "jmsPassword": {
            "_id": "jmsPassword",
            "description": "JMS Password.",
            "minLength": 1,
            "type": "string"
        },
        "jmsUserName": {
            "_id": "jmsUserName",
            "description": "JMS UserName.",
            "minLength": 1,
            "type": "string"
        },
        "jsLocation": {
            "_id": "jsLocation",
            "description": "The location for JavaScript files.",
            "minLength": 1,
            "type": "string"
        },
        "jwksAlgorithmsSupported": {
            "_id": "jwksAlgorithmsSupported",
            "description": "A list of algorithms that will be used in JWKS endpoint.",
            "format": "select",
            "items": {
                "enum": [
                    "RS256",
                    "RS384",
                    "RS512",
                    "ES256",
                    "ES384",
                    "ES512",
                    "PS256",
                    "PS384",
                    "PS512",
                    "RSA1_5",
                    "RSA-OAEP"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "jwksUri": {
            "_format": "url",
            "_id": "jwksUri",
            "description": "URL of the OP's JSON Web Key Set (JWK) document. This contains the signing key(s) the RP uses to validate signatures from the OP.",
            "minLength": 1,
            "type": "string"
        },
        "keepAuthenticatorAttributesOnAcrChange": {
            "_id": "keepAuthenticatorAttributesOnAcrChange",
            "description": "Boolean value specifying whether to keep authenticator attributes on ACR change.",
            "type": "boolean"
        },
        "keyRegenerationEnabled": {
            "_id": "keyRegenerationEnabled",
            "description": "Boolean value specifying whether to regenerate keys.",
            "type": "boolean"
        },
        "keyRegenerationInterval": {
            "_id": "keyRegenerationInterval",
            "description": "The interval for key regeneration in hours.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "keyStoreFile": {
            "_id": "keyStoreFile",
            "description": "The Key Store File (JKS).",
            "minLength": 1,
            "type": "string"
        },
        "keyStoreSecret": {
            "_id": "keyStoreSecret",
            "description": "The password of the Key Store.",
            "minLength": 1,
            "type": "string"
        },
        "legacyDynamicRegistrationScopeParam": {
            "_id": "legacyDynamicRegistrationScopeParam",
            "description": "Legacy Dynamic Registration Scopes JSON Array Param.",
            "type": "boolean"
        },
        "legacyIdTokenClaims": {
            "_id": "legacyIdTokenClaims",
            "description": "Include Claims in ID Token.",
            "type": "boolean"
        },
        "logClientIdOnClientAuthentication": {
            "_id": "logClientIdOnClientAuthentication",
            "description": "Boolean value to specify if application should log the Client ID on client authentication.",
            "type": "boolean"
        },
        "logClientNameOnClientAuthentication": {
            "_id": "logClientNameOnClientAuthentication",
            "description": "Boolean value to specify if application should log the Client Name on client authentication.",
            "type": "boolean"
        },
        "loggingLayout": {
            "_format": "select",
            "_id": "loggingLayout",
            "description": "Logging layout used for oxAuth loggers.",
            "enum": [
                "text",
                "json"
            ],
            "type": "string"
        },
        "loggingLevel": {
            "_format": "select",
            "_id": "loggingLevel",
            "description": "Logging level for oxAuth logers.",
            "enum": [
                "TRACE",
                "DEBUG",
                "INFO",
                "WARN",
                "ERROR",
                "FATAL",
                "OFF"
            ],
            "type": "string"
        },
        "metricReporterEnabled": {
            "_id": "metricReporterEnabled",
            "description": "Boolean value specifying whether to enable Metric Reporter.",
            "type": "boolean"
        },
        "metricReporterInterval": {
            "_id": "metricReporterInterval",
            "description": "The interval for metric reporter in seconds.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "metricReporterKeepDataDays": {
            "_id": "metricReporterKeepDataDays",
            "description": "The days to keep metric reported data.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "opPolicyUri": {
            "_format": "url",
            "_id": "opPolicyUri",
            "description": "URL that the OpenID Provider provides to the person registering the Client to read about the OP's requirements on how the Relying Party can use the data provided by the OP.",
            "minLength": 1,
            "type": "string"
        },
        "opTosUri": {
            "_format": "url",
            "_id": "opTosUri",
            "description": "URL that the OpenID Provider provides to the person registering the Client to read about OpenID Provider's terms of service.",
            "minLength": 1,
            "type": "string"
        },
        "openIdConfigurationEndpoint": {
            "_format": "url",
            "_id": "openIdConfigurationEndpoint",
            "description": "URL for the Open ID Connect Configuration Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "openIdDiscoveryEndpoint": {
            "_format": "url",
            "_id": "openIdDiscoveryEndpoint",
            "description": "URL for the Discovery Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "openidScopeBackwardCompatibility": {
            "_id": "openidScopeBackwardCompatibility",
            "description": "Set to false to only allow token endpoint request for openid scope with grant type equals to authorization_code, restrict access to userinfo to scope openid and only return id_token if scope contains openid.",
            "type": "boolean"
        },
        "openidSubAttribute": {
            "_id": "openidSubAttribute",
            "description": "LDAP attribute used for the sub claim.",
            "minLength": 1,
            "type": "string"
        },
        "oxElevenDeleteKeyEndpoint": {
            "_format": "url",
            "_id": "oxElevenDeleteKeyEndpoint",
            "description": "URL for the oxEleven Delete Key Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "oxElevenGenerateKeyEndpoint": {
            "_format": "url",
            "_id": "oxElevenGenerateKeyEndpoint",
            "description": "URL for the oxEleven Generate Key Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "oxElevenJwksEndpoint": {
            "_format": "url",
            "_id": "oxElevenJwksEndpoint",
            "description": "URL for the oxEleven JWKS Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "oxElevenSignEndpoint": {
            "_format": "url",
            "_id": "oxElevenSignEndpoint",
            "description": "URL for the oxEleven Sign Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "oxElevenTestModeToken": {
            "_id": "oxElevenTestModeToken",
            "description": "oxEleven Test Mode Token.",
            "minLength": 1,
            "type": "string"
        },
        "oxElevenVerifySignatureEndpoint": {
            "_format": "url",
            "_id": "oxElevenVerifySignatureEndpoint",
            "description": "URL for the oxEleven Verify Signature Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "oxId": {
            "_format": "url",
            "_id": "oxId",
            "description": "URL for the Inum generator Service.",
            "minLength": 1,
            "type": "string"
        },
        "oxOpenIdConnectVersion": {
            "_id": "oxOpenIdConnectVersion",
            "description": "OpenID Connect Version.",
            "minLength": 1,
            "type": "string"
        },
        "pairwiseCalculationKey": {
            "_id": "pairwiseCalculationKey",
            "description": "Key to calculate algorithmic pairwise IDs.",
            "minLength": 1,
            "type": "string"
        },
        "pairwiseCalculationSalt": {
            "_id": "pairwiseCalculationSalt",
            "description": "Salt to calculate algorithmic pairwise IDs.",
            "minLength": 1,
            "type": "string"
        },
        "pairwiseIdType": {
            "_id": "pairwiseIdType",
            "description": "The pairwise ID type.",
            "enum": [
                "persistent",
                "algorithmic"
            ],
            "type": "string"
        },
        "persistIdTokenInLdap": {
            "_id": "persistIdTokenInLdap",
            "description": "Specifies whether to persist id_token into LDAP (otherwise saves into cache).",
            "type": "boolean"
        },
        "persistRefreshTokenInLdap": {
            "_id": "persistRefreshTokenInLdap",
            "description": "Specifies whether to persist refresh_token into LDAP (otherwise saves into cache).",
            "type": "boolean"
        },
        "personCustomObjectClassList": {
            "_id": "personCustomObjectClassList",
            "additionalItems": true,
            "description": "LDAP custom object class list for dynamic person enrollment.",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "_uniqueItems": true
        },
        "refreshTokenLifetime": {
            "_id": "refreshTokenLifetime",
            "description": "The lifetime of the Refresh Token.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "registrationEndpoint": {
            "_format": "url",
            "_id": "registrationEndpoint",
            "description": "URL of the Registration Enpoint.",
            "minLength": 1,
            "type": "string"
        },
        "rejectJwtWithNoneAlg": {
            "_id": "rejectJwtWithNoneAlg",
            "description": "Boolean value specifying whether reject JWT requested or validated with algorithm None. Default value is true.",
            "type": "boolean"
        },
        "removeRefreshTokensForClientOnLogout": {
            "_id": "removeRefreshTokensForClientOnLogout",
            "description": "Boolean value specifying whether to remove refresh tokens on logout. Default value is true.",
            "type": "boolean"
        },
        "requestObjectEncryptionAlgValuesSupported": {
            "_id": "requestObjectEncryptionAlgValuesSupported",
            "description": "A list of the JWE encryption algorithms (alg values) supported by the OP for Request Objects.",
            "format": "select",
            "items": {
                "enum": [
                    "RSA1_5",
                    "RSA-OAEP",
                    "A128KW",
                    "A256KW"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "requestObjectEncryptionEncValuesSupported": {
            "_id": "requestObjectEncryptionEncValuesSupported",
            "description": "A list of the JWE encryption algorithms (enc values) supported by the OP for Request Objects.",
            "format": "select",
            "items": {
                "enum": [
                    "A128CBC+HS256",
                    "A256CBC+HS512",
                    "A128GCM",
                    "A256GCM"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "requestObjectSigningAlgValuesSupported": {
            "_id": "requestObjectSigningAlgValuesSupported",
            "description": "A list of the JWS signing algorithms (alg values) supported by the OP for Request Objects.",
            "format": "select",
            "items": {
                "enum": [
                    "none",
                    "HS256",
                    "HS384",
                    "HS512",
                    "RS256",
                    "RS384",
                    "RS512",
                    "ES256",
                    "ES384",
                    "ES512",
                    "PS256",
                    "PS384",
                    "PS512"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "requestParameterSupported": {
            "_id": "requestParameterSupported",
            "description": "Boolean value specifying whether the OP supports use of the request parameter.",
            "type": "boolean"
        },
        "requestUriParameterSupported": {
            "_id": "requestUriParameterSupported",
            "description": "Boolean value specifying whether the OP supports use of the request_uri parameter.",
            "type": "boolean"
        },
        "requireRequestUriRegistration": {
            "_id": "requireRequestUriRegistration",
            "description": "Boolean value specifying whether the OP requires any request_uri values used to be pre-registered using the request_uris registration parameter.",
            "type": "boolean"
        },
        "responseModesSupported": {
            "_id": "responseModesSupported",
            "description": "A list of the OAuth 2.0 Response Mode values that this OP supports.",
            "format": "select",
            "items": {
                "enum": [
                    "query",
                    "fragment",
                    "form_post"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "responseTypesSupported": {
            "_id": "responseTypesSupported",
            "description": "A list of the OAuth 2.0 response_type values that this OP supports.",
            "format": "select",
            "items": {
                "format": "select",
                "items": {
                    "enum": [
                        "code",
                        "token",
                        "id_token"
                    ],
                    "type": "string"
                },
                "minItems": 1,
                "type": "array",
                "_uniqueItems": true
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "returnClientSecretOnRead": {
            "_id": "returnClientSecretOnRead",
            "description": "Boolean value specifying whether a client_secret is returned on client GET or PUT. Set to false by default which means to not return secret.",
            "type": "boolean"
        },
        "sectorIdentifierEndpoint": {
            "_format": "url",
            "_id": "sectorIdentifierEndpoint",
            "description": "URL for the Sector Identifier Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "serviceDocumentation": {
            "_format": "url",
            "_id": "serviceDocumentation",
            "description": "URL of a page containing human-readable information that developers might want or need to know when using the OpenID Provider.",
            "minLength": 1,
            "type": "string"
        },
        "sessionAsJwt": {
            "_id": "sessionAsJwt",
            "description": "Experimental feature. Do not use in production!",
            "type": "boolean"
        },
        "sessionIdEnabled": {
            "_id": "sessionIdEnabled",
            "description": "Boolean value specifying whether to enable authentication by session_id.",
            "type": "boolean"
        },
        "sessionIdLifetime": {
            "_id": "sessionIdLifetime",
            "description": "The lifetime of session id in seconds. If 0 or -1 then expiration is not set. `session_id` cookie expires when browser session ends.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": -1,
            "multipleOf": 1,
            "type": "integer"
        },
        "sessionIdPersistOnPromptNone": {
            "_id": "sessionIdPersistOnPromptNone",
            "description": "Boolean value specifying whether to persist session ID on prompt none.",
            "type": "boolean"
        },
        "sessionIdRequestParameterEnabled": {
            "_id": "sessionIdRequestParameterEnabled",
            "description": "Boolean value specifying whether to enable session_id HTTP request parameter.",
            "type": "boolean"
        },
        "sessionIdUnauthenticatedUnusedLifetime": {
            "_id": "sessionIdUnauthenticatedUnusedLifetime",
            "description": "The lifetime for unused unauthenticated session states.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "sessionIdUnusedLifetime": {
            "_id": "sessionIdUnusedLifetime",
            "description": "The lifetime for unused session states.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "shareSubjectIdBetweenClientsWithSameSectorId": {
            "_id": "shareSubjectIdBetweenClientsWithSameSectorId",
            "description": "Share Subject ID between clients with same Sector ID.",
            "type": "boolean"
        },
        "skipAuthorizationForOpenIdScopeAndPairwiseId": {
            "_id": "skipAuthorizationForOpenIdScopeAndPairwiseId",
            "description": "If a client has only openid scope and pairwise id, person should not have to authorize.",
            "type": "boolean"
        },
        "spontaneousScopeLifetime": {
            "_id": "spontaneousScopeLifetime",
            "description": "The lifetime of spontaneous scope in seconds.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "subjectTypesSupported": {
            "_id": "subjectTypesSupported",
            "description": "A list of the Subject Identifier types that this OP supports. Valid types include pairwise and public.",
            "format": "select",
            "items": {
                "enum": [
                    "public",
                    "pairwise"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "tokenEndpoint": {
            "_format": "url",
            "_id": "tokenEndpoint",
            "description": "The URL of the Token Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "tokenEndpointAuthMethodsSupported": {
            "_id": "tokenEndpointAuthMethodsSupported",
            "description": "A list of Client Authentication methods supported by this Token Endpoint.",
            "format": "select",
            "items": {
                "enum": [
                    "client_secret_basic",
                    "client_secret_post",
                    "client_secret_jwt",
                    "private_key_jwt"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "tokenEndpointAuthSigningAlgValuesSupported": {
            "_id": "tokenEndpointAuthSigningAlgValuesSupported",
            "description": "A list of the JWS signing algorithms (alg values) supported by the Token Endpoint for the signature on the JWT used to authenticate the Client at the Token Endpoint for the private_key_jwt and client_secret_jwt authentication methods.",
            "format": "select",
            "items": {
                "enum": [
                    "HS256",
                    "HS384",
                    "HS512",
                    "RS256",
                    "RS384",
                    "RS512",
                    "ES256",
                    "ES384",
                    "ES512",
                    "PS256",
                    "PS384",
                    "PS512"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "tokenRevocationEndpoint": {
            "_format": "url",
            "_id": "tokenRevocationEndpoint",
            "description": "The URL of the Token (access_token or refresh_token) Revocation Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "trustedClientEnabled": {
            "_id": "trustedClientEnabled",
            "description": "Boolean value specifying whether a client is trusted and no authorization is required.",
            "type": "boolean"
        },
        "uiLocalesSupported": {
            "_id": "uiLocalesSupported",
            "additionalItems": true,
            "description": "Languages and scripts supported for the user interface.",
            "items": {
                "minLength": 1,
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "umaAddScopesAutomatically": {
            "_id": "umaAddScopesAutomatically",
            "description": "Add UMA scopes automatically if it is not registered yet",
            "type": "boolean"
        },
        "umaConfigurationEndpoint": {
            "_format": "url",
            "_id": "umaConfigurationEndpoint",
            "description": "URL for the UMA Configuration Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "umaGrantAccessIfNoPolicies": {
            "_id": "umaGrantAccessIfNoPolicies",
            "description": "Specify whether to grant access to resources if there is no any policies associated with scopes.",
            "type": "boolean"
        },
        "umaKeepClientDuringResourceSetRegistration": {
            "_id": "umaKeepClientDuringResourceSetRegistration",
            "description": "Save client information during resource registration",
            "type": "boolean"
        },
        "umaPctLifetime": {
            "_id": "umaPctLifetime",
            "description": "UMA PCT lifetime",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "umaResourceLifetime": {
            "_id": "umaResourceLifetime",
            "description": "UMA Resource lifetime",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "umaRestrictResourceToAssociatedClient": {
            "_id": "umaRestrictResourceToAssociatedClient",
            "description": "Restrict access to resource by associated client.",
            "type": "boolean"
        },
        "umaRptAsJwt": {
            "_id": "umaRptAsJwt",
            "description": "Issue RPT as JWT or as random string.",
            "type": "boolean"
        },
        "umaRptLifetime": {
            "_id": "umaRptLifetime",
            "description": "UMA RPT lifetime",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "umaTicketLifetime": {
            "_id": "umaTicketLifetime",
            "description": "UMA ticket lifetime",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 2147483647,
            "minimum": 1,
            "multipleOf": 1,
            "type": "integer"
        },
        "umaValidateClaimToken": {
            "_id": "umaValidateClaimToken",
            "description": "Validate claim_token as id_token assuming it is issued by local idp.",
            "type": "boolean"
        },
        "updateClientAccessTime": {
            "_id": "updateClientAccessTime",
            "description": "Boolean value to specify if application should update oxLastAccessTime/oxLastLogonTime attributes on client authentication.",
            "type": "boolean"
        },
        "updateUserLastLogonTime": {
            "_id": "updateUserLastLogonTime",
            "description": "Boolean value to specify if application should update oxLastLogonTime attribute on user authentication.",
            "type": "boolean"
        },
        "useCacheForAllImplicitFlowObjects": {
            "_id": "useCacheForAllImplicitFlowObjects",
            "description": "Boolean value to specify whether to persist all objects into cache during Implicit Flow.",
            "type": "boolean"
        },
        "useLocalCache": {
            "_id": "useLocalCache",
            "description": "Boolean value specifying whether to enable local in-memory cache for attributes, scopes, clients and organization configuration.",
            "type": "boolean"
        },
        "userInfoEncryptionAlgValuesSupported": {
            "_id": "userInfoEncryptionAlgValuesSupported",
            "description": "A list of the JWE encryption algorithms (alg values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.",
            "format": "select",
            "items": {
                "enum": [
                    "RSA1_5",
                    "RSA-OAEP",
                    "A128KW",
                    "A256KW"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "userInfoEncryptionEncValuesSupported": {
            "_id": "userInfoEncryptionEncValuesSupported",
            "description": "A list of the JWE encryption algorithms (enc values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.",
            "format": "select",
            "items": {
                "enum": [
                    "A128CBC+HS256",
                    "A256CBC+HS512",
                    "A128GCM",
                    "A256GCM"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "userInfoEndpoint": {
            "_format": "url",
            "_id": "userInfoEndpoint",
            "description": "The URL of the User Info Endpoint.",
            "minLength": 1,
            "type": "string"
        },
        "userInfoSigningAlgValuesSupported": {
            "_id": "userInfoSigningAlgValuesSupported",
            "description": "A list of the JWS signing algorithms (alg values) JWA supported by the UserInfo Endpoint to encode the Claims in a JWT.",
            "format": "select",
            "items": {
                "enum": [
                    "HS256",
                    "HS384",
                    "HS512",
                    "RS256",
                    "RS384",
                    "RS512",
                    "ES256",
                    "ES384",
                    "ES512",
                    "PS256",
                    "PS384",
                    "PS512"
                ],
                "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "_uniqueItems": true
        },
        "webKeysStorage": {
            "_id": "webKeysStorage",
            "description": "Web Key Storage Type.",
            "enum": [
                "keystore",
                "pkcs11"
            ],
            "type": "string"
        },
        "\u0441ookieDomain": {
            "_id": "\u0441ookieDomain",
            "description": "Cookie Domain (sets domain for all cookies created by OP)",
            "minLength": 1,
            "type": "string"
        }
    },
    "required": [
        "issuer",
        "baseEndpoint",
        "authorizationEndpoint",
        "tokenEndpoint",
        "tokenRevocationEndpoint",
        "userInfoEndpoint",
        "clientInfoEndpoint",
        "checkSessionIFrame",
        "endSessionEndpoint",
        "jwksUri",
        "registrationEndpoint",
        "openIdDiscoveryEndpoint",
        "openIdConfigurationEndpoint",
        "idGenerationEndpoint",
        "introspectionEndpoint",
        "umaConfigurationEndpoint",
        "sectorIdentifierEndpoint",
        "oxElevenGenerateKeyEndpoint",
        "oxElevenSignEndpoint",
        "oxElevenVerifySignatureEndpoint",
        "oxElevenDeleteKeyEndpoint",
        "oxElevenJwksEndpoint",
        "openidSubAttribute",
        "responseTypesSupported",
        "responseModesSupported",
        "grantTypesSupported",
        "dynamicGrantTypeDefault",
        "subjectTypesSupported",
        "defaultSubjectType",
        "userInfoSigningAlgValuesSupported",
        "userInfoEncryptionAlgValuesSupported",
        "userInfoEncryptionEncValuesSupported",
        "idTokenSigningAlgValuesSupported",
        "idTokenEncryptionAlgValuesSupported",
        "idTokenEncryptionEncValuesSupported",
        "requestObjectSigningAlgValuesSupported",
        "requestObjectEncryptionAlgValuesSupported",
        "requestObjectEncryptionEncValuesSupported",
        "tokenEndpointAuthMethodsSupported",
        "tokenEndpointAuthSigningAlgValuesSupported",
        "dynamicRegistrationCustomAttributes",
        "displayValuesSupported",
        "claimTypesSupported",
        "serviceDocumentation",
        "claimsLocalesSupported",
        "uiLocalesSupported",
        "claimsParameterSupported",
        "requestParameterSupported",
        "requestUriParameterSupported",
        "requireRequestUriRegistration",
        "opPolicyUri",
        "opTosUri",
        "authorizationCodeLifetime",
        "refreshTokenLifetime",
        "idTokenLifetime",
        "accessTokenLifetime",
        "umaRptLifetime",
        "umaPctLifetime",
        "umaAddScopesAutomatically",
        "umaKeepClientDuringResourceSetRegistration",
        "cleanServiceInterval",
        "cleanServiceBatchChunkSize",
        "cleanServiceBaseDns",
        "keyRegenerationEnabled",
        "keyRegenerationInterval",
        "defaultSignatureAlgorithm",
        "oxOpenIdConnectVersion",
        "oxId",
        "dynamicRegistrationEnabled",
        "dynamicRegistrationExpirationTime",
        "dynamicRegistrationPersistClientAuthorizations",
        "trustedClientEnabled",
        "dynamicRegistrationScopesParamEnabled",
        "dynamicRegistrationCustomObjectClass",
        "personCustomObjectClassList",
        "authenticationFiltersEnabled",
        "clientAuthenticationFiltersEnabled",
        "clientRegDefaultToCodeFlowWithRefresh",
        "authenticationFilters",
        "clientAuthenticationFilters",
        "sessionIdUnusedLifetime",
        "sessionIdUnauthenticatedUnusedLifetime",
        "sessionIdEnabled",
        "sessionIdPersistOnPromptNone",
        "sessionIdLifetime",
        "configurationUpdateInterval",
        "cssLocation",
        "jsLocation",
        "imgLocation",
        "metricReporterInterval",
        "metricReporterKeepDataDays",
        "metricReporterEnabled",
        "pairwiseIdType",
        "pairwiseCalculationKey",
        "pairwiseCalculationSalt",
        "shareSubjectIdBetweenClientsWithSameSectorId",
        "webKeysStorage",
        "dnName",
        "keyStoreFile",
        "keyStoreSecret",
        "endSessionWithAccessToken",
        "legacyIdTokenClaims",
        "customHeadersWithAuthorizationResponse",
        "frontChannelLogoutSessionSupported",
        "updateUserLastLogonTime",
        "updateClientAccessTime",
        "enableClientGrantTypeUpdate",
        "loggingLevel",
        "loggingLayout",
        "disableJdkLogger",
        "corsConfigurationFilters",
        "logClientIdOnClientAuthentication",
        "logClientNameOnClientAuthentication",
        "authorizationRequestCustomAllowedParameters",
        "legacyDynamicRegistrationScopeParam",
        "openidScopeBackwardCompatibility",
        "skipAuthorizationForOpenIdScopeAndPairwiseId",
        "httpLoggingEnabled",
        "httpLoggingExludePaths",
        "externalLoggerConfiguration",
        "disableU2fEndpoint",
        "authenticationProtectionConfiguration",
        "errorHandlingMethod",
        "oxElevenTestModeToken",
        "enabledOAuthAuditLogging",
        "jmsBrokerURISet",
        "jmsUserName",
        "jmsPassword",
        "useLocalCache",
        "jwksAlgorithmsSupported",
        "keepAuthenticatorAttributesOnAcrChange",
        "backchannelAuthenticationEndpoint",
        "backchannelTokenDeliveryModesSupported",
        "backchannelAuthenticationRequestSigningAlgValuesSupported",
        "backchannelClientId",
        "backchannelRedirectUri",
        "backchannelUserCodeParameterSupported",
        "backchannelBindingMessagePattern",
        "backchannelAuthenticationResponseExpiresIn",
        "backchannelAuthenticationResponseInterval",
        "backchannelLoginHintClaims",
        "cibaEndUserNotificationConfig"
    ],
    "title": "oxauth-config.xml",
    "type": "object"
}
