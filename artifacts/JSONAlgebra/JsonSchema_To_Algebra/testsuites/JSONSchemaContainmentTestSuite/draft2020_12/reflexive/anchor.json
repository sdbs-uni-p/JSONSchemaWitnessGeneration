[
    {
        "id": 1,
        "schema1": {
            "$ref": "#foo",
            "$defs": {
                "A": {
                    "$anchor": "foo",
                    "type": "integer"
                }
            }
        },
        "schema2": {
            "$ref": "#foo",
            "$defs": {
                "A": {
                    "$anchor": "foo",
                    "type": "integer"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 2,
        "schema1": {
            "$ref": "http://localhost:1234/bar#foo",
            "$defs": {
                "A": {
                    "$id": "http://localhost:1234/bar",
                    "$anchor": "foo",
                    "type": "integer"
                }
            }
        },
        "schema2": {
            "$ref": "http://localhost:1234/bar#foo",
            "$defs": {
                "A": {
                    "$id": "http://localhost:1234/bar",
                    "$anchor": "foo",
                    "type": "integer"
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 3,
        "schema1": {
            "$id": "http://localhost:1234/root",
            "$ref": "http://localhost:1234/nested.json#foo",
            "$defs": {
                "A": {
                    "$id": "nested.json",
                    "$defs": {
                        "B": {
                            "$anchor": "foo",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "schema2": {
            "$id": "http://localhost:1234/root",
            "$ref": "http://localhost:1234/nested.json#foo",
            "$defs": {
                "A": {
                    "$id": "nested.json",
                    "$defs": {
                        "B": {
                            "$anchor": "foo",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    },
    {
        "id": 4,
        "schema1": {
            "$defs": {
                "anchor_in_enum": {
                    "enum": [
                        {
                            "$anchor": "my_anchor",
                            "type": "null"
                        }
                    ]
                },
                "real_identifier_in_schema": {
                    "$anchor": "my_anchor",
                    "type": "string"
                },
                "zzz_anchor_in_const": {
                    "const": {
                        "$anchor": "my_anchor",
                        "type": "null"
                    }
                }
            },
            "anyOf": [
                {
                    "$ref": "#/$defs/anchor_in_enum"
                },
                {
                    "$ref": "#my_anchor"
                }
            ]
        },
        "schema2": {
            "$defs": {
                "anchor_in_enum": {
                    "enum": [
                        {
                            "$anchor": "my_anchor",
                            "type": "null"
                        }
                    ]
                },
                "real_identifier_in_schema": {
                    "$anchor": "my_anchor",
                    "type": "string"
                },
                "zzz_anchor_in_const": {
                    "const": {
                        "$anchor": "my_anchor",
                        "type": "null"
                    }
                }
            },
            "anyOf": [
                {
                    "$ref": "#/$defs/anchor_in_enum"
                },
                {
                    "$ref": "#my_anchor"
                }
            ]
        },
        "tests": {
            "s1SubsetEqOfs2": true,
            "s2SubsetEqOfs1": true
        }
    }
]